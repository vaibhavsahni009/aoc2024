# from collections import defaultdict
# import heapq
# # day 16 wooho
# data="""#############################################################################################################################################
# #...#.............#...................#.....#.#...............#.....#...#.......#.................#...#.........#.......#..................E#
# #.###.#######.###.#.###.###.#########.#.###.#.#.#########.###.#.#.###.#.#.#.###.#####.#.#####.#.###.#.#.#######.#.#.###.###.#####.#.#.#######
# #.....#.....#...#.....#...#...#.....#...#.....#.#...#.......#.#.#...#...............#...#.....#.....#.#.....#...#.#...#...#.#.#...#.#.......#
# #.#####.#.#####.###.#.###.###.#.###.###.#######.###.#.###.#.#.#.###.#.#######.#.#.#.###.#.###.###.###.#####.#.###.###.###.#.#.#.#.#.#.#####.#
# #.....#.#.....#.#.#...#.....#.#...#.#...#.......#...#.....#.#.#...#.....#.....#...#...#.#.#.#...#...#.......#.....#...#.....#.#...#...#...#.#
# #####.#####.###.#.#.#########.#.###.#.###.#######.#.#####.#.#.###.#######.#####.#.###.#.#.#.#.#.#########.#########.#.#######.#.#.###.#.#.#.#
# #...#.#.....#...#.#.#.........#.#...#...#.....#...#...#...#.....#.#.............#...#.#...#...#.........#.#...#.....#.#...#.........#.#.....#
# ###.#.#.#####.###.#.#.#########.#.#.#.#.#####.###.#.#.#.#.#######.#.#######.#######.#.#.###.#.###.#####.#.#.#.#.###.###.#.#####.#.#.#.#.#.#.#
# #...#...#.....#...#.#...#.......#.....#.......#...#...#.............................#.............#...#.#.#.#...#...#...#.#.....#...#.#.#.#.#
# #.#####.#.#####.###.#.#.#.#########.#.#.#.#####.###.#####.#########.#.###.#.#####.###.#.#.###.#####.#.#.#.#.#########.###.#.###.#.#.#.#.#.#.#
# #.......#.....#.....#.#.......#...#...#.........#.....#.......#...#.#...#.#.....#.#.....#.#...#.....#.#.#.#...#.........#.#.#.....#.....#.#.#
# #############.###.#.###########.#.#.#.###.#.#######.#.###.#.#.###.#.#####.#####.#.###.#####.#.#.#####.#.#.###.#.#########.#.#.#.#.###.###.#.#
# #.....#.....#...#...............#...................#.....#.#...#.#...#.......#.#...#.#.....#...#.....#.#...#...#.#.....#.#.#...#.#.....#.#.#
# #.#.#.#.###.###.###################.#.#.#.#.#.#####.#####.#.###.#.###.#.#####.#.###.###.#.#.#####.#####.#######.#.#.###.#.#.#.#.#.###.#.#.#.#
# #.#.#...#...#...#.....#.......#.....#.#.....#.#.#...#...#.#...#...#...#.....#.....#.#...#.......#.#...#.......#...#.#.#.#.....#.#...#...#.#.#
# #.#.#####.###.###.#####.###.#.#####.#.###.###.#.#.###.###.###.#####.###.###.#####.#.#.###########.#.#.#######.#####.#.#.#.#####.#.#.#.#.#.#.#
# #.#.....#...#...#...#.....#.#.#...#.#.........#.#...#.....#...#...#.#.#.#...#.......#.#.#...#.....#.#.......#.#.....#.#.#.#.....#.#.#.#.#.#.#
# #.#.#.#####.###.#.#.#.#####.#.#.#.#.###########.###.#.#####.#.#.#.#.#.#.#.###.#######.#.#.#.#.#####.#####.#.#.#.#####.#.#.#.###.###.#.#.#.#.#
# #.#.#.#...#.#...#.#...#.....#...#...#.#.............#...#...#.#.#...#...#.....#.......#...#.#...#.#.....#.#.#.#.#...#.#.#.#...#.....#...#.#.#
# #.#.###.#.#.#.###.#####.#.#######.#.#.#.###############.#.###.#.#######.#######.#######.###.###.#.###.#.#.###.#.#.#.#.#.#.###.#.#######.#.#.#
# #.#.....#.#...#...#.....#.#...#...#.#.#...#...#.......#...#...#.......#.......#...#...#.#...#...#...#.#.#.....#...#.#...#.#...#...#.....#...#
# #.#.###.#.#.#######.###.###.#.###.#.#.###.###.#.#####.#####.#########.#.#####.###.#.#.#.#.#.#.#####.#.#.###########.#.###.#.#.#.#.#.###.#.#.#
# #.....#.................#...#...#...#...#...#.#...#.#.........#.....#...#.......#.#.#...#.#.#.....#.#.#...............#.#.#.....#.#.........#
# #.#.#.#.###.#############.#####.#.#####.###.#.###.#.###########.###.###.#.#######.#.#####.#.#####.#.#.#.#############.#.#.#####.#.#.###.#.###
# #.................#...#...#...#.#...........#...#.#.#...........#.#...#.#...#.....#.#...#.......#.#...#...#...#.......#.#.#.................#
# ###.#.#.#.#.#####.#.#.#.###.#.#.#######.###.#.#.#.#.#.###########.###.#.#####.#######.#.#.#.###.#.###.###.###.#.###.#.#.#.#.#.#.###.#.###.#.#
# #.#.#.#.#.......#.#.#.......#.#.#.......#...#.#.....#...#.........#.#.#.....#.#.#.....#.#.#...#.#...#...#...#.#...#.#.#...#.#.#.#.....#.....#
# #.#.#.#.###.#.#.#.#.#######.#.#.###.#####.###.###.#####.#.#####.#.#.#.#.###.#.#.#.#.###.#.###.#####.###.###.#.###.#.#.#.#.###.#.#.#######.###
# #...#.#.#.....#.#.#.....#...#.#...#.#.....#.......#.....#.#.#...#.#.#.#...#...#.#.....#.#.#...#.....#.#.#...#.....#.#.#.#.....#.....#.......#
# #.###.#.#.#.#####.###.###.#.###.#.###.#########.###.#####.#.#.###.#.#.#######.#.#.###.#.###.###.#####.#.#.#########.#.#.#####.###.#.#.#####.#
# #.#...#...#.......#...#...#...#.#...#.#.........#...#...#.....#.#.#.#.#.....#.#.....#.#.....#...#.........#...........#.....#.....#.......#.#
# ###.#.#.###.#####.#.###.#####.#####.#.###.#.###.#.###.#.#####.#.#.#.#.#.###.#.#.#####.#####.#.###.###########.###.###.#.###.#####.#########.#
# #.......#...#.....#...#...#.#.....#...#...#...#.#.#...#.#.....#.#.#.#...#...#.#.#.....#.#...#...#...#.......#...#.#...#.#...#.....#...#...#.#
# #.###.#.#.#####.#####.###.#.#.###.#.###.#####.#.#.###.#.#.#####.#.#.#####.#.#.###.#####.#.#####.#####.#####.#.#.###.###.#####.###.#.#.#.#.#.#
# #.#...#.#.....#.#.......#.#.....#.#.#...#...#.#...#...#...#.........#.....#.#.....#...#.#.#...#...........#.#.#.....#...#.....#...#.#...#...#
# #.#.#.#.#####.###.#######.###.#.#.#.###.#.###.#.#.#.###########.###.#.###.#.#.#####.#.#.#.#.#.###########.#.#.#######.###.#####.#.#.#######.#
# #.#.....#...#.........#...#...#.#.#.....#.....#.#.#.#...#.....#.....#.#...#.#.#.....#.#.#.#.......#.#.......#.#.....#...........#.#.#.....#.#
# #.###.#.#.#.###.#######.###.###.#.#######.#######.#.#.#.#.###.#####.###.#.#.###.#.###.#.#.###.###.#.#.#####.#.#.###.#############.#.#.#####.#
# #.#...#...#.#...#.......#...#...#.....#...........#.#.#...#.#.....#.....#.#.....#.#...#.#.....#.....#.........#.#.....#.....#.......#.#...#.#
# #.#.#.#####.###.#.#####.#.###########.###.#########.#.#####.#####.#.#############.#.###.#.#####.#####.#####.###.#####.#.###.#.###.###.#.#.#.#
# #...#...#.#...#.#.......#.....#.....#...#.#...#.#.............#.#.#.#.....#.....#.#...#...#...#...#...#...#.#.....#.#.#...#...#.............#
# #####.#.#.###.#.#######.#####.#.#.#.###.###.#.#.#.###########.#.#.###.###.#.#.#.#.###.###.#.#.###.#.###.#.#.#####.#.#.###.#######.###.#######
# #.#.....#...#.#...#.....#...#.#.#.#...#.....#.#...#.........#...#...#.#.#.#.#.#.#...#...#.#.#...#.#.#...#.#.....#.#.#...#.......#...#...#...#
# #.#.#.###.#.#.#.###.#####.#.#.#.#.###########.#.###.#######.###.###.#.#.#.#.#.#.###.###.#.#.#.#.#.#.#.###.#####.#.#.###.#.#####.#.#.#.#.#.#.#
# #.#.#.....#.....#...#.....#...#.#.........#...#...#.......#...#.#.....#.#.#.#.#.....#.#.#.#.#...#.#...#...#...#.#.#...#.#.....#...#.#.#.#.#.#
# #.#.#.###.#######.###.#####.###.#####.###.#.#############.###.#.#.###.#.#.#.#.#####.#.#.###.#.#####.###.###.#.#.#.###.#.#########.#.#.#.###.#
# #.#...#.#.........#...#.....#.......#.#.#.#.............#.#...#.......#.#...#.#.#...#.......#.....#...#.#...#.#.#...#...........#.#.#.#.....#
# #.#####.#.#####.###.#####.###.#######.#.#.#########.#####.#.#####.#.###.#####.#.#.###.###########.#####.#.###.#.#.#.###########.#.#.#.#####.#
# #...............#.......#...#.#.....#.#...#.....#.#.#.....#.....#...#.........#.......#.........#.....#.....#.#.#.#...#.....#...............#
# #######.#.#####.#.#####.#####.#.###.#.#.###.###.#.#.#.#########.#.#####.###.#.#.#######.###.#########.#.#####.#.###.#.#.###.###.#.#.#.#.#.#.#
# #...............#.#...#.......#...#...#...........#...#.......#.#.#.....#...#.#.#.......#.#...........#...#...#...#.......#...#.#.#...#.....#
# #.###.###.#.#.###.#.#############.#######.#############.#.###.#.#.#.#.###.###.###.#######.#################.#####.#######.###.#.#.###.#####.#
# #.#.............#.#.............#...#.....#...........#...#...#.#.#.#.#...#...#...#.....#.......#...........#.....#...#...#.....#...#...#...#
# #.#.#####.###.#.#.###.#######.#####.#.#####.#########.#.#.#.###.#.###.#.###.#.#.###.###.#######.#.#.#########.#####.#.#.###.###.###.#.#.#.#.#
# #...........#...#.....#.......#.....#.#.....#.......#...#.#.#.#.#.....#...#.#.#.....#.#.......#...#.#.......#.#.....#.#...#...#...#...#.#...#
# #.###.#.#.###.#.#######.#.#.###.#.#####.#####.#####.#####.#.#.#.###.#####.#.#.#####.#.#######.#.###.#.#####.#.###.###.#.#####.###.###.#.#.#.#
# #...#.#.......#.#.......#.#.#...#.#.....#.....#.....#.....#.#.#.......#.#.#.........#.....#...#...#...#.....#.....#.#.#.#.................#.#
# ###.#.###.###.#.#.#######.#.#.#####.#####.#####.#####.#.###.#.#######.#.#.#####.#####.###.#.###.#######.###########.#.###.#.#.#.###.#.###.#.#
# #...#.....#.#...#.#.......#.#.....#.#...#...#.#...#.......#.........#.#.#.#...#...#.....#.#.......#.....#...........#...#.#.#.#.#...#.#...#.#
# #.#######.#.#####.#.###.###.#####.#.###.###.#.###.###.###.#####.#####.#.#.#.#.###.#.###.#.#######.#.###########.#######.#.#.#.#.#.###.#.#.#.#
# #.....#.#.#.......#.....#...#...#...#...#...#...#...#...#...#...#.....#.#...#.#.#...#.....#...#.#...#.........#...#...#...#.#.#...#...#.#...#
# #.###.#.#.#######.#######.###.#.#####.###.###.#####.#######.#.#.#.#####.#####.#.#####.###.#.#.#.#####.###.###.###.#.#.#####.#.#.###.###.#.#.#
# #.#.#.#.........#.#.....#...#.#.......#...#.......#.........#...#.#.........#...#.....#...........#...#...#.....#.#.#...#...#.#.#...#...#...#
# #.#.#.#########.#.#.###.###.###.#####.#.###.###.###############.#.#####.#.#####.#.#############.#.#.#.#.#######.#.#.###.#.###.#.###.#######.#
# #...#.......#...#.#.#.#.............#.....#.#.#.........#...#...#.....#.#.......#...#...#.........#.#...#...#.....#...#.#...#.#...#.......#.#
# ###.#######.#.###.#.#.###########.#.#####.#.#.###.#.#####.#.#.#####.#.#.#######.###.#.#.#####.#####.#.###.#.#####.###.#.###.#.###.#.#####.#.#
# #.................#.......#.......#.......#.#...#.#.#.....#.#.#.....#.#.#...........#.#.....#.....#.#.....#.....#...#.#.#...#.#.#.#.....#.#.#
# #.###.#.#.#.#####.#####.###.###############.#.###.###.#####.#.###.#.#.###.#######.###.#####.#######.###########.#####.#.#.###.#.#.#####.#.#.#
# #.#...#.#.#.#...#.#.....#...#.....#.....#...#.#...#...#...#...#...#.#...#...#.....#...#.....#...#...#.........#.......#.#...#.#.........#...#
# #.###.#.#.#.#.#.#.#.#####.###.#.#.#.#.#.#.###.#.###.#.#.#.#####.#.#.###.#.#.#####.#.###.#####.#.#.###.#######.#######.#.###.#.#########.#.###
# #...#...#.#...#.#...#.....#.#.#.#.#.#.#.#.#...#.#...#.#.#.#.....#...#.#.#.#.#...#.#.#.#.....#.#...#.......#.#.......#.....#.#...#...#...#...#
# ###.#####.#####.###.#.#####.#.#.###.#.###.###.#.#.###.#.#.#.###.###.#.###.#.#.#.#.#.#.#####.#.#####.###.#.#.#.#####.#.###.#.###.#.#.#.#.###.#
# #...#.....#...#.....#.#.......#.....#.....#...#...#...#.#...#.#...#.#...#.#...#.#.#.#.#.....#...#...#...#.#.#.#...#.#...#.#...#...#.#.......#
# #.#.#.###.#.#####.###.###.#################.#.#######.#.#####.#.#.#.#.#.#.#####.###.#.#.###.###.#####.#.#.#.#.###.#.###.#.###.#####.###.###.#
# #...#.#...#.#.......#...#.............#.....#.#.....#.#.#.......#.#...#.#.....#.......#.#...#.#.#...#.#.#...#...#...#...#.#.#.#.....#.#.....#
# #.###.#.###.#.#####.###.#############.#.###.#.###.#.#.#.###.#####.#####.#####.#########.#.#.#.#.#.#.#.#.#######.#.###.###.#.#.#.#####.#.#####
# #.....#...#...#...#...#.......#.....#.#.#...#.....#.#.....#.#...#...#.#...#.....#.....#.#.....#...#.#.#.#.......#...#...#...#.#.#.........#.#
# #######.#.#.#.#.#####.#######.###.#.#.###.#########.#.###.#.#.#.###.#.###.#######.###.#.#####.#####.#.#.#.#####.#######.#####.#.#######.#.#.#
# #...#...#.#.#...#.......#...#...#...#...#.....#...#.#...#.#...#...#.#...#.......#.#...#.....#.....#...#.#.#.....#.....#.....#.#.....#...#.#.#
# #.#.#.#.#.#.#.###.###.###.#.#.#.#.#####.#.###.#.###.#.#.#.#######.#.###.#######.#.#.#####.#.###.#######.#.#.#####.###.#####.#.#####.#.#.#.#.#
# #.#.#.#.#.#...#...#...#...#.#.#.#.#...#.#...#.#.#...#.#...#.......#...#...#.......#.....#.#...#...........#.#.....#.#.....#.#.#...#...#.#...#
# ###.#.#.#.#####.###.###.###.###.#.#.#.#.#####.#.#.#####.###.###.#####.#.#.#.###########.###.#.###.###########.#####.#####.#.#.#.#.#.###.###.#
# #...#.................#.#...#...#...#...#.....#.#.#...#.#...#...#.....#.#...#.....#.......#.#...#.#...#.......#.........#...#...#.#.#...#...#
# #.###.#.#####.#.#######.#.#.#.###.#.#####.#####.#.#.#.#.#.###.###.#######.###.###.#######.###.#.#.#.###.#######.###.#######.#####.###.#.#.###
# #.....#...#...#...#...#.#...#...#.#...#...#.........#.#.#.#.#...#.......#.#.....#.......#.....#.....#...#.......#.#.#.....#.#...#.#...#.....#
# #.#######.#.###.#.#.#.#.###.###.#.###.#.###.#########.#.#.#.###.###.#.#.###.#########.#.#####.#####.#.#.#.###.###.#.#.###.#.#.#.#.#.###.#.#.#
# #.......#.#...#.#.#.#...#.#...#.#.......#...#...#.....#.#.#.......#...#.....#.#.....#.#.#...#.....#.#.#.#...#.....#...#...#.#.#.#...#.....#.#
# #######.#.###.###.#.#####.###.#.#########.#.#.#.#.#.###.#.#.#####.###########.#.###.###.#.#.#####.###.#.#.#.#########.#.###.###.#####.#.###.#
# #...........#.....#.....#.......#...#.....#.#.#...#.#.....#.#...#.#.......#...#.#.......#.#.#.#.......#.#.#...........#.........#...#.#.....#
# #.###.#.###.#####.#####.#.#.#####.#.#.#####.#.#####.#.#######.#.#.#.#####.#.#.#.#######.#.#.#.#.#####.###.###########.#######.#.#.#.#.#.###.#
# #...#.#...#.....#...#...#.#...#...#.#.#.....#.#...#.........#.#.#...........#.#.....#...#.#.#.#...#.......#.........#...#.....#...#.#.#...#.#
# #.#.#.###.#####.###.#.###.#.###.###.#.#.#####.#.#.#####.###.#.#.#.#####.#########.#.#####.#.#.###.#.#######.#######.###.#.###.#####.#.#.#.#.#
# #.#.#.#...#.#.....#.#.#...#...#.#.#.#.#.........#.....#.#.#...#.#.#...#.#.......#.#.......#.#.....#.....#.#.....#.....#...#...#...#.#...#.#.#
# #.#.###.###.#.###.#.#.###.###.#.#.#.#################.#.#.#####.###.#.#.#.#####.#####.#####.#.#########.#.#.###.#.###.#####.###.#.#.#####.#.#
# #.#...#.....#...#.#.#.........#.#.#...........#.#...#.#.#.....#...#.#.#.#...#.......#...#...#.#.......#.#.....#...#...#.....#.#.#...#...#...#
# #.###.#####.###.#.#.###.#######.#.#####.#####.#.#.#.#.#.#.#.#.###.#.#.#####.#######.#####.###.#.#######.#.#####.#.#.#.#.#####.#.#####.#.###.#
# #...#.......#.#.#.#...#...#...#...#...#...#...#...#.....#.#.#...#...#.....#...#...#.#...................#.#.....#.#.#...#...#...#.....#...#.#
# ###.#####.###.#.#.###.###.#.#.#.###.#.#.###.###.#.#.#####.#.#.###########.###.#.###.#.#########.#.#######.#.###.###.#####.#.#.###.#####.###.#
# #.#...#.#.....#.#...#.#.#...#...#...#...#...#...#.....#.....#.#.......#.#.....#.....#.....#.....#.#...#...#.#.#.#...#.....#.#...#.#...#.#...#
# #.###.#.#.###.#.#####.#.#########.###.###.#######.###.#.#####.#.#.###.#.#######.#####.###.#.#.#.#.###.#.###.#.#.#.#####.#.#####.###.#.#.#.###
# #.#...#...#...#.......#.......#.#...#...#.#.....#...#.#...#...#.#...#.........#.#...#...#.#.#.#.#...#.....#.#...#.....#.#.....#...#.#.#.#...#
# #.#.###.#.#.#.###.#####.#####.#.###.###.#.###.#.###.#.###.#.###.###.###########.#.#####.#.#.#.#####.#######.#.#######.#####.#.###.#.#.#.###.#
# #...........#.#.........#...#.....#.#.#.#...#.#.....#...#.#.#...#.#.........#...#.....#.#...#.....#...#.....#...#...#.....#.#.....#.#.#...#.#
# #.###.###.#.#.#########.###.#####.#.#.#.#.#.#.#########.#.###.###.#########.#.#######.#.#####.###.###.#.#######.#.#######.#.#######.#.#.#.#.#
# #...#.....#.#.#.....#...#.....#...#.#...#.#.#.#...#...#.#.#...#.....#.......#.......#...#...#.#.....#...#.#.....#.........#...#.....#...#.#.#
# #.#.#####.#.#.#.###.#.###.#.###.###.#.#####.#.###.#.#.#.#.#.#####.#.#.#####.#######.#####.#.###.#########.#.#####.#.#########.#####.#.#####.#
# #.#.....#...#...#...#.#...#.....#...#.......#...#...#.#.#.#...#...#...#.......#...#.#.....#...#...#.......#.......#.#.......#.......#.......#
# #.#####.#########.###.#.###.#.###.#############.#####.#.#.###.#.#.#.#####.###.#.#.#.#.#######.###.#.###.#.#####.###.#.#####.#######.#.#######
# #.....#...#.....#.....#...#.#...#...#...........#.....#.....#.#.#.#.......#.....#.#...#...#.#.....#...#.#.#.....#...#...#.#.#.....#.#...#...#
# #####.#.#.#.#####.#.###.#.#.###.###.#.#.#########.#########.#.#.#.#######.#####.#.###.#.#.#.###.###.###.#.#.#####.#.###.#.#.#.###.#.#.#.###.#
# #...#.#.#...#.....#...#.#.#.#...#...#.#.........#...........#.#.#.....#...#...#.#.....#.#.......#...#...#.#.#.....#.#.....#.#...#.....#.#...#
# ###.#.#.#.###.#####.#.###.#.#.###.#.###.#.#####.#####.#####.#.#.#####.#.#.#.#.###.#####.#.#######.#.#.#####.#.#####.#.#.#.#.#########.#.#.###
# #...#.#.#.#...#.....#.#...#.#.#.#.....#.#.#...#.#...#.......#.#...#.....#.#.#.#.....#...#.....#...#.#.......#.#.#...#.#...#.....#.......#...#
# #.#.#.#.###.###.#####.#.#####.#.#####.#.#.#.#.#.#.#.#.#######.#.#.#.#####.#.#.#.#####.#######.#.###.#########.#.#.###.#.#######.#.###.###.#.#
# #.#.#.#...#.#...#...#.#...#...#...#.#.....#.#.#...#.#.#.....#.#.#.#.#.....#.....#.#...#.#...#...#.....#.....#.#.......#.#.....#.#...#.....#.#
# #.#.#.###.#.#####.#.#.#.#.#.###.#.#.#.###.#.#.#####.#.#.#.###.###.###.###.#.#####.#.###.#.#.#######.#.#.###.#.#########.#.###.#.###.#######.#
# #.#.#...#.#.#...#.#...#.#.#.........#...#.#.#...#...#.#.#...#...#.#...#...#.#.....#...#...#...#.....#...#...#.#.........#.#...#...#.........#
# #.#####.#.#.#.#.#.#######.###.#####.###.###.###.#.###.#####.###.#.#.#######.#.#######.#.###.#.###.###.#######.#.###########.#.#.#.#########.#
# #.........#.#.#.#.#.....#.#...#...#.#...#...#...#.#.......#...#...#.#.......#...#...#.#...#.#.....#...#.....#.#.#.#.........#.......#.....#.#
# #.#.#.#.#.#.#.#.#.#.###.#.#.###.#.###.###.###.###.#######.#.#####.#.#.#########.#.#.#.#####.#######.###.###.#.#.#.#.#.#.#.#####.#.#.#.#.#.#.#
# #.#.#...#.#.#.#...#.#...#.#...#.#...#...#...#.....#...#.....#.....#.#.....#.....#.#.#.#...#.#.....#.#.#.#.....#.#.#...#.......#.#...#.#.#.#.#
# #.#.#####.#.#.#.###.#.###.#.###.###.#.#.#.#.#.#####.#.#.#####.#####.#####.#.#.###.#.#.#.#.#.###.#.#.#.#.#####.#.#.#.#.#####.#.#.###.#.#.###.#
# #.#.....#.#.#.#.#...#.....#.#...#.#.#.#.#.#.#.......#.#...#...#.....#.....#.#.....#.#...#.#...#.#.#.#.#.#...#.#.#...#.......#.#...#.#.#.....#
# #.#####.#.#.#.###.#####.#.#.#.###.#.#.#.###.#.#######.#####.###.###.#.#####.#######.#####.###.#.#.#.#.#.#.#.#.#.#######.#.###.###.#.#.#####.#
# #...#...#.#.#.........#.#...#.#...#.#.#.#...#.#...#...#.....#...#.#.#.#.....#.#.........#.....#.#.#...#...#.#.#...#...#...#.....#.#.#.#.....#
# ###.#.###.#.#.###.#####.#####.###.#.#.#.#.###.#.#.#.###.#####.#.#.#.#.#####.#.#.#######.#######.###.#.#####.#.###.#.#.###.#.###.#.#.#.#.#.#.#
# #...#.#...#.#.....#...#.....#.#...#.#.#.#.#...#.#.#.....#...#.#.....#.....#.#.#.....#.#.....#...#.....#.#...#...#.#.#.......#...#.#.#.#...#.#
# #.###.#.#.#.#####.#.#.#####.#.#.###.###.#.#.#####.#######.#.#.###.#######.#.#.#####.#.#####.#.#.#.#.###.#.###.#.#.#.#####.###.###.#.#.#.###.#
# #.....#.#.#.#...#.#.#.#.....#.#...#.....#...#.....#...#...#.#...#.#.....#.#.#.....#.#.........#.#.#.....#.......#.#.#...#...#...#.#.#.#...#.#
# #.#####.#.#.#.###.#.#.#.#####.###.#######.###.#####.#.#.###.#.#.#.###.#.#.#.#.###.#.#.#########.#.#.#.#.#####.#.#.#.#.#.#.#.#.###.#.#.#.#.#.#
# #.#.....#.#.#.....#.#...#.....#.........#.#...#.....#...#...#.#...........#...#...#.#.#.................#.......#...#.#.....#.#...#.#...#...#
# #.#.#####.#.#####.#.###.#.#####.#########.###.#.#########.###.#.#######.#######.#.#.#.###.#.#.#####.#.#.#.###.#######.###.###.#.###.###.###.#
# #.#...#...#.#...#.#.#.#.#.....#.............#...#.....#.#.#...#.......#.#.......#.#.#.....#.#...#...#...#.....................#.#.....#...#.#
# #.###.#.###.#.#.#.#.#.#.#####.#.###########.#.#.###.#.#.#.###########.#.#.#####.###.###.###.#.#.#.#.#.#.#####.###########.#.#.#.#######.#.#.#
# #.#.#.#...#...#.....#.......#.#.#...#.....#...#.....#...#.....#.....#.....#.........#...#...#.#.#...#.#.....#.........#...#.#.#.........#...#
# #.#.#.#####.#####.###.#.#####.#.#.###.###.#############.#####.#.###.#####.#####.#########.#.#.#.###.###.#.#.#######.#.#.#.#.#.#########.#####
# #.#.#.........#.....#.#.......#...#...#.#.........#...#...#...#.#.#.#...#.#...........#...#...#...#...#.#.#.#.....#.#.#.#...#.#.............#
# #.#.#######.###.#.###.#.###########.###.#######.###.#.###.#.###.#.#.#.#.###.#.#.#####.#.###.#.###.#.#.#.#.#.#.###.#.#.#.#####.#####.#######.#
# #S........#.....#.....#.......................#.....#.......................#.......#.......#...#.......#.....#.............................#
# #############################################################################################################################################"""

# # data="""#################
# # #...#...#...#..E#
# # #.#.#.#.#.#.#.#.#
# # #.#.#.#...#...#.#
# # #.#.#.#.###.#.#.#
# # #...#.#.#.....#.#
# # #.#.#.#.#.#####.#
# # #.#...#.#.#.....#
# # #.#.#####.#.###.#
# # #.#.#.......#...#
# # #.#.###.#####.###
# # #.#.#...#.....#.#
# # #.#.#.#####.###.#
# # #.#.#.........#.#
# # #.#.#.#########.#
# # #S#.............#
# # #################"""

# # data="""###############
# # #.......#....E#
# # #.#.###.#.###.#
# # #.....#.#...#.#
# # #.###.#####.#.#
# # #.#.#.......#.#
# # #.#.#####.###.#
# # #...........#.#
# # ###.#.#####.#.#
# # #...#.....#.#.#
# # #.#.#.###.#.#.#
# # #.....#...#.#.#
# # #.###.#.#.#.#.#
# # #S..#.....#...#
# # ###############"""


# data = data.split('\n')
# data = [list(x) for x in data]
# ROW = len(data)
# COL = len(data[0])
# moves = [(0,1),(1,0),(0,-1),(-1,0)]
# src=(ROW-2,1)
# dst=(1,COL-2)
# h=[(0,0,src[0],src[1])]
# ans=-1
# visited=set()
# while h:
#     cost,di,x,y=heapq.heappop(h)
#     if x==dst[0] and y==dst[1]:
#         print(cost)
#         ans=cost
#         break
#     if data[x][y]=="#" or (x,y,di) in visited:continue
#     visited.add((x,y,di))
#     heapq.heappush(h,(cost+1,di,x+moves[di][0],y+moves[di][1]))
#     heapq.heappush(h,(cost+1000,(di+1)%4,x,y))
#     heapq.heappush(h,(cost+1000,(di-1)%4,x,y))
#     heapq.heappush(h,(cost+2000,(di-2)%4,x,y))
    
    
# # part 2

# moves = [(0,1),(1,0),(0,-1),(-1,0)]
# src=(ROW-2,1)
# dst=(1,COL-2)
# h=[(0,0,src[0],src[1],set([(src[0],src[1])]))]
# ans=-1
# visited={}
# count=defaultdict(set)
# while h:
#     cost,di,x,y,cnt=heapq.heappop(h)
#     if x==dst[0] and y==dst[1]:
#         print(len(cnt)+1)
#         # print(cnt)
#         ans=cost
#         break
#     if data[x][y]=="#":continue
#     if (x,y,di) in visited:
#         if visited[(x,y,di)]>=cost:
#             count[(x,y,di)].update(cnt)    
#         continue
#     visited[(x,y,di)]=cost
#     count[(x,y,di)].update(cnt)
#     count[(x,y,di)].add((x,y))
#     heapq.heappush(h,(cost+1,di,x+moves[di][0],y+moves[di][1],count[(x,y,di)]))
#     heapq.heappush(h,(cost+1000,(di+1)%4,x,y,count[(x,y,di)]))
#     heapq.heappush(h,(cost+1000,(di-1)%4,x,y,count[(x,y,di)]))
#     heapq.heappush(h,(cost+2000,(di-2)%4,x,y,count[(x,y,di)]))
    
# # print(count)
    

# data="""Register A: 24847151
# Register B: 0
# Register C: 0

# Program: 2,4,1,5,7,5,1,6,0,3,4,0,5,5,3,0"""

# data="""Register A: 729
# Register B: 0
# Register C: 0

# Program: 0,1,5,4,3,0"""

# data="""Register A: 117440
# Register B: 0
# Register C: 0

# Program: 0,3,5,4,3,0"""

# registers,data = data.split('\n\n')

# registers = registers.split('\n')
# registers = [int(x.split(":")[1]) for x in registers]
# data = data.split(':')[1]
# data = data.split(',')
# data = [int(x) for x in data]

# print(registers,data)
# ptr=0
# out=[]

# def getVal(v):
#     if 0<=v<=3:return v
#     return registers[v-4]
# while ptr<len(data) and (ptr+1<len(data) or data[ptr]==3 or data[ptr]==4):
#     # print(ptr,len(data),data)
#     if data[ptr]==0:
#         registers[0] = registers[0]//(2**getVal(data[ptr+1]))
#         ptr+=2
#     elif data[ptr]==1:
#         registers[1] = registers[1] ^ data[ptr+1]
#         ptr+=2
#     elif data[ptr]==2:
#         registers[1] = getVal(data[ptr+1]) % 8
#         ptr+=2
#     elif data[ptr]==3:
#         if registers[0] == 0:
#             ptr+=2
#         else:
#             ptr = data[ptr+1]
#     elif data[ptr]==4:
#         registers[1] = registers[1] ^ registers[2]
#         ptr+=2
#     elif data[ptr]==5:
#         out.append(str(getVal(data[ptr+1])%8))
#         ptr+=2
#     elif data[ptr]==6:
#         registers[1] = registers[0]//(2**getVal(data[ptr+1]))
#         ptr+=2
#     else:
#         registers[2] = registers[0]//(2**getVal(data[ptr+1]))
#         ptr+=2    
    
# print(",".join(out))

# # part2

# def createOutput(registers,data):
#     out=[]
#     ptr=0
#     def getVal(v):
#         if 0<=v<=3:return v
#         return registers[v-4]
#     while ptr<len(data) and (ptr+1<len(data) or data[ptr]==3 or data[ptr]==4):
#         # print(ptr,len(data),data)
#         if data[ptr]==0:
#             registers[0] = registers[0]//(2**getVal(data[ptr+1]))
#             ptr+=2
#         elif data[ptr]==1:
#             registers[1] = registers[1] ^ data[ptr+1]
#             ptr+=2
#         elif data[ptr]==2:
#             registers[1] = getVal(data[ptr+1]) % 8
#             ptr+=2
#         elif data[ptr]==3:
#             if registers[0] == 0:
#                 ptr+=2
#             else:
#                 ptr = data[ptr+1]
#         elif data[ptr]==4:
#             registers[1] = registers[1] ^ registers[2]
#             ptr+=2
#         elif data[ptr]==5:
#             out.append(str(getVal(data[ptr+1])%8))
#             if out[-1]!=str(data[len(out)-1]) or len(out)>len(data):
#                 return out
#             ptr+=2
#         elif data[ptr]==6:
#             registers[1] = registers[0]//(2**getVal(data[ptr+1]))
#             ptr+=2
#         else:
#             registers[2] = registers[0]//(2**getVal(data[ptr+1]))
#             ptr+=2
#     return out    
    
# d=",".join([str(x) for x in data])
# for a in range(100000000000000):
#     out=createOutput([a,0,0],data)
#     if out:
#         print(a)    
#         print(",".join(out))
#         print(d)
#     if d==",".join(out):
#         print(a)
#         break
    
# ans = [2,4,1,5,7,5,1,6,0,3,4,0,5,5,3,0]

# B = A%8
# B = B^5
# C = A//(2**B)
# B = B^5
# A = A//(2**3)
# B = B ^ C
# out(B%8)
# jnz 0

# took a lot of help to understand this one

# def check(num,program):
#     if not program:
#         print(num)
#         return True
#     print(program,num)
#     for bit in range(8):
#         curr = A = ((num<<3) | bit)
#         B = A % 8
#         B = B^5
#         C = A // (2**B)
#         B = B ^ 6 
#         A = A//(2**3)
#         B = B ^ C
#         if (B % 8) == program[-1]:
#             if check(curr, program[:-1]):
#                 return True
#     return False

# check(0,ans)
            
            
# from collections import deque


# data="""7,0
# 59,45
# 15,9
# 60,37
# 61,43
# 4,39
# 7,9
# 62,51
# 21,21
# 9,19
# 27,2
# 17,41
# 1,38
# 68,19
# 3,11
# 1,4
# 63,60
# 55,27
# 67,18
# 14,11
# 9,7
# 7,19
# 2,51
# 6,33
# 3,14
# 26,13
# 5,46
# 21,5
# 15,5
# 15,41
# 18,21
# 13,7
# 6,49
# 67,27
# 21,29
# 5,41
# 65,47
# 63,56
# 21,4
# 12,49
# 5,9
# 53,57
# 5,42
# 61,59
# 7,21
# 7,20
# 3,9
# 25,40
# 3,37
# 1,37
# 40,59
# 61,58
# 66,59
# 65,46
# 19,45
# 51,60
# 65,62
# 15,3
# 67,69
# 7,17
# 67,56
# 30,11
# 27,1
# 14,15
# 3,31
# 2,27
# 18,17
# 3,46
# 67,32
# 1,31
# 67,54
# 59,54
# 63,19
# 69,29
# 8,5
# 13,23
# 6,7
# 21,24
# 17,43
# 14,1
# 21,40
# 14,33
# 9,16
# 1,13
# 3,22
# 61,39
# 67,55
# 63,69
# 8,45
# 17,37
# 69,45
# 9,37
# 61,34
# 23,9
# 24,35
# 5,13
# 3,4
# 63,41
# 69,24
# 3,29
# 61,45
# 15,43
# 61,23
# 10,7
# 4,7
# 7,36
# 25,1
# 55,54
# 61,49
# 19,40
# 6,11
# 11,35
# 47,19
# 10,43
# 65,52
# 67,35
# 25,11
# 65,27
# 61,33
# 53,61
# 65,48
# 19,21
# 47,68
# 53,66
# 6,45
# 9,4
# 65,65
# 69,59
# 3,33
# 5,18
# 68,43
# 57,21
# 13,33
# 33,8
# 60,49
# 65,23
# 17,49
# 69,43
# 21,7
# 53,27
# 56,33
# 16,43
# 55,51
# 52,37
# 19,29
# 11,2
# 63,59
# 27,0
# 13,13
# 47,60
# 23,1
# 28,3
# 61,26
# 61,51
# 57,48
# 3,21
# 4,37
# 60,43
# 52,61
# 15,6
# 18,11
# 14,31
# 11,34
# 18,7
# 21,8
# 11,40
# 17,21
# 7,45
# 19,13
# 7,35
# 5,5
# 7,23
# 68,59
# 19,28
# 69,55
# 57,70
# 51,66
# 11,15
# 59,46
# 56,45
# 66,23
# 13,31
# 2,41
# 63,31
# 19,12
# 69,23
# 63,44
# 63,42
# 69,48
# 59,42
# 67,50
# 69,53
# 23,47
# 67,37
# 61,60
# 62,31
# 69,69
# 63,64
# 4,29
# 15,11
# 11,7
# 22,47
# 21,23
# 59,21
# 66,67
# 1,11
# 0,53
# 7,56
# 5,21
# 57,41
# 3,13
# 5,17
# 5,1
# 65,43
# 59,68
# 21,35
# 70,41
# 13,41
# 68,41
# 1,29
# 20,45
# 61,30
# 21,19
# 1,50
# 12,23
# 15,51
# 19,1
# 16,31
# 9,1
# 19,3
# 13,2
# 3,1
# 5,58
# 3,44
# 50,23
# 66,43
# 64,25
# 53,53
# 3,43
# 1,1
# 55,59
# 6,39
# 49,51
# 11,31
# 7,8
# 67,46
# 60,67
# 54,55
# 55,69
# 13,55
# 5,45
# 14,19
# 59,61
# 5,52
# 59,52
# 5,27
# 66,41
# 59,20
# 57,69
# 63,54
# 5,16
# 17,5
# 53,29
# 20,19
# 9,21
# 67,19
# 62,35
# 9,42
# 5,35
# 65,28
# 2,29
# 11,17
# 17,28
# 51,57
# 8,33
# 1,14
# 55,47
# 17,40
# 69,54
# 64,65
# 14,5
# 67,41
# 69,52
# 66,21
# 58,61
# 49,52
# 21,3
# 17,15
# 3,52
# 69,49
# 7,49
# 60,31
# 3,35
# 68,49
# 65,19
# 27,42
# 11,29
# 3,17
# 15,29
# 19,7
# 15,15
# 1,10
# 61,65
# 59,67
# 11,3
# 15,24
# 62,29
# 61,57
# 7,47
# 5,44
# 69,25
# 3,59
# 21,13
# 63,61
# 47,58
# 63,37
# 63,23
# 15,22
# 12,37
# 19,30
# 8,29
# 63,52
# 9,31
# 17,13
# 13,3
# 27,10
# 31,8
# 66,35
# 29,9
# 69,67
# 17,47
# 53,54
# 54,61
# 65,38
# 7,22
# 15,35
# 10,49
# 21,1
# 21,50
# 57,54
# 16,13
# 2,19
# 59,35
# 17,48
# 50,53
# 69,65
# 15,53
# 63,57
# 54,65
# 66,31
# 57,53
# 1,36
# 51,51
# 55,52
# 23,41
# 61,53
# 2,31
# 8,21
# 2,49
# 11,30
# 6,13
# 55,58
# 23,8
# 3,32
# 69,61
# 65,31
# 7,27
# 17,25
# 20,9
# 19,11
# 69,34
# 61,29
# 51,63
# 15,12
# 69,26
# 70,69
# 9,18
# 58,43
# 19,25
# 15,16
# 47,61
# 63,24
# 19,2
# 60,21
# 69,51
# 7,4
# 7,41
# 13,45
# 33,5
# 21,36
# 50,59
# 60,63
# 22,11
# 56,57
# 27,11
# 13,1
# 16,35
# 24,17
# 39,4
# 63,25
# 6,35
# 1,22
# 63,49
# 61,63
# 12,17
# 61,19
# 62,39
# 5,24
# 57,63
# 3,48
# 59,53
# 61,27
# 21,37
# 14,47
# 39,2
# 21,45
# 25,17
# 12,45
# 69,22
# 1,49
# 21,25
# 65,67
# 12,11
# 53,59
# 59,31
# 21,26
# 19,32
# 16,51
# 7,3
# 57,67
# 22,23
# 13,11
# 7,54
# 15,33
# 60,65
# 5,40
# 21,33
# 63,47
# 11,27
# 15,17
# 3,16
# 66,45
# 69,66
# 21,34
# 63,55
# 1,39
# 27,30
# 68,61
# 21,46
# 68,69
# 31,5
# 63,45
# 1,19
# 27,13
# 11,6
# 21,39
# 26,5
# 62,45
# 69,27
# 63,58
# 11,44
# 2,59
# 1,34
# 69,28
# 13,21
# 14,37
# 13,5
# 11,4
# 11,49
# 55,68
# 65,59
# 10,19
# 69,39
# 10,31
# 45,68
# 10,1
# 69,20
# 48,53
# 8,43
# 59,59
# 17,4
# 69,19
# 11,37
# 9,38
# 1,45
# 61,31
# 51,53
# 9,5
# 9,14
# 65,18
# 54,51
# 57,68
# 25,3
# 65,56
# 59,41
# 3,49
# 67,67
# 59,49
# 6,27
# 9,28
# 69,63
# 51,61
# 13,26
# 67,33
# 1,35
# 4,1
# 5,11
# 57,56
# 65,26
# 57,43
# 12,47
# 59,32
# 58,37
# 64,23
# 65,25
# 69,31
# 3,47
# 69,35
# 9,43
# 63,63
# 66,53
# 49,58
# 9,13
# 3,5
# 9,35
# 1,51
# 57,18
# 65,33
# 68,25
# 30,3
# 49,63
# 16,7
# 65,45
# 23,36
# 56,27
# 12,15
# 67,34
# 67,68
# 64,33
# 15,26
# 55,67
# 9,9
# 3,19
# 62,67
# 3,6
# 3,7
# 65,40
# 59,58
# 59,36
# 59,29
# 22,31
# 25,29
# 57,60
# 69,57
# 24,3
# 69,56
# 5,23
# 67,61
# 17,46
# 27,37
# 59,26
# 23,5
# 66,65
# 56,59
# 15,45
# 21,42
# 21,44
# 2,35
# 18,3
# 5,3
# 68,39
# 0,29
# 5,15
# 9,45
# 18,27
# 68,37
# 19,14
# 61,67
# 13,51
# 7,15
# 10,15
# 64,43
# 22,43
# 61,56
# 31,1
# 15,40
# 13,17
# 17,10
# 41,23
# 5,29
# 57,59
# 52,69
# 19,27
# 39,27
# 69,58
# 57,52
# 55,25
# 27,47
# 1,43
# 63,35
# 3,10
# 12,53
# 22,5
# 7,51
# 48,27
# 2,17
# 59,57
# 24,1
# 50,57
# 7,14
# 4,19
# 63,27
# 69,32
# 13,0
# 7,13
# 63,65
# 11,33
# 11,50
# 15,50
# 1,41
# 14,35
# 13,53
# 63,21
# 7,37
# 13,47
# 8,7
# 15,37
# 55,63
# 61,37
# 1,5
# 10,37
# 19,35
# 12,5
# 1,17
# 55,65
# 22,39
# 61,54
# 68,65
# 1,15
# 51,59
# 9,3
# 67,51
# 63,48
# 59,33
# 1,23
# 67,62
# 69,36
# 67,29
# 5,22
# 17,34
# 51,65
# 49,61
# 17,17
# 14,39
# 1,40
# 17,23
# 1,21
# 17,2
# 12,41
# 59,65
# 67,49
# 21,38
# 64,47
# 19,19
# 3,57
# 1,26
# 65,37
# 55,50
# 23,37
# 20,33
# 61,69
# 4,35
# 9,12
# 4,5
# 11,45
# 56,49
# 55,53
# 53,63
# 19,6
# 2,9
# 62,63
# 7,33
# 15,13
# 25,6
# 58,29
# 22,1
# 65,21
# 25,21
# 58,49
# 63,53
# 64,21
# 65,63
# 61,55
# 2,45
# 63,29
# 55,62
# 3,51
# 57,31
# 67,47
# 5,43
# 9,17
# 67,45
# 23,45
# 4,57
# 27,3
# 12,27
# 3,3
# 19,18
# 11,22
# 5,47
# 10,29
# 9,23
# 57,38
# 17,33
# 9,22
# 53,56
# 0,43
# 63,50
# 7,24
# 5,49
# 11,23
# 21,2
# 19,47
# 24,43
# 17,11
# 59,47
# 11,32
# 65,29
# 9,53
# 17,38
# 15,49
# 67,25
# 3,56
# 27,21
# 7,39
# 4,33
# 15,39
# 11,47
# 15,4
# 25,14
# 61,35
# 0,13
# 51,32
# 4,27
# 3,27
# 5,51
# 21,14
# 22,29
# 9,25
# 42,55
# 69,33
# 1,8
# 63,67
# 61,38
# 9,36
# 3,12
# 70,63
# 6,31
# 19,5
# 60,55
# 69,46
# 51,19
# 35,2
# 8,53
# 65,60
# 14,49
# 42,65
# 9,15
# 67,30
# 54,59
# 25,23
# 59,27
# 67,57
# 19,15
# 49,59
# 11,5
# 1,7
# 65,50
# 49,67
# 29,5
# 5,33
# 7,29
# 24,7
# 7,1
# 12,55
# 22,13
# 17,39
# 67,63
# 53,68
# 28,9
# 17,36
# 21,41
# 47,69
# 68,51
# 67,65
# 17,3
# 65,35
# 27,5
# 64,29
# 14,29
# 13,36
# 14,45
# 18,15
# 19,37
# 25,13
# 4,9
# 65,49
# 55,29
# 59,62
# 63,33
# 2,21
# 7,2
# 15,55
# 15,8
# 65,41
# 23,15
# 64,69
# 19,39
# 44,27
# 17,7
# 3,2
# 3,15
# 5,7
# 13,29
# 13,35
# 67,26
# 5,20
# 11,41
# 26,1
# 15,56
# 59,23
# 7,31
# 67,23
# 67,64
# 59,50
# 15,44
# 13,27
# 12,33
# 19,38
# 17,9
# 69,41
# 53,32
# 16,29
# 12,13
# 48,61
# 21,43
# 9,46
# 59,64
# 49,53
# 63,62
# 15,47
# 20,37
# 52,57
# 52,53
# 21,10
# 11,26
# 2,1
# 17,19
# 65,61
# 15,19
# 67,59
# 65,58
# 13,9
# 16,19
# 21,31
# 65,51
# 31,11
# 16,1
# 57,61
# 47,43
# 17,32
# 57,66
# 5,25
# 19,49
# 0,47
# 23,12
# 16,17
# 21,16
# 17,31
# 5,39
# 21,6
# 49,48
# 8,25
# 3,55
# 17,42
# 9,39
# 8,31
# 1,3
# 58,57
# 11,11
# 63,43
# 11,39
# 29,3
# 11,20
# 57,55
# 27,9
# 6,3
# 9,47
# 24,15
# 7,26
# 15,1
# 63,40
# 27,33
# 27,12
# 63,39
# 3,54
# 31,17
# 13,25
# 9,34
# 17,29
# 18,45
# 3,25
# 3,53
# 59,24
# 7,43
# 21,11
# 11,21
# 21,15
# 9,49
# 68,29
# 61,48
# 61,46
# 9,29
# 19,17
# 15,31
# 8,39
# 55,45
# 55,57
# 67,21
# 17,14
# 11,13
# 21,30
# 7,25
# 1,54
# 23,13
# 64,37
# 47,53
# 6,41
# 8,11
# 67,31
# 1,25
# 45,45
# 19,42
# 65,55
# 62,69
# 45,62
# 13,14
# 7,10
# 63,66
# 65,39
# 1,27
# 19,41
# 1,33
# 19,33
# 19,31
# 18,35
# 17,8
# 41,58
# 13,24
# 59,51
# 9,33
# 65,69
# 59,55
# 1,24
# 4,13
# 17,45
# 69,47
# 6,17
# 15,21
# 11,1
# 10,9
# 59,69
# 63,51
# 16,21
# 59,40
# 0,19
# 3,23
# 57,49
# 5,31
# 62,33
# 7,5
# 1,53
# 61,47
# 69,44
# 65,68
# 21,18
# 13,15
# 11,25
# 69,21
# 1,6
# 10,39
# 13,20
# 67,43
# 59,34
# 1,47
# 9,27
# 19,9
# 16,47
# 65,57
# 25,5
# 63,36
# 21,17
# 23,3
# 67,53
# 7,48
# 65,20
# 5,30
# 57,51
# 58,65
# 57,35
# 61,61
# 15,42
# 3,42
# 19,43
# 12,51
# 9,51
# 55,55
# 13,28
# 10,47
# 13,49
# 4,49
# 7,57
# 10,25
# 64,31
# 22,33
# 13,67
# 45,15
# 67,14
# 34,53
# 33,1
# 34,5
# 11,69
# 66,7
# 51,67
# 37,12
# 37,23
# 42,5
# 35,7
# 16,59
# 17,60
# 47,55
# 47,8
# 35,0
# 40,25
# 48,49
# 57,57
# 35,3
# 45,60
# 29,48
# 46,53
# 49,22
# 27,25
# 36,51
# 33,25
# 56,63
# 56,47
# 63,17
# 34,11
# 25,9
# 27,16
# 65,7
# 28,17
# 49,6
# 35,13
# 17,59
# 8,67
# 27,31
# 47,66
# 47,35
# 7,53
# 19,50
# 24,63
# 41,16
# 31,38
# 39,13
# 37,9
# 28,23
# 25,18
# 63,16
# 29,35
# 51,17
# 63,13
# 3,69
# 41,24
# 38,39
# 62,27
# 39,25
# 41,38
# 33,60
# 30,29
# 39,9
# 24,67
# 13,57
# 39,26
# 13,19
# 25,70
# 43,23
# 49,25
# 67,16
# 8,49
# 53,67
# 47,51
# 69,3
# 41,15
# 19,61
# 32,51
# 9,67
# 50,55
# 45,39
# 12,7
# 31,36
# 44,57
# 42,25
# 31,51
# 63,1
# 12,9
# 51,29
# 54,37
# 49,31
# 9,55
# 11,67
# 46,43
# 41,31
# 20,25
# 65,13
# 31,20
# 7,61
# 41,2
# 68,13
# 49,33
# 18,57
# 53,40
# 43,7
# 7,69
# 53,1
# 57,37
# 14,21
# 36,41
# 21,20
# 34,33
# 41,33
# 45,55
# 67,7
# 13,61
# 17,63
# 50,9
# 65,3
# 30,65
# 30,61
# 43,63
# 32,35
# 7,55
# 45,21
# 56,21
# 39,34
# 5,57
# 35,10
# 52,63
# 61,4
# 27,17
# 37,1
# 54,25
# 33,59
# 34,49
# 36,9
# 19,63
# 32,13
# 32,1
# 29,51
# 39,19
# 15,25
# 21,56
# 20,63
# 49,45
# 54,19
# 46,35
# 31,59
# 62,23
# 24,45
# 51,3
# 22,51
# 23,21
# 65,6
# 37,48
# 52,15
# 45,24
# 44,51
# 25,39
# 37,27
# 42,47
# 47,12
# 33,64
# 7,65
# 1,63
# 37,65
# 55,33
# 7,62
# 33,3
# 46,57
# 15,23
# 52,49
# 56,35
# 57,17
# 33,27
# 43,59
# 19,59
# 25,55
# 67,17
# 31,29
# 55,12
# 65,12
# 42,61
# 37,51
# 25,61
# 9,59
# 41,42
# 41,17
# 29,43
# 17,55
# 27,35
# 25,56
# 45,54
# 25,51
# 6,61
# 40,53
# 56,29
# 60,7
# 27,41
# 57,32
# 30,69
# 37,39
# 32,49
# 0,69
# 37,3
# 43,49
# 27,57
# 53,49
# 35,65
# 52,9
# 41,3
# 23,11
# 25,45
# 53,12
# 18,53
# 69,13
# 26,67
# 42,11
# 41,6
# 25,63
# 39,55
# 43,67
# 43,65
# 61,9
# 33,55
# 11,43
# 59,15
# 39,43
# 51,49
# 42,63
# 35,21
# 45,29
# 45,1
# 45,47
# 55,23
# 37,16
# 31,62
# 33,67
# 39,35
# 69,4
# 55,22
# 36,35
# 26,25
# 35,36
# 45,57
# 55,10
# 69,5
# 49,23
# 53,21
# 49,3
# 5,55
# 44,15
# 28,35
# 53,46
# 15,64
# 36,39
# 33,30
# 35,62
# 31,33
# 61,8
# 26,53
# 10,53
# 23,57
# 9,63
# 5,65
# 61,21
# 47,10
# 31,42
# 36,3
# 25,53
# 29,17
# 40,65
# 55,15
# 27,56
# 23,25
# 45,36
# 31,52
# 48,55
# 53,39
# 41,63
# 3,24
# 49,5
# 31,21
# 1,64
# 41,61
# 38,1
# 45,25
# 41,60
# 45,51
# 39,53
# 55,5
# 34,55
# 37,11
# 68,7
# 66,1
# 24,25
# 29,66
# 40,11
# 55,41
# 45,59
# 46,47
# 36,23
# 63,3
# 11,54
# 31,58
# 44,59
# 23,69
# 33,66
# 44,29
# 61,13
# 53,47
# 61,15
# 29,63
# 37,33
# 45,26
# 29,33
# 45,61
# 35,68
# 21,51
# 43,57
# 21,27
# 35,59
# 37,59
# 4,65
# 37,31
# 55,17
# 35,53
# 14,63
# 1,61
# 39,38
# 56,1
# 67,11
# 3,41
# 62,7
# 47,40
# 35,51
# 38,27
# 57,4
# 48,41
# 35,6
# 29,20
# 53,69
# 29,26
# 27,60
# 43,20
# 11,68
# 51,12
# 69,2
# 46,33
# 33,45
# 35,35
# 33,11
# 39,65
# 56,15
# 13,58
# 41,56
# 53,31
# 34,43
# 33,26
# 37,55
# 54,31
# 29,13
# 28,7
# 59,17
# 29,69
# 49,21
# 23,68
# 48,37
# 26,43
# 35,63
# 62,13
# 53,35
# 3,61
# 21,61
# 1,55
# 49,39
# 51,13
# 16,67
# 32,29
# 40,29
# 50,63
# 25,67
# 37,7
# 44,13
# 9,69
# 38,23
# 18,59
# 29,31
# 35,15
# 35,5
# 58,45
# 54,15
# 39,14
# 31,23
# 65,17
# 33,33
# 12,63
# 49,36
# 45,7
# 15,65
# 3,62
# 43,33
# 25,60
# 27,29
# 27,65
# 39,39
# 34,19
# 31,19
# 15,57
# 47,14
# 45,38
# 19,51
# 42,15
# 37,52
# 9,11
# 27,68
# 35,47
# 53,36
# 45,11
# 44,3
# 1,58
# 53,42
# 28,21
# 31,41
# 35,42
# 53,41
# 67,5
# 40,63
# 26,47
# 59,3
# 45,2
# 23,65
# 5,19
# 1,65
# 17,57
# 33,41
# 37,21
# 30,41
# 29,45
# 69,11
# 43,3
# 21,47
# 23,54
# 47,27
# 55,19
# 19,22
# 19,23
# 25,28
# 47,63
# 39,8
# 25,4
# 45,37
# 61,17
# 59,19
# 31,47
# 54,3
# 59,5
# 41,67
# 67,3
# 61,5
# 39,33
# 65,1
# 23,59
# 57,30
# 47,65
# 29,55
# 1,62
# 41,20
# 35,20
# 3,38
# 45,22
# 41,4
# 31,61
# 44,67
# 39,17
# 30,17
# 13,65
# 36,21
# 27,49
# 69,0
# 51,39
# 51,23
# 63,6
# 33,23
# 62,9
# 39,11
# 55,35
# 36,15
# 35,25
# 31,25
# 50,31
# 1,67
# 37,43
# 35,69
# 30,27
# 29,53
# 55,16
# 23,7
# 38,19
# 15,63
# 64,15
# 35,57
# 49,19
# 19,55
# 49,7
# 20,69
# 50,45
# 47,9
# 33,28
# 32,41
# 25,15
# 52,21
# 43,45
# 17,51
# 28,29
# 33,13
# 37,45
# 65,11
# 36,25
# 57,27
# 25,7
# 44,17
# 29,59
# 11,57
# 44,49
# 57,7
# 53,3
# 49,43
# 33,15
# 25,65
# 39,23
# 15,27
# 30,51
# 70,39
# 50,11
# 27,54
# 39,69
# 43,13
# 4,61
# 26,65
# 28,47
# 52,47
# 43,11
# 30,31
# 53,17
# 38,45
# 49,14
# 49,16
# 53,37
# 30,23
# 30,55
# 9,52
# 43,37
# 23,63
# 35,30
# 39,67
# 26,19
# 17,26
# 51,38
# 13,37
# 27,67
# 37,4
# 47,44
# 31,57
# 51,41
# 33,69
# 17,69
# 33,17
# 68,11
# 11,51
# 62,41
# 55,6
# 44,43
# 39,30
# 45,41
# 57,19
# 40,47
# 57,45
# 54,1
# 35,19
# 29,41
# 15,54
# 29,47
# 53,48
# 29,21
# 56,39
# 51,43
# 59,10
# 61,3
# 24,41
# 43,29
# 44,9
# 41,28
# 37,47
# 41,29
# 34,17
# 15,52
# 56,41
# 24,27
# 20,65
# 5,69
# 41,47
# 42,33
# 55,7
# 18,65
# 22,65
# 38,63
# 62,19
# 68,9
# 3,39
# 50,19
# 23,33
# 25,47
# 63,9
# 65,53
# 48,29
# 55,39
# 57,13
# 66,11
# 11,58
# 39,52
# 44,19
# 31,69
# 26,37
# 35,64
# 14,69
# 59,1
# 18,51
# 31,48
# 15,62
# 33,18
# 15,69
# 4,69
# 29,65
# 20,57
# 44,63
# 44,7
# 42,41
# 24,53
# 35,37
# 48,45
# 59,25
# 41,55
# 47,15
# 43,21
# 25,19
# 19,69
# 51,45
# 49,12
# 52,43
# 59,9
# 33,49
# 31,27
# 24,37
# 37,28
# 43,27
# 57,5
# 54,41
# 41,19
# 29,38
# 59,7
# 35,67
# 42,35
# 29,7
# 49,69
# 27,61
# 45,43
# 39,45
# 34,39
# 6,55
# 24,49
# 49,47
# 55,18
# 3,60
# 38,9
# 13,69
# 58,11
# 25,46
# 50,41
# 66,9
# 25,41
# 9,57
# 5,61
# 25,30
# 33,47
# 31,65
# 10,63
# 35,43
# 1,56
# 39,56
# 17,67
# 29,61
# 25,64
# 34,15
# 69,7
# 57,33
# 47,38
# 17,61
# 21,57
# 29,6
# 9,65
# 17,1
# 41,32
# 64,11
# 33,31
# 29,37
# 54,35
# 27,51
# 47,1
# 63,15
# 36,57
# 27,63
# 31,63
# 37,44
# 15,66
# 11,70
# 32,45
# 23,53
# 29,4
# 65,15
# 34,35
# 41,7
# 32,5
# 43,30
# 68,5
# 49,65
# 53,43
# 59,18
# 62,21
# 50,67
# 33,35
# 47,64
# 47,25
# 55,11
# 6,65
# 47,17
# 23,31
# 23,20
# 16,55
# 47,7
# 39,1
# 31,46
# 24,31
# 43,5
# 32,65
# 48,65
# 47,5
# 52,1
# 15,7
# 35,45
# 40,69
# 45,23
# 39,51
# 43,53
# 44,35
# 69,17
# 31,6
# 38,69
# 57,65
# 29,46
# 29,14
# 31,31
# 44,39
# 47,20
# 21,67
# 41,11
# 45,65
# 52,7
# 27,45
# 21,59
# 43,47
# 11,55
# 47,59
# 15,67
# 12,65
# 29,49
# 40,7
# 5,63
# 37,41
# 65,14
# 19,24
# 39,54
# 26,49
# 37,61
# 48,33
# 7,67
# 43,50
# 31,9
# 28,33
# 45,53
# 13,63
# 42,19
# 47,18
# 11,65
# 22,55
# 12,61
# 23,67
# 58,13
# 5,53
# 69,16
# 37,57
# 7,16
# 23,27
# 25,22
# 47,56
# 31,34
# 7,63
# 49,15
# 13,60
# 46,29
# 45,17
# 39,21
# 69,15
# 51,27
# 41,66
# 35,56
# 36,65
# 32,55
# 39,37
# 46,15
# 33,63
# 51,28
# 3,65
# 43,39
# 45,13
# 43,25
# 39,49
# 42,49
# 35,9
# 33,61
# 51,4
# 12,67
# 22,27
# 47,3
# 44,33
# 37,15
# 45,46
# 54,69
# 39,29
# 32,31
# 24,33
# 10,59
# 43,38
# 41,9
# 36,37
# 38,5
# 48,3
# 43,15
# 39,31
# 49,11
# 9,41
# 6,69
# 49,37
# 50,47
# 9,61
# 1,59
# 5,67
# 51,69
# 40,17
# 31,3
# 35,39
# 49,41
# 26,61
# 37,18
# 9,56
# 55,49
# 57,29
# 33,57
# 11,10
# 63,18
# 41,21
# 59,63
# 11,9
# 27,28
# 27,50
# 47,47
# 51,47
# 27,26
# 5,37
# 21,60
# 37,56
# 41,44
# 57,24
# 26,33
# 50,27
# 33,22
# 36,7
# 43,56
# 39,66
# 50,39
# 55,14
# 29,25
# 55,61
# 48,5
# 38,61
# 3,67
# 38,41
# 47,67
# 45,48
# 8,59
# 35,49
# 24,51
# 31,37
# 21,69
# 61,16
# 47,57
# 45,63
# 55,2
# 67,2
# 53,28
# 43,61
# 33,7
# 4,67
# 29,23
# 55,13
# 27,39
# 35,31
# 2,69
# 60,13
# 58,9
# 42,53
# 28,53
# 43,14
# 67,13
# 53,45
# 55,43
# 47,30
# 60,3
# 20,53
# 64,9
# 21,55
# 55,37
# 44,23
# 16,69
# 47,11
# 43,9
# 35,55
# 31,53
# 51,25
# 10,67
# 27,59
# 4,53
# 24,65
# 33,53
# 36,47
# 11,63
# 47,52
# 53,5
# 62,1
# 46,17
# 33,19
# 51,26
# 25,69
# 23,29
# 20,59
# 41,5
# 45,19
# 53,24
# 21,9
# 31,56
# 60,1
# 44,65
# 23,16
# 30,53
# 35,12
# 13,18
# 31,55
# 21,49
# 39,7
# 26,57
# 49,17
# 17,35
# 27,40
# 49,55
# 61,1
# 35,32
# 46,27
# 49,0
# 15,59
# 52,39
# 53,10
# 38,15
# 33,65
# 49,35
# 5,64
# 32,11
# 42,27
# 5,59
# 51,9
# 58,3
# 13,43
# 53,55
# 53,51
# 17,53
# 19,53
# 53,15
# 41,49
# 37,29
# 47,49
# 19,62
# 35,60
# 42,69
# 19,65
# 41,65
# 37,67
# 49,49
# 38,7
# 47,31
# 46,5
# 21,52
# 44,5
# 31,49
# 33,24
# 29,11
# 53,7
# 35,23
# 29,39
# 57,39
# 31,68
# 67,39
# 32,21
# 59,11
# 69,37
# 47,50
# 57,11
# 70,11
# 25,37
# 37,32
# 23,58
# 27,15
# 51,20
# 53,23
# 41,53
# 57,9
# 62,11
# 56,25
# 39,41
# 37,62
# 22,21
# 49,27
# 2,67
# 46,61
# 45,32
# 70,17
# 65,9
# 29,15
# 58,27
# 45,69
# 35,41
# 48,69
# 27,7
# 34,45
# 23,55
# 47,13
# 53,22
# 41,13
# 57,42
# 59,13
# 47,45
# 23,17
# 63,11
# 53,30
# 41,57
# 53,18
# 32,33
# 35,28
# 46,41
# 51,64
# 30,1
# 40,13
# 49,13
# 19,68
# 53,20
# 22,67
# 23,39
# 25,27
# 29,19
# 54,7
# 11,53
# 41,25
# 45,31
# 16,63
# 40,43
# 41,51
# 65,5
# 21,53
# 45,27
# 53,8
# 29,67
# 25,20
# 49,9
# 51,50
# 29,1
# 55,31
# 12,43
# 41,39
# 47,21
# 43,1
# 33,2
# 66,37
# 66,3
# 46,7
# 49,62
# 29,40
# 51,15
# 53,19
# 36,43
# 22,63
# 25,38
# 1,57
# 35,29
# 33,9
# 9,64
# 35,33
# 17,62
# 51,5
# 39,61
# 19,54
# 17,27
# 42,1
# 55,64
# 13,56
# 59,37
# 51,44
# 19,48
# 58,7
# 29,64
# 25,57
# 32,17
# 27,43
# 59,22
# 59,14
# 55,44
# 31,35
# 37,49
# 47,33
# 44,41
# 45,0
# 7,11
# 51,37
# 10,61
# 33,70
# 55,21
# 51,7
# 33,37
# 25,49
# 56,5
# 44,69
# 58,17
# 32,61
# 23,62
# 21,65
# 13,39
# 23,43
# 29,27
# 41,37
# 43,19
# 28,67
# 42,9
# 26,23
# 34,23
# 38,59
# 1,69
# 25,33
# 50,69
# 13,59
# 45,35
# 33,4
# 29,32
# 62,3
# 43,43
# 8,61
# 39,68
# 26,9
# 53,9
# 35,17
# 47,39
# 32,69
# 41,1
# 37,54
# 40,51
# 27,36
# 55,9
# 38,31
# 61,18
# 47,23
# 30,9
# 69,8
# 27,62
# 37,25
# 39,47
# 23,35
# 39,15
# 41,46
# 37,13
# 45,67
# 57,20
# 45,33
# 40,35
# 52,5
# 51,35
# 21,63
# 21,70
# 41,45
# 25,25
# 45,5
# 63,7
# 38,65
# 51,31
# 46,3
# 28,59
# 47,41
# 19,66
# 33,14
# 49,1
# 11,19
# 41,41
# 39,63
# 37,20
# 57,47
# 57,1
# 46,65
# 51,1
# 44,45
# 27,53
# 49,42
# 40,41
# 35,27
# 46,21
# 31,26
# 41,27
# 57,15
# 31,24
# 27,69
# 41,59
# 23,51
# 41,69
# 55,28
# 35,1
# 53,4
# 41,22
# 53,33
# 37,35
# 14,59
# 31,14
# 52,33
# 41,35
# 43,41
# 41,43
# 25,59
# 29,18
# 47,24
# 43,69
# 55,1
# 41,12
# 17,56
# 37,5
# 38,11
# 39,36
# 37,69
# 6,67
# 23,23
# 31,15
# 55,34
# 3,63
# 51,55
# 34,47
# 33,38
# 37,17
# 13,66
# 43,31
# 33,58
# 15,61
# 57,25
# 49,29
# 38,49
# 33,39
# 33,40
# 24,23
# 50,3
# 48,17
# 23,48
# 51,14
# 59,39
# 27,27
# 39,22
# 26,51
# 53,26
# 61,7
# 27,44
# 34,59
# 10,57
# 28,63
# 31,7
# 37,63
# 23,49
# 29,57
# 49,26
# 24,9
# 43,44
# 29,22
# 50,17
# 57,3
# 25,43
# 53,11
# 31,44
# 37,53
# 53,65
# 61,25
# 60,27
# 39,50
# 24,57
# 63,5
# 61,41
# 65,4
# 59,16
# 6,51
# 43,17
# 69,9
# 64,1
# 29,50
# 34,67
# 45,49
# 19,67
# 39,59
# 29,29
# 33,43
# 31,67
# 60,11
# 3,45
# 31,39
# 48,9
# 67,1
# 7,59
# 36,67
# 23,19
# 25,31
# 27,23
# 28,57
# 47,2
# 33,51
# 47,29
# 8,65
# 41,40
# 56,9
# 33,54
# 51,34
# 39,3
# 53,13
# 6,59
# 2,65
# 55,3
# 33,21
# 48,23
# 66,17
# 43,51
# 29,12
# 33,29
# 67,15
# 31,45
# 25,35
# 39,5
# 11,61
# 33,10
# 19,57
# 47,37
# 51,24
# 37,46
# 57,23
# 37,58
# 24,11
# 27,19
# 23,60
# 30,59
# 35,50
# 9,68
# 29,44
# 51,21
# 40,19
# 37,19
# 1,9
# 51,11
# 43,35
# 48,31
# 7,7
# 45,3
# 38,35
# 49,34
# 45,9
# 49,57
# 27,55
# 39,57
# 35,11
# 50,7
# 43,55
# 23,61
# 59,2
# 35,26
# 30,35
# 37,37
# 54,45
# 17,68
# 11,59
# 51,33
# 59,6
# 28,39
# 38,25
# 53,25
# 67,9
# 69,1
# 40,31
# 31,43
# 45,10
# 35,61
# 17,24
# 17,65
# 31,13
# 59,43
# 44,11
# 44,53
# 61,11
# 26,36
# 58,15
# 43,26
# 26,18
# 11,60
# 60,18
# 45,44
# 19,70
# 54,39
# 17,0
# 61,20
# 34,48
# 46,30
# 10,70
# 53,6
# 42,60
# 32,23
# 20,4
# 34,16
# 68,21
# 46,28
# 34,60
# 38,51
# 46,58
# 10,46
# 59,0
# 30,64
# 22,15
# 66,27
# 0,15
# 24,50
# 70,36
# 0,34
# 64,8
# 56,11
# 8,64
# 18,61
# 53,38
# 1,68
# 32,63
# 20,6
# 52,2
# 46,13
# 24,12
# 32,32
# 48,12
# 9,20
# 21,62
# 38,58
# 50,49
# 52,34
# 61,42
# 32,42
# 52,38
# 42,2
# 64,13
# 28,1
# 32,4
# 40,6
# 46,68
# 0,36
# 57,26
# 18,44
# 26,24
# 39,18
# 14,23
# 64,28
# 18,1
# 18,22
# 54,29
# 22,62
# 7,60
# 68,20
# 33,48
# 24,38
# 16,26
# 70,33
# 42,18
# 36,19
# 9,2
# 58,58
# 31,40
# 46,8
# 58,69
# 40,22
# 32,46
# 44,8
# 58,24
# 25,34
# 45,34
# 50,60
# 66,46
# 32,58
# 59,70
# 6,29
# 36,68
# 12,19
# 36,16
# 2,16
# 58,34
# 32,22
# 26,3
# 9,50
# 16,10
# 38,40
# 60,2
# 60,15
# 40,39
# 48,6
# 41,34
# 37,26
# 0,48
# 52,67
# 20,8
# 56,42
# 2,66
# 47,16
# 52,32
# 44,18
# 44,31
# 33,20
# 65,34
# 51,2
# 54,50
# 51,16
# 50,1
# 46,60
# 62,10
# 30,30
# 70,42
# 4,58
# 32,38
# 6,64
# 52,46
# 67,6
# 10,22
# 60,53
# 50,0
# 34,28
# 29,30
# 60,34
# 42,26
# 31,2
# 51,46
# 26,35
# 8,0
# 18,58
# 60,33
# 60,36
# 0,8
# 2,61
# 18,68
# 54,23
# 38,4
# 8,62
# 52,28
# 50,34
# 48,51
# 70,43
# 36,64
# 40,67
# 66,2
# 11,24
# 70,4
# 45,40
# 12,22
# 16,60
# 43,52
# 54,36
# 46,59
# 52,55
# 18,32
# 44,54
# 46,66
# 28,28
# 42,40
# 28,24
# 49,50
# 18,9
# 57,8
# 52,8
# 48,62
# 70,46
# 7,50
# 16,9
# 0,65
# 32,59
# 19,4
# 53,62
# 16,44
# 16,65
# 10,69
# 46,2
# 52,27
# 32,6
# 16,37
# 46,0
# 29,34
# 13,10
# 27,24
# 54,18
# 4,62
# 6,57
# 14,53
# 62,22
# 0,50
# 70,32
# 38,52
# 48,28
# 66,19
# 45,28
# 64,40
# 39,24
# 30,34
# 10,45
# 34,2
# 31,16
# 43,6
# 68,8
# 10,4
# 68,3
# 25,12
# 29,52
# 14,6
# 28,10
# 38,68
# 50,4
# 20,39
# 48,34
# 61,6
# 58,70
# 19,26
# 5,54
# 32,64
# 18,64
# 64,52
# 28,38
# 5,6
# 70,34
# 47,22
# 56,4
# 44,2
# 38,22
# 38,24
# 55,38
# 44,58
# 59,38
# 50,13
# 28,60
# 57,6
# 32,3
# 60,64
# 15,38
# 24,13
# 54,67
# 10,58
# 54,9
# 41,50
# 70,24
# 17,44
# 8,60
# 56,10
# 40,40
# 48,26
# 47,46
# 35,46
# 44,22
# 48,30
# 28,62
# 58,18
# 27,38
# 32,15
# 0,49
# 66,32
# 19,44
# 6,62
# 58,30
# 50,35
# 30,5
# 70,19
# 36,13
# 52,19
# 44,25
# 37,66
# 38,32
# 36,69
# 22,37
# 25,0
# 29,70
# 11,46
# 48,47
# 66,68
# 24,24
# 58,60
# 22,49
# 14,18
# 42,37
# 14,12
# 18,14
# 40,20
# 44,64
# 60,19
# 46,69
# 49,24
# 48,56
# 10,8
# 0,52
# 11,16
# 32,28
# 26,56
# 57,10
# 58,19
# 66,25
# 65,16
# 26,15
# 28,30
# 14,52
# 5,50
# 12,18
# 65,24
# 56,58
# 18,24
# 67,42
# 62,34
# 64,16
# 56,23
# 31,30
# 12,44
# 65,0
# 45,16
# 50,48
# 20,22
# 69,18
# 66,38
# 24,29
# 42,59
# 44,21
# 38,14
# 51,40
# 61,40
# 42,36
# 63,26
# 67,0
# 11,52
# 10,50
# 28,37
# 13,42
# 36,49
# 43,48
# 23,34
# 36,18
# 18,26
# 42,17
# 0,42
# 4,17
# 35,54
# 62,24
# 46,45
# 50,30
# 50,44
# 52,40
# 43,12
# 56,30
# 65,42
# 52,10
# 53,52
# 35,24
# 46,62
# 68,0
# 68,30
# 5,38
# 58,41
# 12,50
# 30,37
# 24,5
# 42,6
# 17,66
# 25,26
# 70,45
# 2,22
# 55,20
# 40,50
# 0,10
# 42,51
# 48,40
# 5,14
# 0,54
# 24,22
# 66,12
# 35,58
# 36,1
# 28,36
# 58,39
# 33,42
# 14,60
# 49,32
# 30,25
# 12,4
# 45,56
# 18,28
# 13,68
# 23,10
# 46,63
# 0,18
# 38,17
# 35,22
# 45,6
# 24,32
# 62,12
# 10,66
# 66,40
# 45,12
# 67,24
# 54,14
# 50,66
# 40,32
# 30,20
# 27,8
# 20,28
# 54,63
# 32,43
# 31,12
# 30,13
# 43,54
# 15,10
# 48,43
# 42,20
# 40,15
# 32,25
# 8,9
# 16,14
# 16,20
# 0,39
# 44,30
# 46,64
# 2,25
# 63,8
# 54,62
# 8,10
# 49,28
# 24,18
# 40,66
# 40,45
# 18,33
# 40,46
# 32,62
# 2,47
# 58,23
# 62,64
# 66,10
# 42,23
# 8,58
# 12,16
# 54,0
# 1,60
# 58,46
# 62,28
# 70,29
# 64,12
# 10,51
# 58,10
# 48,20
# 52,45
# 32,12
# 12,2
# 29,8
# 0,59
# 64,50
# 38,50
# 38,33
# 54,28
# 49,56
# 20,26
# 6,14
# 56,38
# 58,21
# 44,37
# 40,21
# 22,12
# 44,36
# 46,54
# 10,18
# 43,4
# 44,34
# 67,12
# 22,61
# 42,8
# 26,7
# 28,12
# 34,0
# 34,18
# 22,8
# 23,28
# 64,30
# 52,54
# 49,10
# 34,14
# 14,64
# 42,57
# 6,44
# 70,20
# 10,55
# 62,65
# 50,15
# 43,18
# 13,64
# 60,39
# 30,24
# 14,13
# 62,15
# 22,58
# 34,57
# 9,62
# 40,42
# 68,24
# 6,53
# 36,56
# 50,18
# 6,4
# 25,32
# 38,21
# 55,30
# 60,42
# 65,10
# 64,17
# 35,8
# 12,68
# 38,12
# 40,5
# 70,5
# 37,30
# 34,54
# 14,27
# 50,22
# 28,27
# 39,28
# 70,14
# 57,12
# 8,19
# 58,62
# 24,4
# 40,27
# 14,22
# 34,44
# 18,23
# 68,2
# 22,34
# 64,64
# 14,25
# 40,4
# 60,14
# 18,16
# 55,0
# 16,45
# 3,30
# 6,70
# 8,20
# 64,44
# 38,47
# 2,13
# 8,63
# 40,24
# 17,52
# 2,12
# 22,40
# 24,58
# 22,22
# 34,36
# 12,36
# 24,2
# 54,26
# 2,36
# 48,60
# 20,47
# 4,32
# 30,16
# 61,36
# 70,9
# 0,38
# 59,56
# 57,58
# 50,12
# 70,15
# 37,14
# 54,12
# 0,63
# 25,48
# 23,64
# 22,18
# 42,30
# 2,60
# 68,47
# 36,70
# 28,22
# 8,6
# 36,8
# 23,24
# 33,32
# 36,26
# 25,50
# 32,37
# 46,4
# 5,0
# 41,0
# 70,48
# 67,60
# 39,16
# 8,57
# 36,40
# 60,10
# 70,26
# 6,66
# 14,67
# 14,14
# 55,32
# 67,38
# 28,44
# 8,50
# 16,32
# 70,67
# 9,6
# 64,18
# 18,19
# 51,52
# 34,32
# 11,48
# 43,32
# 18,56
# 25,54
# 32,8
# 26,22
# 45,30
# 28,68
# 60,60
# 16,54
# 26,16
# 6,34
# 48,19
# 2,7
# 48,52
# 42,64
# 53,14
# 22,10
# 14,10
# 64,38
# 5,48
# 34,61
# 60,45
# 18,10
# 36,30
# 5,68
# 66,14
# 30,54
# 64,68
# 12,64
# 37,22
# 0,32
# 65,30
# 70,50
# 50,32
# 20,60
# 6,40
# 7,58
# 10,60
# 30,15
# 56,22
# 14,70
# 8,28
# 44,68
# 16,53
# 19,8
# 51,70
# 41,64
# 47,32
# 14,65
# 56,48
# 10,40
# 68,70
# 30,63
# 64,14
# 4,24
# 16,16
# 24,56
# 69,68
# 46,26
# 48,11
# 48,54
# 12,66
# 38,48
# 43,46
# 3,0
# 55,48
# 47,6
# 4,41
# 14,17
# 36,36
# 15,68
# 32,39
# 22,2
# 46,70
# 46,22
# 2,37
# 15,30
# 60,29
# 58,6
# 19,64
# 35,16
# 43,8
# 2,57
# 54,42
# 20,36
# 59,12
# 2,52
# 65,22
# 57,34
# 26,4
# 50,52
# 6,15
# 28,58
# 8,38
# 28,52
# 21,0
# 9,26
# 45,70
# 8,48
# 4,34
# 58,8
# 4,56
# 64,57
# 36,52
# 12,42
# 62,43
# 19,0
# 2,46
# 13,62
# 47,36
# 62,26
# 34,63
# 22,54
# 7,32
# 15,58
# 30,66
# 46,11
# 26,66
# 47,54
# 68,4
# 45,8
# 60,0
# 39,32
# 44,26
# 36,38
# 49,2
# 66,56
# 2,33
# 20,41
# 60,28
# 10,56
# 5,12
# 66,61
# 2,44
# 0,55
# 35,40
# 28,56
# 64,39
# 64,70
# 70,13
# 44,46
# 2,34
# 12,14
# 2,53
# 34,69
# 3,70
# 20,49
# 60,58
# 2,56
# 36,11
# 38,67
# 48,35
# 33,68
# 30,60
# 34,9
# 70,12
# 44,62
# 54,68
# 58,20
# 38,30
# 58,31
# 56,26
# 70,25
# 53,2
# 14,36
# 49,38
# 57,64
# 5,36
# 10,2
# 46,67
# 9,66
# 24,66
# 7,52
# 56,20
# 15,14
# 17,18
# 20,7
# 50,2
# 38,38
# 65,44
# 23,70
# 22,42
# 42,14
# 35,44
# 62,5
# 46,49
# 18,12
# 10,30
# 22,56
# 15,46
# 30,7
# 48,44
# 22,4
# 66,24
# 70,40
# 54,52
# 4,6
# 51,10
# 5,70
# 40,38
# 62,59
# 23,26
# 60,50
# 13,54
# 2,64
# 56,17
# 20,16
# 56,46
# 62,25
# 30,46
# 16,27
# 68,27
# 56,18
# 12,52
# 34,30
# 58,5
# 38,42
# 0,67
# 52,36
# 13,34
# 20,52
# 37,70
# 68,15
# 11,64
# 66,8
# 18,66
# 7,28
# 26,48
# 8,8
# 16,2
# 41,30
# 37,60
# 52,60
# 40,52
# 48,22
# 61,64
# 38,20
# 36,44
# 50,68
# 30,43
# 36,55
# 69,40
# 62,66
# 66,58
# 48,10
# 3,40
# 14,24
# 0,5
# 25,2
# 36,53
# 39,62
# 68,63
# 8,13
# 61,32
# 59,28
# 60,26
# 23,30
# 66,66
# 49,66
# 60,24
# 66,44
# 10,12
# 68,44
# 36,60
# 68,31
# 38,18
# 23,18
# 66,33
# 8,46
# 28,41
# 70,68
# 34,1
# 44,44
# 10,35
# 54,10
# 64,67
# 16,66
# 50,61
# 44,32
# 26,10
# 58,42
# 62,49
# 19,36
# 23,14
# 56,69
# 18,70
# 21,32
# 16,48
# 26,40
# 23,0
# 17,16
# 33,56
# 49,18
# 42,45
# 40,36
# 34,52
# 68,16
# 0,60
# 40,61
# 20,5
# 0,44
# 30,33
# 63,0
# 18,18
# 66,62
# 66,16
# 23,4
# 55,40
# 48,8
# 68,28
# 42,58
# 42,31
# 12,69
# 0,9
# 29,36
# 70,0
# 68,67
# 2,8
# 36,14
# 68,55
# 37,36
# 56,64
# 50,51
# 36,17
# 7,12
# 64,35
# 40,3
# 56,56
# 47,42
# 11,36
# 39,48
# 60,68
# 30,14
# 48,67
# 6,21
# 36,66
# 12,25
# 34,34
# 64,4
# 43,16
# 20,54
# 68,1
# 22,0
# 57,62
# 27,70
# 44,10
# 51,0
# 31,54
# 66,29
# 61,50
# 67,48
# 38,2
# 41,26
# 2,3
# 0,68
# 26,28
# 44,50
# 9,10
# 36,48
# 35,18
# 10,65
# 36,61
# 28,19
# 46,37
# 38,6
# 52,50
# 68,38
# 55,26
# 20,17
# 70,10
# 64,45
# 57,44
# 31,10
# 28,25"""

# # data="""5,4
# # 4,2
# # 4,5
# # 3,0
# # 2,1
# # 6,3
# # 2,4
# # 1,5
# # 0,6
# # 3,3
# # 2,6
# # 5,1
# # 1,2
# # 5,5
# # 2,5
# # 6,5
# # 1,4
# # 0,4
# # 6,4
# # 1,1
# # 6,1
# # 1,0
# # 0,5
# # 1,6
# # 2,0"""
# ROW=COL=71
# # ROW=COL=7

# data=data.split('\n')
# data = [ (int(x.split(',')[0]),int(x.split(',')[1])) for x in data]

# visited=set()
# for x,y in data[:1024]:
#     visited.add((x,y))
    
# q=deque([(0,0,0)])


# test=[['#' for _ in range(ROW)] for _ in range(COL)]



# while q:
#     steps,x,y= q.popleft()
#     if (x,y) in visited or not(0<=x<ROW and 0<=y<COL):
#         continue
#     # print(steps,x,y)
#     test[x][y]=str(steps)
#     if x==y==ROW-1:
#         print(steps)
#         break
#     visited.add((x,y))
#     for dx,dy in ((0,1),(1,0),(0,-1),(-1,0)):
#         nx,ny=x+dx,y+dy
#         q.append((steps+1,nx,ny))
        


# #part 2 

# def checkCross(visited):
#     q=deque([(0,0,0)])

#     while q:
#         steps,x,y= q.popleft()
#         if (x,y) in visited or not(0<=x<ROW and 0<=y<COL):
#             continue
#         # print(steps,x,y)
#         if x==y==ROW-1:
#             return False
#         visited.add((x,y))
#         for dx,dy in ((0,1),(1,0),(0,-1),(-1,0)):
#             nx,ny=x+dx,y+dy
#             q.append((steps+1,nx,ny))
            
#     return True

# blocks=set()
# for x,y in data:
#     blocks.add((x,y))
#     visited = set()
#     visited.update(blocks)
#     if checkCross(visited):
#         print(x,y)
#         break

#day 19

# data ="""guw, wg, gwuw, wwb, bbu, rug, grw, gubw, buwr, rgrbb, grwg, ubgwgw, wug, rgrbg, wb, uwubr, uggbubg, uuru, bwwbgwr, brwggrgg, urbgrr, wrrgu, bgr, rb, rgw, rwgw, wruub, rbrw, rrwb, brbw, gbbr, gub, bbg, uwwgr, wbbwwrr, rrg, rwwu, wbwg, bb, gg, rrbbg, wgur, rgrwru, uwgbuw, rbu, bwg, urbuug, wrubbb, uwrg, rrgbwgb, wwwwbg, wrw, bwbb, wwr, g, wggw, bwrbg, wuwrubu, wbrrwgrr, uwgguggw, bwrw, wwrg, wbwuurb, urg, gwrgr, gwr, rwrrgb, wuu, gru, uwuubgr, urwwuuw, uub, bgw, ruwugu, wggrwbu, ugu, uwwguu, uugg, guu, rbuwbgrw, brrg, rgu, bgrgw, wwg, rgggr, bug, uww, wrrw, rbw, wwuub, ww, bg, rbbrurg, wuw, wrrruuwb, wbrrbww, buwwr, urwr, wwug, rrb, wbgg, rub, bwurw, wwwbrr, rgr, ugrw, uuwrg, uwrgw, rwu, grbb, gurrgw, ggbrrw, ubrw, ubwrbw, w, ugrwb, wrwu, bwrggu, uwg, wr, rrwubu, wwubgu, wbr, wrrrrb, ug, wrbg, wuwb, gbrg, brg, rrbgu, bbwr, wbb, buwu, rw, bw, grrwg, brbg, wrrwww, bgugwr, bubw, brugugw, urgw, gwru, wrbu, r, gbgbu, wrrr, wruwurbu, buruur, ubg, rbbbbb, rrw, rrrr, gugrgb, wgbbbww, brb, gbg, rggu, gugbrrwu, ggu, wrg, urbw, rbr, guggg, ruugur, bbr, bgu, ubw, gbgugb, uwrguug, wbwwb, rwwb, uuub, rwwwg, wbrugrug, ggg, bub, uwr, ubugrw, urru, wgugu, ggubuuug, bur, gwgur, urgrubub, rgbb, ugb, rgurru, wbwu, bgg, rwr, gggug, rur, rwrgb, uu, uwu, grb, wrguw, wuwu, rugb, rbugb, grrug, bgwrw, buuggru, b, urwbbrb, rbrubr, rgb, wbbb, rrr, ruu, brbrg, uwbwwu, brw, wbuugwb, gbbw, gbwu, ugr, uwb, br, rr, wbw, rrrbb, gwwrugb, uuw, wwuuwru, grrbg, rwwubwb, uuurbrw, gbu, wgrbbwu, ggw, rwbr, urwuu, urggw, ubrrru, gugbgbg, rgwb, rurw, ugrb, wwwgr, gbbubuu, rwbbg, bgbruu, rwgbu, wbgr, wrb, bubbu, urwg, urugw, rwg, wgbbbw, gwggggu, urb, bubb, bubruw, ruwb, bguu, wbggb, gww, rrwgr, buuw, gbgbgg, rru, gbrw, gwuru, wwwwwbr, gbru, wggrr, wwu, uug, rrwbwg, uurw, bbgbbb, gwu, uubg, gbb, buurrbg, www, rwwuu, ggbbr, gbrwugg, rgwg, wubbu, gubbgw, ub, ggugr, bruw, bgbbbbb, bbrb, bwbgrur, gr, gur, ubu, rbrb, gwbrrb, ruwwuuug, brr, bruu, uur, bwgb, wub, bwb, bbrgrgwb, gwwuw, wur, wguw, gwbugbg, gbbbbwr, ururb, uw, urrg, uwuw, wbg, buug, wgwbr, ruwr, ru, gbr, ruw, wgrwr, urr, ugbwuwgw, bggrgw, wru, ggurbw, brguwrru, gbwb, rwubr, grurgr, gwruu, rrgg, wuwg, rg, rrwbb, ubbrwg, rbg, bwr, ggr, gwbwu, wuurrw, wbbburgg, brgbgb, bgrwg, urgb, wuubb, ugg, wbrgwu, rbuurbuw, wgr, rgrr, grrwuw, uugu, grg, rbrrwbww, burgg, ubrur, gwwgug, wrwgbru, rbgr, gbw, bgbbb, wgb, bgwub, guubrg, uru, ubgr, uuggg, rwb, bwbg, bwu, gug, uugrugw, rgww, wbbgrr, bgwwurw, wgu, bubu, wrwwrw, uuwgbw, rrrwu, ruuwww, bu, wu, rbggbg, bbubrrw, urwgww, rrgwr, guwgrrwg, bbb, gwg, rwwg, gguu, bwgwrg, wruu, grbw, wwgb, buurw, wgw, gwb, wbugu, urwu, ggb, buuuw, wbggr, wgwgw, ubr, ggur, bgb, brggr, bwbrr, bbbubw, uuu, grgb, wgwww, buggrrg, grr, ggurbu, wbu, rggbbur, buu, brgrgbg, guurgwbb, brubru, bwuub, rbrru, gwgwb, gb, wruw, bww, buw, wrr, ubgg, rrugu, rbb, gwrw, wbwbbwb, ugw, ubb, bwwuu, gw, bru, bugwr, wwburw, gwwr, wrugrugw, brrwbw

# urwwuwuwbbuugugggrubwrbruwbrwuwgrgbuurrrurbbrrr
# gbrgrgbwgrwbguuuurrggwwrrrwbwwrrbugugugrrugugbrgbbbbgg
# urwbbwbrwgrrwubrbwwgwwrbgwuuugubgubggrgbgu
# wrwuwubuwwggurwgruurgrububuuubbuuwuwbrrrrwgwrb
# uguwurbruwrwuwwwuwbugrbwwburwguruugwrbgwwbgruurbububbgwgub
# rrugwubgurgrrbgwrbggbrbwurbrrrwugurrrwrrwbwg
# uwgguuwrggguwrwrbgrugrrgbugrggwrbgbwburbugguwub
# wuwwurwbuwbubwgrugrbwuwrrwugwwgrwguurwbruwrgbwgb
# urwwwwgrurrrurbwurrguuubwrubwgbwgubwwbugrwbrbgbgwwrbbruuugb
# ubrrwrrubwrguwgwruwbgwwrwbbwgwbuwrwubrubwruw
# wbggwrrugruubwugwbruwbuwrggrrrgbwbwguguwbgbgggb
# bbburbgwrrubggbrbwruburgwbgbrgurrrrrwgubgrbwwgbuugbrrbbr
# brwrgwgrbbwbgurbuwuururwgbbguwbgwgrgrbgbguwuubbbwggruwru
# brgbbuwwbrbuubgwgrrugurwwwguurbrrgrgbwbrbrbbuuruuwgrbbug
# wbuwbubrgwbguubrwwwbbbgubgwbbrrbugwrbbuurwrgbrwru
# wgggbbgrbuwgwrugruggurrrrwrrbbuuggugwgrwguugbrwbwrguwrwu
# rbbuwbbwwwuwuwgwuburuugwruuwbbrubruruwbwgbbwguurrrrrwgw
# urwwguuwbugwbburwwrurbwbwgwgbuburwbwrwgwwugrwurwbgg
# urwbrgwrgrbwgburugrwbwuggwwruuruuurruuwbbuurg
# gbwwuugwgwbrrgbuggbubrburrgbgbgwrbubuurwgwwrrwurwuuww
# gugugwwbrwwbrwrruburuurrrgwbrrwgrrwurbwwgurgrgrubbugugg
# gwgwbuggggubbrgbbbbgrgggbggguwbrgbwguwubruw
# urwwbruruwwgbubuubbwruwbrbbwurwgwbrrbubwbbggwguw
# urwbgrguubuwrrggwbwubrgbwwbuuurwrwgrrrwurbugbwgruggrwwrbwgg
# gwwwbruwrwrurgwuuwburggbwubugwuubrrburbbugurruurbuw
# urwbrrwbgguuuguruugwbgggwuuubbuwgguggwubbuwrgguuuubwgbw
# ubrruuurgwwwrgugburuuguwrbwugrrgbruubwwgbwgrubbguuruuu
# urwbgrggugbwbuuggggbwwbuuuwrugwurguwurugwgbgbwwwugbrrgbrurru
# wugwrubbwgbrubuwwwggwwbubuuwrrbrgwuwbrbuuggu
# gruwwrwbgrruurbwbugwurwwrrwwubuuubrggbbbgrbguu
# wguggbubuurwwrrguugurwwwggrbuububgbrrwubbugur
# grwugbwgrrgrwgwrwurbbrbuwugwgwbugrgwbgurggwbrbru
# urwwwuggbrwwburggbbwrrurgguwwgruwgwruwrwwwurgguruuugwrgug
# ugugwbggwggbguwwgubrwrggubbrrgubbuggwwrbubgbwbwubwwwbbbw
# urwbubwwurrwugbgwbrbgubbguruwrrbrgubruwwrggbwburwbbbruw
# urwbuwwwgrwubrurburbrwuwggwuguuwruwuugwrgggggrwurugrwbbrgrww
# urwwrgrgugwwgrggwwgrgguggbbuguguwgbrubwgwbrugwgwwggruuuw
# wbugbrwggrwwbwrurggrguururrgbuwrrbugwbugbwwbbbbbrr
# urwwwrwgrruwwgbbrgrbbgggugbrwrgwrubuurrrgbwrrrbb
# burwbwbbuwrwwrbbgrbgbbggggbwuwbbubwbrbbuwubbbbru
# urwbbrrbbwbgurgbbgubugrrbgggbbbwbubgbggugwuuwrwbgwbw
# urwwrruggbgbwbrubguubbruggbugrbgubrwwrwubwruwwb
# urwwbugwuwuburuwbubuguwubgggbbbgwgugrbrrr
# bbruwgwrwugwugrrrbwbrrugbrgubwwwggwgwgwuwubuugwgruuurw
# urwwgguurwgbuuwgubwbrrurgwwrbwubwuugrwrugwuwuwwwgwuru
# urwwrubugbbwbgrugwwugwwbbuwrwrwuwuuuwwguggwrwbwrrbrb
# urwbgugrgwgwubbwuwrwuuuuwbggwugbubwwrbwrbggwwgu
# urwbwrgbwgrwgbbbgggrurrwrggubrwububbbugwbrbu
# ugrwwbbuurwrwguugrrrrurbwbgubbruuggrgbgruugwwg
# ubugbbuwwrwugwwbgurbwgruguubwrwbgbgwwubuwgubwubggrguguu
# urwbuwrgwrwbwwbbrwwbwbrwuugwuuwugrrrwwurbbrgrugrr
# urwwrrgbrwwrgwrgubbguurgwbbubburruwgrgbgguwuruugrgbwrbwur
# bburrwgugwuuwwgwwrruuguruwwrgbbbgrrrugururrrrbugg
# rrrugwwuurggrururggwrwwuwugubrwbrbwubgbwwwwggwburwbruw
# rrrgwguwwwbbbgubbuuuuwwwwrbgwgbbggguruuubwwggubggrr
# wgrggwwrwwbwuurrbgwurguwgburubgguugwrwgwgggbbbbgg
# rrrrurrwuwgwuguwubwgguubbggbgrrggbwgguurgburbwgwruguuw
# uubrwrgguwuuuwbrwwbbuurgrwrbgggbugwuwwrbugubwgw
# urwwbugwrbwbrrgbrrbbgwwrbubrgubrbgggbrgbrgwg
# uurgbggrgbgbguuwggrburwrgggrbrbgwuubggrwrbbgububggggrrbuwb
# ugrgwggrbruwuguwwggrwbrugrugwwgbwgwbrbgrrubggrbguuw
# urwbwurgbuuurbbwuuurggbrrgbbwruubuwwgbwbgbrbbrg
# urwwgrugrwburrbrgbgwrrgrrbwugbrwbuwwgwwwbrww
# urwwuwrrruuwbgbbuggguuuwgruruwgrbbgugbbwwggbgg
# gwgbwurgbguugwguuwubbgggrbgbbugugwuguwbruuwggrwgwrbgurwubw
# bwbgbrggguugururrrubwgwrubrgwbwrwuugbbguuurgbrggbrw
# rbbrwrwgrbuugwwgbbbwbbwwbuuugggurggrurwgurww
# urwbuburrgwwurugbuuubrwurbuwuguwrbuwbbbgwugru
# grbrrwbwwwguwgbwbwgwbwurgwruubbwgbbruurrbwwubuu
# gbbrrrggbgurggbbggbgbgubbwbbwbbbbbuugrwbwwrwu
# urwwbubrwrggbbwrwurrubruuwrugrugwwugwbwrrrw
# rbggbwwuguruwbubwuugbguwbruwurrbrurrbgbbbwwrbrbrrbwgrr
# urwbbwrrrwwrbrugurgrbuwwggggurugwurubgwwuuguu
# ggwrburruwbbrgurrrrubugbgrbrruuwrugubbguru
# urwwbwwgwuruggrbgbwwbrwurbgbgbbbgrbbgburwbgguwrwbb
# uurwurbwbrwwugwwbrwggruubbuuwrwubbrubwgwuuuwbbubbrwgw
# uugwgurwrubwwrguubgbrbrburrwgubbruwuguwgggruuugbub
# urwbbrwubwgwbrwwurbggbubrgubbbgrbruggrbrubgggugbwwguwwwbu
# wwbgrrgguggurwbbwbrwrgbrubbrwuubwgggbuggrgbwbgwbr
# urwwburrgbgbrwgburgrgbbgbgrbrbbbrgrgwwbgr
# urwwrbubwuwwguwguwgguggwbbrgrrwgugwwwrgbwruwbuwuwgurwwwrr
# urwwrwguuwgguwbgrwguurbbrrwbbgruwrwwrbrurbbbu
# urgbwwbburgwbuwgbrggbrrbrrubugbuuururbwbrubwuubbwbwgwuuw
# urwbwgrbrrbubbwwbgwrrbwgwwruubwgburwgrgbgr
# wbgwubuwrbbbwuggbgwwrubwggbbrrbbgbrgubugbrbugguwgugbggu
# uurbrwugbwwgrugbwubrwrburwruwurbubrgbgugwbwgggu
# rwwwruurbuuwrwrwbggrwuuguuubwguuuggguruuwurruwuggrbg
# rrburwgbbbbwgbrgbwrgubguuuuruwruurgugwgrbgbrurbgbubugrg
# urwbrbrruwrbwbuwugwwgguwbwrburgurrrbggugbwwwgwwwguwb
# urwbwwbuuwwuurbwgggbwrrrwgbuuuwuggbbubbgwbrb
# ugrrgggwbburuwubbrrrwbbgbgbggrwurbgwruguugwrwwuubrbwu
# rbbuwggrgwbrurugwwugbgrwwuwrubuwgrgbbubwuwbrwrgru
# urwbrgurbubrrwrbrrbbrwbwrurbbrgwruuwbuuurgwrgugwu
# urwwuugurruugwuwruwrrgbbuugwgrguwggrubbgrwguu
# wuwurbuwuwwwrwbrrrgwwwurgrugrrwuuugwrurgrurwwbg
# urwwgwbbgbbuwbbwwgbgwrwubwbgrbrgbuguuwgurrrrwgbggw
# urwbbuubbwrrbugbrrwugwbwrwwgugububrgrgbwr
# grbggwwrgwrwbuwubgrbbbggwgrwbrbrwuwgburrrbuwwbwgu
# bbbuwrrwruggrruurgrgwwgurgurgubwruurbugrrbuguu
# urwbbrrrbwburruggbrrbwguwwwuwuwrgurbwubuubruruggguuuu
# wrrbrwwuruurbwwurrggwgrgruwrruurwuwrwgrwuwrgwgu
# brwuwuurwbubwwrgggugggurbrruwgbggbbbgrurbgbwggrrwwww
# rwwgbguguwgguggwguuuurgggwuwugwrgwbbbubgrbrbrwbrbugbbr
# rwruubwbgwuwwbguwwggugguugurbgwwbbgrugwbbruubuugg
# urwwgubugwwurgggwubwuubwrguwgrrwgwuwrbubguuwburrwbwbgb
# ruuwgwbbrugwuubgbwgbbburwwwrbuurbuwrbwrugwgrbbrbrrb
# wugbruugugwrbrwubrwrwuwrbgbrggwbrubwuwbbuubwgr
# urwwbwgrgurwrrgwwrubwwwbbbuwwbgbbgburrwbgwgrwgggugbbbwbwbrg
# gwbwurbgwruwwuugwbwbwrwbgrrbwrbuuwwrbwrguwg
# urwbubbbguwwggwbwwgrburgwwbgurggwguwgugbrrwuruwruwubrrwrwrg
# urwbbuwwrggrbwurwrubwwwgrubggrbwgbwgggwrubbbggubuwbrgwgg
# urwburwuwuuwrwrbggruruugrbwuubruwrgwrwwbrgbgbuwbwbwwru
# urwwuuuwwugbrgugbgbubrwwwubbwrrrrwgwbgrruwrugwruwr
# ggugwbwrwwurgrbrrurwbgrbrwrbuuuguurrrgrbuwwuw
# urwwgwwggrwgbwrwwgrrrguggrgwwwbgugrggwurrrguwuubbrugbbbw
# gwgwuugbggwgbgwrrwbwubrbuurbwbubrubbruwgbrwbrgubgbrug
# gggwrbuwuwrbwgwubuuwurgwwrwwbrrwbgbbbgbgwwgbwrrgbrggwrwu
# urwwrgwruwwgggwwrbwgrubgububwurburuwgrwbbwwrg
# urwwwwwbgbubrwrurwgwuwugrugrbwurgrrbgwwbbgrrgbgggurbuu
# urwwgrububwbgwuwuwggubuuugubwbgrbuggbbgbbrggurugwu
# gwbrwwbwwrbrwbbuurruurwwgwbrrbrwrurbbgbwrgrrgwb
# urwbbbuwubwrgurrgburugurubbgrwrbrbrrbgrbrgguwbuwwb
# urwwgbugbgrwrwubbgwrwwbwggwbuwbugbrrwrurgubgwugrgg
# urwbwugwgbbuwwbwuubbrwbrgwurubrgbruugwugugwbbgwgrggruwurgbww
# gbbwuggbrwuugbgwbggbrbrwbrwbrgrburbbguurrgbbrrgwgu
# urwwurgwurrugbgbbuurrrrbgrbwrgbgrrrbugrrub
# bugwgrururbbgurgwrwubrgggubwwgwrgbwrbruggwggbubugbbrgwgbb
# uguwgrrbubbrurwwrwgubbgbgurwrrwgrgwuugbrgbgugbgguruwgr
# urwwwgbwwugrugugrbugrbrbbburugbrwurwrwwrrrbbuu
# urgurwwbbrbbugruguburrubbrubwwubggwwrrrrrgbggrbuwwubb
# wbggurbguuububwrrrwrwbrrgbrbbbbbbburwurwgwwuuuwuubruu
# wwrwgbbwbggbwwrbbbggrbbbrwgbgwuuwwrgrruguugrbguuuwb
# uwubugbrbguurwrwbrgwbggbbgwugwuwbrwbwbgrwrrrgrg
# rruuwbugrwugrggrwwbbwubwbbwuuuguwrgwwubguwugwwwwrgrbr
# urwwuwbruuwurururruggwggruwwrguurrgwwrwwbw
# urwwgbrwrubbuuburuwrubwbburuwgwburwgrubwburwrwb
# brbuwbuggguuuwgrwubbuurwrgwwrbbugruwwuubrugg
# urwwubbuurrgwbubguugwbrwbggrbrggbugwrgugwgwuwuugwuwubuuubggr
# urwbwgbgurbwrbgurbrrbwwgubbrugwbwrgwuburwbuggwwb
# urwwugrggrbrbguwuubwbbwgbbwbgbuubrggburgwrbbbuuur
# urwwrruurwwuuuguguuwwgguuburgurgwwuwuuuwbwbwurbuugrw
# ubbuguggwbwwwubrwbgurguwrubgrubrrrrwbrwugwbgbrrwugwub
# guwgrbrrgrgruuwgwruuwwrrrwbggwwrrwgbuwuwrrgburwbrgrgwug
# urwbrrugubbuugbbrugwrurrwuwwgrwgrruwwbguuwrwrurgrg
# wgbrwuugwwurgbgbguubrwrwuwrbbbuuwbbbwbgbrrwwr
# grgbgggrbuurgwrggbggrwggrrgggwrurrwrrrwrgwbgrruuwbbruubwru
# ggrurwwbgwwgrwgrggrwgwugbwuwgwbbgrrwgrrgurrggubugwg
# rbrbbbbwbugggubrruwwwwwgrgbrrwwuwgwuwguwguubg
# urwwuwwuuubruggbwbbgrggrwgbwbuubuwwrgrbugbwrwwugubrgw
# rurwwbbuuubbwrrburgwbgrrgwggurwuggbuggrbgubuubwbw
# urwwruuwbuwrurbbwuguurwgrwgbgggbgwurwgubwuwwrurbugugrb
# rrbbggwwguuruwrrwrbbwggbrwggrbbgrwbggrwgbubrg
# wwuuwgbubwbuwgururururububrurgwgbwbwuuuuggbg
# urwbwubuwggwbwgwrbrrwgrwruwwuuguggwwwwbubwwr
# bbrwurwrugwwwruwwgwurrbgruurbrruggwrbuwbgrwggrugwrbb
# urwwbuuwuruubwurrwbbubrurguwgbubrbbwwrrrrwbbguwuru
# uwbrbrgrgbuurrrugbrgbrgrrrbwrrbrbggugggwuwgubrwu
# ggruwuuwrugbwrgwbbwrwwbwwwgwwwbrwbrbubwgbgwrb
# buwrwurbwrrurrbbgrrwbwwbrgguwgggrgrwbruubgwwwwbrbgwrgg
# urwwbgwugubburgrwwwbbrgrrrburbgbrgugbwbrwru
# urwbrgubrurrrbwgwggguggugbggguuwrbrbbbbbr
# buurwwrrwrwrrruuwbwbruwgrwuwurrrwwuwbuwrguggubbwb
# grbrbbugrgurggbrbbgbgggubgruuguugwwbrwgrbb
# rgrugrwgrbwrrggwubbwrgrggbugbugwgburugrrgwbuugrr
# uwruuwbwwwuwrwgbwrbwugururrbbbgwggrurbbgwwgrbbuuu
# guugwbugbrrrbrbggbrgggubrbbuuuwgwgugwgbwubbruwurrgwrug
# urwbgbuuuurgbruguwwgurbrgubbugwwwwggrrugwbrrgwuwwr
# uwurwgrubugrguwbwgwwwrurrbwwururwuuuruwgggwgubguwrbrrrbrg
# urwbbbrgrggrrgwrgbbrgwurgwuurgwrggwgubbbuuwbrrwguuwwwurgw
# wuwrgguubburbbbrurgwurbbgwruubuggugrrwwwbwbrwrgbuuw
# gbrwgurwubgrubgrbbbgrgrrurrggbbgrrubrguurwgb
# rbbuwurgrwrwbwbrugurgburgwrwgrbgrgugrggwbgubrrggr
# wwwbbgwrwwwwbwwbbbwuwuuggrgruwbbwgrubggwugrbuuurwrbwgbgwrg
# gwwbubbrugwgrwwbbruwugwrbwwrwbubggrgugwgwgguugrrrbu
# bggurwgrguwgrwuggrrwubugbugrurwbrgruwwwrbubwu
# urwbgwubgbrbrwbbrubwwbrgggwgbwrrbrbwuwwgugruugru
# rgbuuwbuuwrgwwbuwbbrgrugwburbwuubwbbwwuwggrurugrurbrwrgrgr
# rgbggbwgwrwbwwgrbbuwgwgrbbgrgwurggwgrwgbuwwwwwwwwbg
# urwbguwugwwrugugwwrbubbbgbuwgwbbwrgwggbbwgguwbwggrrguuuwwrgu
# wuuuubruubgugbwwrwubrwrwurbuurwrbbwbgrubrbuuubrwwbgwrbwb
# ubgwububwwrrruwbuuururbuwwrbwwbbwwubrrwbrwgubbwbgbr
# rugbrbrwrwuwurgurrrrwbbuurbgggbwurbwggbubr
# urwwbrrwgrrgrgbuggwwgbruwbuguubbbwubrwrugr
# wbbugwguuubgbwuwwgrbrwrbgubruugrburuggugwbb
# ubgurggbgbrbbuwrwggwrurgbuwrruggurgubwgwruwgub
# urwwgruggbwgwbbbuubwggbwubbgrwguguwwwbbrgwugwgbgugwggb
# urwwuuurbuurbuwurbruuubggwwugwuguugbwuuurw
# urwwbuurugwrwuwrubwgbrrwubgwuuugbubuwgbbrgrgwwubwrbwwgrbur
# urwwburrwrurwwbgbrubrrrwrrbruubgugwwgwwuubgburwg
# urwbbbbgwuuwugwbbugrggbgurgurwrugrgruubgwuwurwrgb
# urwwwwrburwggggbuwurrrbrurrrwwrbrgburugwuuubbggrrburubgubr
# rugbgguguuuwwbrgbbbguubwwurbgbgrwuguwwrbruuww
# urwbbuurrbuggbrbrrwuugurruuwububrbuuwuwwgwbwwgwugb
# gwwrbgwbrrbrrguwrugbgrurugbuwbggrggrrggrubwwbbgrwrgguuguu
# urwwurburrrbugwubuubwbgbuggrgggguubwbrugrugbrgwbruwuwu
# uruurwbbbubrguuuwbrbbbwwwwrbbbuurrrwwrugrwggwuurw
# urwwbgrgguwububggbruwggwrubwrugwururrrgugwg
# gwwubbrgrgwbggbwwuugbrrbwbrgwbwrwuuggbbbubgwugwrrrgrugbgbw
# urwwbgbburwbbrgrgwbwuwbgrrgbruubugbbrggurrgggburggg
# urwwwgubruwrrurrgugbbbrrrbubgrwrbubwgwuwwbbgwrr
# urwwgbbgbrrbugwguwubgbbbwwwgugrbgwurbrurrwbrbruwrb
# rbrbbrwuurrwgrrrrgwwuugbwruuguuwubbwgubuuurgrbuuuwruuwggbu
# rgwbwgwbrbgbuguuuwwruwubbrugbrwwggurugrbwwrwgrbwbwrgbrbr
# rrwbrwgbubgrbwwgbrbrwrwwrgwbbrrgurrbwwrrbb
# urwbgwrwrrgwgrrubbuwwbggwbwgwurgururgrgbggrwwg
# urwwruuwgwgbgrrrurggbgguuururbgggubgwgbbgbrgwgbbuwguurrbu
# urwwbrbuwbgrwwgrggbbrwwugguurggubwwrbgrwuubgubggrgugrr
# bwuburrgwubugbbrugrurwubbwbwubgwbrgugwrwrugbuwubugruuugwr
# urwbugwrbrggwbrbgwwrrwbbwuwbwwuugbwbwwrrrgubwubuurrwbgrwbuu
# urwbburgbruurwubwbwrguwbbwwrwwwgguwgwrrwgurrbwrurburg
# ruwbbubrwggwuuwruugbgbbgbbwbwubgguuggwuwwrugwubwrr
# wgrwbbrgrbwgurruggbbgbwruggwgruwgurgrbbwbuwwrwrububg
# urwbwbubwuwrbwugbgbbuwbruuugrububwbbrrgburgwgbwruubugruuwrub
# ubgwruwrubwgrrbugbrubrggbuguwbbuwwrbrbbwgrgrurbwuw
# urwwrbwwuwbuubggubwugrgrbrrwbwwwrggwwgwuwburuubbrgwwrbbuwg
# wbbgwbggwwubrbwgbggruububggwruwbbwbwbwgrwurgwgrggbug
# wrbbbgrurrrrwbbgrwgurgbbgguwuwwwgrwbbburggr
# ubbgggbrgurbguwgbbwubbgruugguubrwuggbrrwrbrbwgggwbubuwrwbb
# wggugrruubwwwgubrwbrrubbuwggugrwgubgrgbrguugwgbggbwguw
# gurgwwuububwrbbggguubuggggurrbrbbbrwgwugruwburbuugwbwurbrb
# urwwbwurburuwwbgrbbbrurgggrrurwwugwubgwbuuwuwbrbbuguwbrwrbwb
# urwbwrbbwbwgbgubwgurwugbwguggubuwuwgbuburwurbgwbuggurrgrb
# urwwruuguggwbbuubuwwrrggbwururgwruugguwbuggurgbbwurwgubrrgww
# urbrwwbwbbrwrgubugrwrbwgbubggbubwgubrbwgburwbrwb
# urwwwwubwbbbrubuwrbrwubbbubbgbuwuwubgrbbbgrrrrgrbgb
# bwubruwrwrrgbugguwgrguwbwrrbwbuggbwuguuwgguwgrgrbrgwbwbu
# urwwbgrwwruburbbgbrbuugbrguwrruwrwrruguuggbuwuuuur
# bugwwbwuuruwbwurgrwrbguurgbuburuurbwrwubrwuwbgg
# rbuwubburguugrubbwrgggrrrwbwubgwgrruggbguububuguugwrgwuwwr
# bgrguwgbwbubrrwbrwwwbgrbwwugrrwbrgbggurrbrbugurbuwbgb
# urwburggbwbbubwubgbgrguwruwurwwbbrruwgrrbgrugg
# uuuuwbbwguugrwrgrbuuwwwubrbwrurbbrubbbwubrwbwwrwbgbrgurg
# wgbuubgggbbrurwgrrugwgrggbbuuwgrbrbwwrgwrwwgbwbbggbuwwgwgr
# gubwwwubwbbrurgbguwurwburrrwbwgubrubgrbrrbuuwbb
# rubbrgbuburguugburrubbuurugbgwguwuwbbbwrrbu
# bbrugrrubwgrrrwrwuuwruugbbuwbgbuwbggubrbbgrbuuwurrgbuwgrr
# uuburwwwurwbrwbrbwurbgubwgwguurbwgwbrbwugwrwbrbbuwruw
# urwbgwwgbubbgbrgrwuwbrguwguwwbrwurwubwrgub
# urwbgwuruburuwbggguggrwwgbrbgbuugbwuwgwwb
# wuwwugwrbwrgrgrwuuubbgugwggruwwgguuuwbrugbwb
# bguurgwwbrgwgbrgwgugwbgrwguguuurwrrurwggrw
# grrbuubwuuubuugururuugbrggrgugwrwrrrgbwbrwrwwrbug
# wbrbgwuubbuwrbrwbwggurbgbruguggurwgbbrburwbrbubbbgwwbugw
# rwrbwwgrruwwugwwbwrguurrbrbgggwwbrbrbgwwurgruwwgrbuwugw
# urwwbbwgbwbrbuuwugbbwrrbggugbgrgrguwwugubggbrwwwubggw
# urwbwbruuwbguwrbguwbbbwubrgrgururbgbrrwbgurwgwrrbbbrwbuuu
# urwbwwwurggrbguurwbrrrrwuwgubbwgugggurrbuubwruwbwugggw
# wgrbbwbuwgwguwrubggrrruugurrbguruuubgbuwrgbgggbbggrgrwuuu
# wwwwuuwgruubbuwrwbgbggwuububbrubwruubrrgbr
# urwbwggwbwgrbwwguuwbwrrgbgrbubruubwbgbuugubbrwgguguggb
# rwwuurbubwurbbubwbggwugruwruugrggbwrugrbrbwrbgrwurwguguu
# urwwwgwwwgrwrgggwrrbwbuuwuuuugurbbrrgruurbbbrbuurgbguwbgwr
# urwwgrbuuuugruwgwbrgwrurwbgbgbguurgbwugb
# wrguwbrrgrwbugbbbggrgbgwgbrwrugwruurububbwwwbwbwgru
# bwbbuuwurubrwgrubwgbbbwgbggubgrrgbwuuuwuurgrrbr
# bbgbruwbubwwubbwuwbuuubwruguwwgwbgwbruurrwwgguwgrg
# wuwwgrrrwuubbugwwwbruwbwbwubuwbwugggbwwuururwuw
# urwbwbgbbrwbuugwbwwggbbgrrurgrbbbuggwwuu
# urwwwugwwgbggwwrbgbwguuuuugurwbgbrrbgbwrwbggwwbgrg
# bbwwgwrwrwwbwrubuuburuwggwwwbbubbuwrbbuwwburrrubbwrbg
# guubburuwrbbgwgrbbguurrbwgbguugrrrwrrbrubr
# urwwruwggrubrrbwbwwwguubbbwrrbbwwrugrwbbwrrbugwuggguugbbbuw
# rwgwrwggugrrwbgbuugrurubwwbwwubgggbbgbgggwrrgugrbw
# gggugbrwbguwguwbrbgbwwwwgrgbggwrwgbruggrubwgr
# urwwwguubuguwwurruuwwbwuwubuururugggugbubwrbbggwrugbrruuwbuw
# urwwgwguwrwgwwwbwrubgwrrwbbbbbbrbubbruuwwguwrwwgr
# uwgguwwrbbwbgubwwbbgbgbbbubuuugwbgrbgwguwwbbu
# rrrubgrwuubrgugugrrubgggwwuuwurbwuwwrrrgwrguwurgwggrrrbb
# grgbgubbbbrurwbbbgrgwurrwgrwuwwbwgwgwubwbrgb
# bwurwbuggwwwwwugbuubbbbrgurrwwbuwgrggugubbwgwrurrgwbwuuubr
# urburwbbwbbuwubrwuwwggbrurwwrrwgbwwwugrrruuuug
# rgurwwuwbbruubrbuggrrbubugwggwwgbrgbbwggru
# urgurwbbuwuwbbbbrgwruubuwrbbwuubwuubugbrgwguwbw
# urwbwgggbrgguubgbruwwurrgruubbubwuwgbbbrgwur
# urwbbwbgrwgubgbwuwrururwbrgurrrggrgwwgwwbbgruwrrrbuugu
# uurbbugrwuuuwuguwwbgwurbbbuuururrwrrwrggbgbuuwrrugubu
# uuurubbgugrgwbwbggwbgwrbbrgrwrububwggrwguugbwbgwbg
# wwgwwuuwgwgrwwbbgbbbgrgruwwwbwgbwrbwwgbburb
# rgbuuwuwgrwugrrugrwuwbwrwbrurggubuwgrrrgbuwugwrbugb
# urwwbbbguugugugwrbggwwurgwbbubgugubgrwugwgrrgbbgur
# urwbbbgbubwrbwwbuuurwbwurbbwuwgrrwurgggugrbuwwurruubru
# urwwrgbbwgwugguwrurwwbrgrgrrrrrrrrwubwggubub
# bgrrrbrwwbrbrrrrgbrbwrrbrgrrwwuwwgwwwubrwbrgb
# ugrruwgrbrrbwrwuwrrwgbgugbrbguguggrbwgbrbrggwrbwggurr
# wbgbrugruggbugwbgbuburwubgwrwrugbbrbrwgugg
# bwgruggggwrwbuuwgbubrggggwubuubwubrguuguurub
# urubgrruwrrrggwbgrrwugrbbuurgwurwwwrwuuuggbguwb
# ggurrgbbggurbrgrbgrwrgurwbbgbrrwrwggubuwuruuuwbwrbuuuubbgw
# rwurrrbgbgrruwwguuwbwbwwrurggrrguguwwrbubrrugbwbg
# rbrbrgwrgruburbbbuwbgwgbgrgrgrrgggbwrubuwbbrrgbw
# grwbwrugwguuubggggrgwrrwwwggbuuuguwbggwbubwbbrrbrggbwgbgb
# uwwurgrguubrbbwrbwgubrbbuwbbggwugbwbgbbwgwgruruguwru
# gwbggugbgrrgrbuwrbrwwrurwuuwrbbbwwwbgwrugrwwbgrurrrug
# urwbgubguurgwrwbrwgubrwugrgbgwrwbrrwuwrbbgggrrw
# urwwguugbuurrwugrrggbwgwgrbbrgbuuruubwbu
# gurwugbrbwubwuwugbggwguggwwrburwuwguwwbuubbbuubwrguwguwr
# ububburubrrgggguwbwrrurrwwbuugbrwbgbbbugubrrbg
# rbrbwrubgrgbgwwubwgwuuwgubbburwurrggbrguwrrgwurruubug
# rrrbbwgrgurbbgrrururwrgrgrwrgwgrrrbwbbbubrgwubgggugwuuub
# ugwgbwrruurbugwwgwbrgbwwrwbruwgbrbrgurwgrbwb
# urwwguugwbwbrrbbgrwgrwbwwrwbubbwurwbwgrbgubbuw
# urburwwugguwgwrgruwrgwgbwwbrwgrrwrrrrrugwruurwurbubgww
# urwbubwurrrgrrbgbwbgwrggugwrbuuuggurrgbwwrgrbbgggbuugwgugww
# grbbugwrbbuwurbgrrugwbbrwuwbgugrwwbggbrwubuurwbwuwgr
# urwugrrurugwbgguwwgruruwbuugurwgbwwbgguwgrrwgw
# rubgwuwbgrbwbrrwrbggguuruuubwwrubgbuwgguuburbrwguwuwrww
# urwwubrgwwbwwbuubrrbuwwwugrgugwwugrbgubrubwrwr
# guguuwuwrubuwrwuguwwrgbwrwrguwbgrwwbguurubuwuur
# bbugrrbggrwrrbbwgbwbguuwuburbbruwrururuggwgbugbbbuwwrr
# brbbwrrrbwbwbwwrbbrbgbuugwbbrururrrruuwbruwrgbrubuu
# rruwwwggwgrgrbwrbbwwwwgwbgurrwrurrgguwbbbu
# urwbrwwwbbrruubgbbbrbbuuwgrwgubgbrwbburuurwrwrgubw
# rbwgggrbgbwrgrbggrwrububwuugwwugrbubgrurguuwubgw
# urwbuwbbbrrwrgrugggggrwrgugugwugbbwguubwwbbuugburgwugwwugr
# wurwrbbrwwubgbwgwbubwubrgwwwrwgurwbugbuwrrgbbguuww
# uwgbubgrgrbubgwbrbgwuwbuwgrurwbruuwbbburwbbuggugrgbb
# urwbubrgrrururgwrbrrubrgwgggrwggbrgwbuurggbbggbwubgwuwg
# brrwuwwugugwggruurwuugbbrbruugrrwbugrwguwrwruuwwbrrurruuwr
# rbbrggbgbwbgwbbbbubrgwgrrurrgrrwgubwgwgggwbbww
# bbbugbwwwwuggbbwbuuuwuwrugwwrwwwrrgugrguuggwrur
# urwwrwuwbbrbgrrrgwgugrugbrwggrggbrgubrurgurbrwbuwbgrurwubwu
# urwbggwubwwbbuuwrbwwbrbrgrugubbwbbuurwubwggbwwwg
# urwwwbbwrrugbuurbuwurrurgwwbgburbgggrwuuurubgbguggbgwr
# urwbbguuggbgrwuwurrwggwgwruugbbwrrgbgurugurrrrub
# urwwggrbuwbbgbggggwrwbbubbbwurgrububrrwuu
# gbubuwuwgwrgbwbruruwwuuugwuggbgrbwbgbrrgbwgubu
# urwwwuubgurrbrwbbrwbgrbgwguwrrgrrrgruugrgguwggguuwuubruwggu
# rwwbrwuwugggrurwbrrwguuugggubuuugbwrwwuuuwbb
# urwwbgwuwgrbbwgruwubbuggwgruubbrbgwburrurrwgrgbugr
# urwwugbgrgbwgwuuwgrggruubbugguwwruruubbrugwb
# wururugugguwwwwrggbgwwgrrgguwwrrbwuwwrrwwwbgwwrb
# grwgguwguwwrruwrbrwrrgwruwrwbgrwrubwwwuuwbbruuggwggg
# urwbgrwrwbrwwbwbgbgbbuuwwrwugubugggbuurwbggrbgrugbwbruruu
# grguuwbugburbugbrggrwwbrruruwbbrgrgwrgbwuuwruruwbubu
# uwwwuggwwuwgwgrruwrwuwbrugbbrrruuururrbrrbwbbuguruwrwuwu
# urwbgbgrrrugwgrbbgugwguuwrwrrwbgguggggbbuubguubbugwrrrru
# urwbbgggbbbubggwrubwuwuuguwwugubbrrrbuubuwrgrgwwgrbu
# urwbubuwrgwbugwwuurrgggwuruwrrwrwgubgwwbrgbbw
# wrrbrwubbwrbbuwubruurrbggbbrbbwrrburrbwwggrbw
# urwwuubwugwrrgurrgbbwruwurbubuwbugwgbrugbrbuuwgrbwwbwgg
# urwwbgwguruubrwgugbbrwgggwbbwrbruurbgbgwggbgbuwrbb
# urwwugurwuggubbggwubgubggwubrbuuwrgubwbwubuuwwu
# urwwgrgbbbwguurgrgburbbbbugubgwuuugugbrgrrbwurbubgru
# wrgrrwwuggbwgrubgbwrrrrbwggruwwbggguwugrrgubrbguruwrb
# urwbgwugrrrbrurrgbwgubgubbwbbgwbgwgurwrrwuruug
# urwbbggguguuwrbrbwbgbbrbubgggbbuuurwbwggrubuugruugruru
# urwbbguwwuggggruwwrbgbrguwubgrbwgbrwwwugurbugrrbrgruugggg
# wwgwgwgubuwrrrubrrwguwbguguurugbbbguugbuuwgwubbw
# gbgbgrggwbrwbbrgrgwwbwrbbuggugbrrwugwwwwwuuwrbbg
# ururrggwgwrguwgbwuubuwgrgbrrrwwwwbgwrbwwwrru
# urwbbbbgrburbwurguwbbbguwwubgwwbrwrbwbrwgr
# ggrburugwrwrurgwrrbrgurrugubuuguwbwbbbrbrwrwu
# wgwruurwbuurgguwbwugruwgbrugbgbbuuurgruwbwruurgw
# urwbugwrgrbuwbwrbuuruuurrrwrruwwuuugrbubrrbbrrubwbuww
# urwwrbgwrrbugrwwbbgwrugwggubbgwrwgggwrruwrgw
# urwbgwbwrbrugrwwggubgbwwwrrrrbggruwbgurgrgrrwgwwr
# brugwwwrbbgbrwuwugbuwbbwurbwbbuuurubugbrrwggrrrwruww
# rguubugrwbbbgurbbwgubrrbwbwubgwgwbbgubwrgubwugggruwrwrwuu
# rrgubuwrbrrbwuwwuurgwbwwrgrrurgruwwuuruuwrgwbgbug
# urwbrgwuwrbrrbgbuuwrgrgrwgburwgurubrrbrbubgbwbrurgrrgwgrgru
# rgbbwwruwubrgwurrbbrugrbgrwgwrbwbwwwgbgwgubbggwwgbrbwbggu
# rwugrbrbbwrwbggrrwgrurrrubgrggrruwrwrrrrugrgggbwr
# ugbgbrwurgugugrrwwwrbuuugugurbugbbuwgbbwgrbrbrrrrwgguwww
# gggwgubggbuurbubuuurgguubrurgbbwbuwurbgwgwwrbuuur
# urwwrubgbuuwruurwbububwrurrbrwugrgwbrrwwgurrubgbrruwrbu
# brbrbruubrwugwburruwgwrwbwruwgwugrgbwbbgwwgbuwubbr
# bgwrwbrrwuwbguururgrwggwgbwbrgwbbgbbugrgurb
# urwwugbrbbgrgbuwrwbrruwrwubwrbbbgrbgruurrrrrgwrwbgrrg
# rwrbbwburwgwgrrgrrugwbubwuuuguggwbbwwurruruugw
# brwggrggwbrggrbuuurbgrrwuubrwrurwugbguuwgrgurguggbbgurgubw
# urwwuwwgwbbguguubuuwggbgrrbuwgrwwgurwbwwurgrwuwuuw
# gbbrbgbbbbrrurrwruugwrrrurrwrrwbwbwrgugbbrguwrruu
# wggrwurggrggwuwwwbwugbgbbgubwuwgubwburrbuwwgbbbbwurr
# bbuwbbbrrbrrruwbwbugwrrwruwrburbrbrgwrbbbuwubr
# urwwrrrwgubburbugggrbbgrwwrbuwrrgrgwwugwgru
# rgurrbgbbrbubwwugrgwbwurbbbgwbbbbburwbuwwubu
# urwwgbwbbrgrugwburwwbuwbugugburuguuggguwggbrubuwguwrwwguwuu
# urwwgubuuuubuwrgrburbbbrbbrgwbbgggwrgwgguugwbrw
# rbgguurgwbbwbwbguuwwgwrubwwugrwuubwrbubgwbwggggubrgwrb
# bguuguwwgwgwbgugbguwgwuwruwugguugbggbuuggwbb
# rgggrrgwgrgguwbgburwwubgubgubgbuggrubbgbgrgbrggubwg
# wgwrbwgruburrwbuwugwrubgguuuuubwwwrrggrrbruubwrwugbrbbgru
# urwwugrbrgwrbuubbgwgugruguwuggrrwrwuuwbgwwurwuuwubugb
# urwbrrugruwgrgwgguwrbbubuwuwuwrruuugbbgwbbbbuwbgwwwubgurbwrb
# urwburwbrgrbgwuuwrruwurruuwrbgbgubwwwrwur
# urwbwwruwbubbbbgwugbrbuwruuwwbgbbwwrurbbrbbwuub
# urwbugubrgbbgubwguwuggrurgwwwwurrwgurguurggbw
# wrububuwuugubwwguubburbggrrwgbrbrbrwgurbgwgbg
# urwwwgbrbwrgrrrrwwgrbbgbrrruruuurbgrgubwbbburggurg
# rwgbuwguuguuurubbrrrgwwgubgwrgrrwgurwrwgrb
# ruuurgubruuuwbggbbrrrrubbruwugwgggrburrrggr
# wruguugwgguguurrrurgrbbrbgbwwuuuuwugwrrurg
# wrugrugwgruwwbbrbwbrrruguubwbuwuuggbwgggwrbrrburuu
# urwwguwuwwrwurgubbwruruwgrurbuwuguuugwbgwggbu
# wbbbwrwugwrburwubwubwububwwrwrwrgrwwuwwwbruwbw
# urwwbugwbgguuubrwbbuwwwggwugrwrwugugugguwwubgurgbb
# urwwrgwbggrgwwrrugbuuwwbwwgbruwguwgwrgwrburbuguwurgwb
# urwwbwurrrbwgbgruwrgrrrgurwuuwruugrbggrgrwww
# wgbrwwrrrurrwuwbbwbrugurwrruubggbubguwrwrb
# rwgrbwrgwwwgbwwrbwbgbrrubbbruwwwbrgrrrwbwrggrwgg"""

# towels,patterns = data.split('\n\n')
# towels=towels.split(',')
# towels= [t.strip() for t in towels]
# patterns= patterns.split('\n')

# cnt=0
# maxTowelPattern=0
# for t in towels:
#     maxTowelPattern=max(maxTowelPattern,len(t))
# towels=set(towels)


# def canCreate(i,p,memo):
#     if i==len(p):
#         return True
#     if i in memo:
#         return memo[i]
#     for j in range(i+1,min(i+maxTowelPattern,len(p))+1):
#         if p[i:j] in towels:
#             # towels.add(p[:j])
#             if canCreate(j,p,memo):
#                 memo[i]=True
#                 return memo[i]
            
#     memo[i]=False
#     return memo[i]

# for p in patterns:
#     if canCreate(0,p,{}):
#         cnt+=1
        
# print(cnt)
            
                
# #part 2
# cnt=0

# def canCreateWays(i,p,memo):
#     if i==len(p):
#         return 1
#     if i in memo:
#         return memo[i]
#     else:
#         memo[i]=0
#     for j in range(i+1,min(i+maxTowelPattern,len(p))+1):
#         if p[i:j] in towels:
#             memo[i]+=canCreateWays(j,p,memo)
#     return memo[i]

# for p in patterns:
#     cnt+=canCreateWays(0,p,{})
        
        
# print(cnt)


#day 20

# from collections import deque


# data="""#############################################################################################################################################
# #.........###...###...###.........#...#...#...#...###...............#...###.............#.....#.......###...........#.....###...#...........#
# #.#######.###.#.###.#.###.#######.#.#.#.#.#.#.#.#.###.#############.#.#.###.###########.#.###.#.#####.###.#########.#.###.###.#.#.#########.#
# #.......#...#.#.#...#...#.......#.#.#.#.#.#.#...#.#...#.....#.....#...#...#.#...........#.#...#.....#.#...#.....#...#...#.#...#...#...#.....#
# #######.###.#.#.#.#####.#######.#.#.#.#.#.#.#####.#.###.###.#.###.#######.#.#.###########.#.#######.#.#.###.###.#.#####.#.#.#######.#.#.#####
# #...###...#.#.#...#...#...###...#.#.#.#.#.#.....#.#.....#...#...#...#.....#.#.#.....#.....#.#...#...#...#...###...#.....#...#.......#...#...#
# #.#.#####.#.#.#####.#.###.###.###.#.#.#.#.#####.#.#######.#####.###.#.#####.#.#.###.#.#####.#.#.#.#######.#########.#########.###########.#.#
# #.#.#...#.#.#.#.....#...#...#...#.#.#...#.#...#.#...###...#...#...#...#.....#.#.#...#.#.....#.#.#.......#.###...###.......#...#.......###.#.#
# #.#.#.#.#.#.#.#.#######.###.###.#.#.#####.#.#.#.###.###.###.#.###.#####.#####.#.#.###.#.#####.#.#######.#.###.#.#########.#.###.#####.###.#.#
# #.#...#.#.#.#...#...###...#.#...#.#.....#.#.#.#.#...#...#...#.....#...#.....#...#...#.#.....#.#...#...#.#...#.#.#...###...#.....#...#...#.#.#
# #.#####.#.#.#####.#.#####.#.#.###.#####.#.#.#.#.#.###.###.#########.#.#####.#######.#.#####.#.###.#.#.#.###.#.#.#.#.###.#########.#.###.#.#.#
# #.....#...#...###.#.......#.#.#...#...#.#.#.#.#.#.#...#...#.......#.#.#...#.#.......#.#.....#.#...#.#.#...#.#.#...#.....#.........#.....#.#.#
# #####.#######.###.#########.#.#.###.#.#.#.#.#.#.#.#.###.###.#####.#.#.#.#.#.#.#######.#.#####.#.###.#.###.#.#.###########.###############.#.#
# ###...#.....#...#.........#.#.#...#.#.#.#...#...#.#.#...###...#...#.#.#.#...#.........#.#...#.#.#...#.#...#.#.#.....#...#.......#...#...#.#.#
# ###.###.###.###.#########.#.#.###.#.#.#.#########.#.#.#######.#.###.#.#.###############.#.#.#.#.#.###.#.###.#.#.###.#.#.#######.#.#.#.#.#.#.#
# #...#...###...#.#...#.....#...#...#.#.#.#.......#.#.#.......#.#...#.#.#.....#.......#...#.#.#.#.#...#.#...#...#...#...#.........#.#.#.#.#.#.#
# #.###.#######.#.#.#.#.#########.###.#.#.#.#####.#.#.#######.#.###.#.#.#####.#.#####.#.###.#.#.#.###.#.###.#######.###############.#.#.#.#.#.#
# #.#...#.......#...#.#.......#...###.#.#...#.....#...#.......#.#...#.#.#...#.#.....#.#.#...#.#.#.#...#.#...#.....#...#...#...#...#.#...#.#.#.#
# #.#.###.###########.#######.#.#####.#.#####.#########.#######.#.###.#.#.#.#.#####.#.#.#.###.#.#.#.###.#.###.###.###.#.#.#.#.#.#.#.#####.#.#.#
# #.#.###.......#...#.........#...#...#.....#.....#.....#...#...#.###.#.#.#.#.#.....#...#...#...#.#.#...#.#...###.....#.#.#.#...#.#.#.....#.#.#
# #.#.#########.#.#.#############.#.#######.#####.#.#####.#.#.###.###.#.#.#.#.#.###########.#####.#.#.###.#.###########.#.#.#####.#.#.#####.#.#
# #.#.#...#...#...#.............#.#...#.....#.....#...###.#.#...#.#...#...#.#.#...###.....#.....#...#...#.#.#...#.......#...#.....#.#.#...#.#.#
# #.#.#.#.#.#.#################.#.###.#.#####.#######.###.#.###.#.#.#######.#.###.###.###.#####.#######.#.#.#.#.#.###########.#####.#.#.#.#.#.#
# #.#.#.#...#...................#...#.#.....#...#...#.....#...#.#.#.......#.#...#...#.#...#...#.#.......#.#.#.#.#.....#...#...#...#.#...#...#.#
# #.#.#.###########################.#.#####.###.#.#.#########.#.#.#######.#.###.###.#.#.###.#.#.#.#######.#.#.#.#####.#.#.#.###.#.#.#########.#
# #.#.#.......#...................#.#.....#...#...#.#.........#.#.#...#...#...#.#...#.#.#...#.#.#.#...###.#.#.#...#...#.#...#...#...#.........#
# #.#.#######.#.#################.#.#####.###.#####.#.#########.#.#.#.#.#####.#.#.###.#.#.###.#.#.#.#.###.#.#.###.#.###.#####.#######.#########
# #...#...###...#.......###.......#...#...#...###...#.#...###...#.#.#.#.....#.#.#...#.#.#.#...#.#.#.#.#...#...#...#.#...#...#...#.....#...#...#
# #####.#.#######.#####.###.#########.#.###.#####.###.#.#.###.###.#.#.#####.#.#.###.#.#.#.#.###.#.#.#.#.#######.###.#.###.#.###.#.#####.#.#.#.#
# #.....#.......#.....#.#...#...#...#.#...#.#...#.#...#.#...#...#...#.#...#.#.#.#...#.#.#.#.....#.#.#.#...#.....#...#...#.#.....#...#...#.#.#.#
# #.###########.#####.#.#.###.#.#.#.#.###.#.#.#.#.#.###.###.###.#####.#.#.#.#.#.#.###.#.#.#######.#.#.###.#.#####.#####.#.#########.#.###.#.#.#
# #...........#...#...#.#.#...#...#.#.###.#...#.#.#...#...#.#...#.....#.#.#.#...#.#...#.#.......#.#.#.#...#.#...#.....#.#.#.........#.#...#.#.#
# ###########.###.#.###.#.#.#######.#.###.#####.#.###.###.#.#.###.#####.#.#.#####.#.###.#######.#.#.#.#.###.#.#.#####.#.#.#.#########.#.###.#.#
# #.........#.#...#...#.#...#...#...#...#.....#.#.#...###.#.#.#...#...#.#.#...#...#.#...###...#.#.#.#.#...#...#.......#...#.....#...#.#...#.#.#
# #.#######.#.#.#####.#.#####.#.#.#####.#####.#.#.#.#####.#.#.#.###.#.#.#.###.#.###.#.#####.#.#.#.#.#.###.#####################.#.#.#.###.#.#.#
# #...#...#...#.......#.......#.#.....#...#...#...#...#...#.#.#...#.#.#.#.#...#...#.#...#...#.#.#.#.#.....#.....................#.#.#.#...#.#.#
# ###.#.#.#####################.#####.###.#.#########.#.###.#.###.#.#.#.#.#.#####.#.###.#.###.#.#.#.#######.#####################.#.#.#.###.#.#
# ###...#.....#...#.....#.....#.....#.#...#.#...#.....#.#...#.###...#.#.#...#.....#.#...#.#...#.#.#.###.....#.......#...........#.#.#.#...#.#.#
# ###########.#.#.#.###.#.###.#####.#.#.###.#.#.#.#####.#.###.#######.#.#####.#####.#.###.#.###.#.#.###.#####.#####.#.#########.#.#.#.###.#.#.#
# #...#.....#...#.#.###...#...#...#...#...#...#.#.#...#.#...#...#.....#.....#.....#.#.#...#...#.#.#...#.#.....#.....#.#.........#.#...#...#.#.#
# #.#.#.###.#####.#.#######.###.#.#######.#####.#.#.#.#.###.###.#.#########.#####.#.#.#.#####.#.#.###.#.#.#####.#####.#.#########.#####.###.#.#
# #.#...#...#...#...#.......#...#.......#.#...#.#.#.#...#...#...#.#...#.....#...#.#.#.#...###.#.#.#...#...#.....###...#.........#.#.....#...#.#
# #.#####.###.#.#####.#######.#########.#.#.#.#.#.#.#####.###.###.#.#.#.#####.#.#.#.#.###.###.#.#.#.#######.#######.###########.#.#.#####.###.#
# #.....#.....#.#...#.......#.#.........#...#...#.#.....#...#...#.#.#.#.....#.#.#.#.#.....#...#.#.#.#.....#.....#...#...........#.#.#.....#...#
# #####.#######.#.#.#######.#.#.#################.#####.###.###.#.#.#.#####.#.#.#.#.#######.###.#.#.#.###.#####.#.###.###########.#.#.#####.###
# #.....#.....#...#.......#.#.#...#...#...#...###.#...#.#...#...#...#.#...#...#.#.#.#.......#...#.#.#...#.......#.#...#...###.....#...#...#...#
# #.#####.###.###########.#.#.###.#.#.#.#.#.#.###.#.#.#.#.###.#######.#.#.#####.#.#.#.#######.###.#.###.#########.#.###.#.###.#########.#.###.#
# #.#.....###...........#.#...###...#...#...#...#.#.#.#.#.#...#...#...#.#...#...#...#.......#...#.#.###.....###...#...#.#.#...#.....#...#.#...#
# #.#.#################.#.#####################.#.#.#.#.#.#.###.#.#.###.###.#.#############.###.#.#.#######.###.#####.#.#.#.###.###.#.###.#.###
# #...#...#.......#...#.#...#.......#...#...#...#...#.#.#.#.#...#...#...###.#.....#.........#...#...#...###.....#...#...#...#...###...###.#...#
# #####.#.#.#####.#.#.#.###.#.#####.#.#.#.#.#.#######.#.#.#.#.#######.#####.#####.#.#########.#######.#.#########.#.#########.###########.###.#
# #...#.#.#.#...#...#...#...#.....#...#...#...#.....#.#.#.#.#.......#.....#.....#.#...#.....#.###.....#...#.......#.........#.#.........#.....#
# #.#.#.#.#.#.#.#########.#######.#############.###.#.#.#.#.#######.#####.#####.#.###.#.###.#.###.#######.#.###############.#.#.#######.#######
# #.#.#.#.#...#.....#...#...#.....#...#.......#.#...#...#...#.......#...#.#...#...###...#...#...#.#.....#...#...#.......#...#...#.....#.......#
# #.#.#.#.#########.#.#.###.#.#####.#.#.#####.#.#.###########.#######.#.#.#.#.###########.#####.#.#.###.#####.#.#.#####.#.#######.###.#######.#
# #.#...#.###...###...#...#.#.......#...#.....#.#.#...#...#...#.....#.#.#...#...###.......#...#.#...###.......#...#.....#.......#...#...#...#.#
# #.#####.###.#.#########.#.#############.#####.#.#.#.#.#.#.###.###.#.#.#######.###.#######.#.#.###################.###########.###.###.#.#.#.#
# #.....#.....#.#...#...#.#.###...#.......#.....#...#...#.#.....#...#.#...#...#.#...#.....#.#.#...#...............#...........#...#...#...#...#
# #####.#######.#.#.#.#.#.#.###.#.#.#######.#############.#######.###.###.#.#.#.#.###.###.#.#.###.#.#############.###########.###.###.#########
# #...#.......#.#.#...#...#.....#.#.........#.......#...#.....#...#...#...#.#...#...#...#.#.#.....#.............#.........#...###.....#.....###
# #.#.#######.#.#.###############.###########.#####.#.#.#####.#.###.###.###.#######.###.#.#.###################.#########.#.###########.###.###
# #.#.###...#.#.#...........#...#.#.......#...#...#...#.#...#.#...#...#.#...#.......#...#...#.......###...#...#.........#.#.#...#...###...#...#
# #.#.###.#.#.#.###########.#.#.#.#.#####.#.###.#.#####.#.#.#.###.###.#.#.###.#######.#######.#####.###.#.#.#.#########.#.#.#.#.#.#.#####.###.#
# #.#...#.#...#...........#...#.#.#.....#.#.....#.....#.#.#...###.....#.#.###...#.....#...#...#...#.....#...#.........#.#.#...#...#...#...#...#
# #.###.#.###############.#####.#.#####.#.###########.#.#.#############.#.#####.#.#####.#.#.###.#.###################.#.#.###########.#.###.###
# #...#.#.......#...#...#...#...#.......#...#.........#...#...###...###...#.....#.#.....#.#.....#...............#...#...#.............#...#...#
# ###.#.#######.#.#.#.#.###.#.#############.#.#############.#.###.#.#######.#####.#.#####.#####################.#.#.#####################.###.#
# #...#.........#.#...#...#.#.#...#.......#...#...#...###...#...#.#.#.....#.#...#.#.#...#.....................#...#.......###...#...#...#.#...#
# #.#############.#######.#.#.#.#.#.#####.#####.#.#.#.###.#####.#.#.#.###.#.#.#.#.#.#.#.#####################.###########.###.#.#.#.#.#.#.#.###
# #.#.....#.....#.#.......#...#.#.#.#.....#.....#...#...#.#.....#.#...#...#...#.#.#.#.#...#.................#.............#...#.#.#.#.#...#...#
# #.#.###.#.###.#.#.###########.#.#.#.#####.###########.#.#.#####.#####.#######.#.#.#.###.#.###############.###############.###.#.#.#.#######.#
# #...#...#.#...#.#...#...#...#.#...#.......#...........#.#.#.....#.....#.......#.#...###...#...............#...#.....#...#...#.#.#.#.#.......#
# #####.###.#.###.###.#.#.#.#.#.#############.###########.#.#.#####.#####.#######.###########.###############.#.#.###.#.#.###.#.#.#.#.#.#######
# #...#.....#...#.#...#.#.#.#...#.............###...###...#...#...#.....#.........#...#.......#...............#...#...#.#...#.#.#.#...#.....###
# #.#.#########.#.#.###.#.#.#####.###############.#.###.#######.#.#####.###########.#.#.#######.###################.###.###.#.#.#.#########.###
# #.#.......###...#.#...#.#.#.....#...............#.....#...#...#.......#######...#.#.#.........#.......###.........#...#...#.#...#...#...#...#
# #.#######.#######.#.###.#.#.#####.#####################.#.#.#################.#.#.#.###########.#####.###.#########.###.###.#####.#.#.#.###.#
# #.....#...#...#...#.###...#.......#...............#.....#...###.....#########.#...#.###.........#...#.....#...#.....#...###.#.....#.#.#.#...#
# #####.#.###.#.#.###.###############.#############.#.###########.###.#########.#####.###.#########.#.#######.#.#.#####.#####.#.#####.#.#.#.###
# #.....#.....#...#...#...............#...........#.#.............#...#########...#...#...#.........#...#.....#...#...#.###...#.....#...#...###
# #.###############.###.###############.#########.#.###############.#############.#.###.###.###########.#.#########.#.#.###.#######.###########
# #.#...#.....#...#.###...............#.#.........#.....#...#.......###########...#...#.....#...###...#...#...#.....#.#.....#.......#...#...###
# #.#.#.#.###.#.#.#.#################.#.#.#############.#.#.#.#################.#####.#######.#.###.#.#####.#.#.#####.#######.#######.#.#.#.###
# #.#.#.#.###...#.#.#...#.............#.#.#...#...#...#...#...#.....###########...#...###.....#...#.#.......#...#.....#.....#.........#...#...#
# #.#.#.#.#######.#.#.#.#.#############.#.#.#.#.#.#.#.#########.###.#############.#.#####.#######.#.#############.#####.###.#################.#
# #.#.#.#...#.....#.#.#.#.......#.......#...#...#...#...#...###.#...#############.#.....#.......#...#...........#.....#...#...#.............#.#
# #.#.#.###.#.#####.#.#.#######.#.#####################.#.#.###.#.###############.#####.#######.#####.#########.#####.###.###.#.###########.#.#
# #.#.#...#.#.......#.#.......#...###.....#...#.......#...#.#...#.......#########...#...###...#.......###.......#...#...#.###.#...........#...#
# #.#.###.#.#########.#######.#######.###.#.#.#.#####.#####.#.#########.###########.#.#####.#.###########.#######.#.###.#.###.###########.#####
# #...###...#...#...#.......#.###...#.###...#...#.....#.....#.#.........#######.....#.###...#...........#.........#...#.#.#...#.....#.....#...#
# ###########.#.#.#.#######.#.###.#.#.###########.#####.#####.#.###############.#####.###.#############.#############.#.#.#.###.###.#.#####.#.#
# #...........#...#.........#.#...#...#.......###.....#.#.....#.......#########.....#...#...#...#.....#.........#.....#...#.....###.#.......#.#
# #.#########################.#.#######.#####.#######.#.#.###########.#############.###.###.#.#.#.###.#########.#.#################.#########.#
# #.........................#...#.......#...#.....#...#.#.....#.....#.#############...#...#...#...###...#.....#.#...#.............#.#...#...#.#
# #########################.#####.#######.#.#####.#.###.#####.#.###.#.###############.###.#############.#.###.#.###.#.###########.#.#.#.#.#.#.#
# #.........###...#...#.....#...#.#.......#.......#.....#.....#..E#...###########...#.#...#.....###...#...#...#...#...#.....#.....#...#...#...#
# #.#######.###.#.#.#.#.#####.#.#.#.#####################.#######################.#.#.#.###.###.###.#.#####.#####.#####.###.#.#################
# #.......#.#...#.#.#.#...#...#...#.....#...###...#.....#.......#################.#.#.#...#...#...#.#.#.....#...#.......###.#...#...#...#...###
# #######.#.#.###.#.#.###.#.###########.#.#.###.#.#.###.#######.#################.#.#.###.###.###.#.#.#.#####.#.###########.###.#.#.#.#.#.#.###
# #...###.#.#...#...#.###...#...........#.#.#...#...#...#...###...###############.#.#.#...###.#...#.#.#.......#...........#...#...#...#...#...#
# #.#.###.#.###.#####.#######.###########.#.#.#######.###.#.#####.###############.#.#.#.#####.#.###.#.###################.###.###############.#
# #.#.#...#...#...#...#...#...#.......#...#...#.......#...#.....#.###############.#.#.#...#...#...#.#.#.......#...#.......###.....#.....#...#.#
# #.#.#.#####.###.#.###.#.#.###.#####.#.#######.#######.#######.#.###############.#.#.###.#.#####.#.#.#.#####.#.#.#.#############.#.###.#.#.#.#
# #.#.#.....#.#...#.....#.#.....#.....#...#.....#...###.....#...#.###############.#.#.#...#...#...#.#.#.....#.#.#.#.............#...###.#.#.#.#
# #.#.#####.#.#.#########.#######.#######.#.#####.#.#######.#.###.###############.#.#.#.#####.#.###.#.#####.#.#.#.#############.#######.#.#.#.#
# #.#.......#...#.......#.........#...#...#...#...#...#...#.#...#.###############.#.#.#.#...#.#.#...#.#...#.#.#.#.#...#...#.....###...#.#.#.#.#
# #.#############.#####.###########.#.#.#####.#.#####.#.#.#.###.#.###############.#.#.#.#.#.#.#.#.###.#.#.#.#.#.#.#.#.#.#.#.#######.#.#.#.#.#.#
# #...#...#.......#...#...#.....#...#.#.#.....#.....#.#.#.#.###.#.....###########.#...#.#.#.#.#.#...#.#.#...#...#.#.#...#.#.........#.#.#.#.#.#
# ###.#.#.#.#######.#.###.#.###.#.###.#.#.#########.#.#.#.#.###.#####.###########.#####.#.#.#.#.###.#.#.#########.#.#####.###########.#.#.#.#.#
# ###...#.#.#.....#.#.....#.#...#...#...#.#...#...#.#.#.#...#...#...#...#########.....#.#.#...#...#.#.#.......#...#...#...#.....#.....#.#.#.#.#
# #######.#.#.###.#.#######.#.#####.#####.#.#.#.#.#.#.#.#####.###.#.###.#############.#.#.#######.#.#.#######.#.#####.#.###.###.#.#####.#.#.#.#
# #...###...#...#...#...#...#...#...#.....#.#.#.#...#.#.....#...#.#...#.#####S..#.....#.#.###.....#.#.#.......#...#...#...#.###...#...#...#...#
# #.#.#########.#####.#.#.#####.#.###.#####.#.#.#####.#####.###.#.###.#.#######.#.#####.#.###.#####.#.#.#########.#.#####.#.#######.#.#########
# #.#.#...#...#.......#.#...#...#...#.....#.#.#.....#.#...#.#...#...#...#####...#.....#...#...#...#.#.#.....#...#.#.#.....#.........#.........#
# #.#.#.#.#.#.#########.###.#.#####.#####.#.#.#####.#.#.#.#.#.#####.#########.#######.#####.###.#.#.#.#####.#.#.#.#.#.#######################.#
# #.#...#...#...........#...#.#...#.#.....#.#...#...#.#.#...#.#...#...###.....#.......###...#...#.#.#.#.....#.#.#...#.....#...........#.......#
# #.#####################.###.#.#.#.#.#####.###.#.###.#.#####.#.#.###.###.#####.#########.###.###.#.#.#.#####.#.#########.#.#########.#.#######
# #.#.............#.......#...#.#.#.#...#...#...#...#.#.#.....#.#...#...#.....#.........#.....###.#.#.#.......#.........#.#.........#.#...#...#
# #.#.###########.#.#######.###.#.#.###.#.###.#####.#.#.#.#####.###.###.#####.#########.#########.#.#.#################.#.#########.#.###.#.#.#
# #...#.........#...#.......#...#.#...#.#.###...#...#...#.....#...#...#.....#...#.......#.........#.#.........#.........#...#.......#...#...#.#
# #####.#######.#####.#######.###.###.#.#.#####.#.###########.###.###.#####.###.#.#######.#########.#########.#.###########.#.#########.#####.#
# #...#.#.....#.......#.....#...#.....#.#.#...#.#.###.......#.#...#...#...#.#...#.....###.........#.......#...#.......#...#.#.....#...#...#...#
# #.#.#.#.###.#########.###.###.#######.#.#.#.#.#.###.#####.#.#.###.###.#.#.#.#######.###########.#######.#.#########.#.#.#.#####.#.#.###.#.###
# #.#...#.#...#...#...#...#...#.......#.#.#.#...#...#.....#...#...#.#...#.#.#...#...#.....###.....#...#...#.........#...#.#.#...#...#...#.#...#
# #.#####.#.###.#.#.#.###.###.#######.#.#.#.#######.#####.#######.#.#.###.#.###.#.#.#####.###.#####.#.#.###########.#####.#.#.#.#######.#.###.#
# #.....#.#...#.#.#.#.#...#...#.....#.#...#...#...#...#...#...#...#.#.#...#.#...#.#.....#...#.....#.#.#...........#.#...#.#...#...#.....#.....#
# #####.#.###.#.#.#.#.#.###.###.###.#.#######.#.#.###.#.###.#.#.###.#.#.###.#.###.#####.###.#####.#.#.###########.#.#.#.#.#######.#.###########
# #.....#.###...#...#.#.###.#...###.#.#.......#.#...#.#.#...#.#.#...#.#...#.#...#...#...#...#.....#.#...#...#.....#.#.#.#.#.......#...........#
# #.#####.###########.#.###.#.#####.#.#.#######.###.#.#.#.###.#.#.###.###.#.###.###.#.###.###.#####.###.#.#.#.#####.#.#.#.#.#################.#
# #.#...#.#...#.......#...#.#.....#.#.#.#.....#.###.#.#.#.#...#.#...#.###...#...#...#...#...#...#...###.#.#.#.....#.#.#.#.#.......#...#...#...#
# #.#.#.#.#.#.#.#########.#.#####.#.#.#.#.###.#.###.#.#.#.#.###.###.#.#######.###.#####.###.###.#.#####.#.#.#####.#.#.#.#.#######.#.#.#.#.#.###
# #...#...#.#.#...#...#...#.#...#.#...#.#.#...#.#...#.#...#...#...#.#...#.....#...#.....#...###.#.....#...#.......#...#...#.......#.#...#.#...#
# #########.#.###.#.#.#.###.#.#.#.#####.#.#.###.#.###.#######.###.#.###.#.#####.###.#####.#####.#####.#####################.#######.#####.###.#
# #.........#.....#.#.#...#.#.#.#.#.....#.#...#.#...#...#.....#...#.#...#.....#...#...#...#.....#...#.........###...#...###...#...#...###.#...#
# #.###############.#.###.#.#.#.#.#.#####.###.#.###.###.#.#####.###.#.#######.###.###.#.###.#####.#.#########.###.#.#.#.#####.#.#.###.###.#.###
# #.#...#.......#...#.#...#...#...#...#...#...#...#.#...#.....#.###.#...#...#.#...#...#...#.#...#.#...#.....#.....#...#...###...#...#...#...###
# #.#.#.#.#####.#.###.#.#############.#.###.#####.#.#.#######.#.###.###.#.#.#.#.###.#####.#.#.#.#.###.#.###.#############.#########.###.#######
# #.#.#.#.#.....#.#...#.............#.#...#.#...#.#.#.#.......#...#.#...#.#...#...#...#...#.#.#.#.#...#...#.#...#...#...#.........#...#.......#
# #.#.#.#.#.#####.#.###############.#.###.#.#.#.#.#.#.#.#########.#.#.###.#######.###.#.###.#.#.#.#.#####.#.#.#.#.#.#.#.#########.###.#######.#
# #...#...#.......#.................#.....#...#...#...#...........#...###.........###...###...#...#.......#...#...#...#...........###.........#
# #############################################################################################################################################"""


# data="""###############
# #...#...#.....#
# #.#.#.#.#.###.#
# #S#...#.#.#...#
# #######.#.#.###
# #######.#.#...#
# #######.#.###.#
# ###..E#...#...#
# ###.#######.###
# #...###...#...#
# #.#####.#.###.#
# #.#...#.#.#...#
# #.#.#.#.#.#.###
# #...#...#...###
# ###############"""

# data=data.split('\n')
# data = [ list(x) for x in data]
# ROW=len(data)
# COL=len(data[0])
# startPos=[-1,-1]
# endPos=[-1,-1]
# for r in range(ROW):
#     for c in range(COL):
#         if data[r][c]=='S':
#             startPos=[r,c]
#             data[r][c]='.'
#         if data[r][c]=='E':
#             endPos=[r,c]
#             data[r][c]='.'
            
            
# dist={}
# print(startPos,endPos)
# q=deque([(startPos[0],startPos[1],0)])
# finalSteps=0
# while q:
#     r,c,s=q.popleft()
#     if (r,c) in dist or not(0<=r<ROW and 0<=c<COL and data[r][c]!="#"):
#         continue
#     dist[(r,c)]=s
#     if r==endPos[0] and c==endPos[1]:
#         finalSteps=s
#         break
#     for dr,dc in ((r+1,c),(r-1,c),(r,c+1),(r,c-1)):
#         q.append((dr,dc,s+1))

# print(finalSteps)
# q=deque([(startPos[0],startPos[1],0,-1,-1)])
# cheat=set()
# dist2={}
# visited=set()
# adv=100
# while q:
#     r,c,s,cheatR,cheatC=q.popleft()
#     if (cheatR,cheatC) in cheat: continue
#     if not(0<=r<ROW and 0<=c<COL):continue
#     if s>finalSteps:continue
#     if data[r][c]=="#" and cheatR!=-1:
#         continue
#     if cheatR==-1:
#         if (r,c) in visited:
#             continue        
#         visited.add((r,c))
#     else:
#         if (r,c) in dist and not(dist[(r,c)]>=s+adv):
#             continue
            
#     if (r,c) in dist and dist[(r,c)]<s:
#         continue
#     if ((r,c) in dist and dist[(r,c)]>=s+adv):
#         cheat.add((cheatR,cheatC))
#         continue
#     for dr,dc in ((r+1,c),(r-1,c),(r,c+1),(r,c-1)):
#         if data[r][c]=="#":
#             q.append((dr,dc,s+1,r,c))
#         else:
#             q.append((dr,dc,s+1,cheatR,cheatC))
        
# print(len(cheat))

# # part 2

# # q=deque([(startPos[0],startPos[1],0,False,(-1,-1,-1,-1))])
# # cheat=set()
# # dist2={}
# # visited=set()
# # adv=100

# # def dfs(r,c,ans,visited,s):
# #     if s==20:return 
# #     if not (0<=r<ROW and 0<=c<COL):return
# #     if (r,c) in visited and visited[(r,c)]<s:return
# #     visited[(r,c)]=s
# #     if data[r][c]!="#":
# #         ans[(r,c)]=s
# #     for dr,dc in ((r+1,c),(r-1,c),(r,c+1),(r,c-1)):
# #         dfs(dr,dc,ans,visited,s+1)
    


# # while q:
# #     print(len(q))
# #     r,c,s,cheated,cse=q.popleft()
# #     if s>finalSteps:continue            
# #     if (r,c) in dist and dist[(r,c)]<s:
# #         continue
# #     if cse in cheat: continue
# #     if cheated and dist[(r,c)]>=s+adv:
# #         cheat.add(cse)
# #         continue
# #     for dr,dc in ((r+1,c),(r-1,c),(r,c+1),(r,c-1)):
# #         if not(0<=dr<ROW and 0<=dc<COL):continue
# #         if data[dr][dc]!="#":
# #             q.append((dr,dc,s+1,cheated,cse))
# #         else:
# #             ans={}
# #             dfs(dr,dc,ans,{},0)
# #             for k,v in ans.items():
# #                 if k in dist:
# #                     if dist[k]>=s+v+adv:
# #                         cheat.add((r,c,k[0],k[1]))
# #                         continue
# #                 else:
# #                     q.append((k[0],k[1],s+v,True,(r,c,k[0],k[1])))
                    

# # print(len(cheat))
# # # while q:
# # #     print(len(q))
# # #     r,c,s,cheatSR,cheatSC,cheatER,cheatEC,cheatJump=q.popleft()
# # #     if (cheatSR,cheatSC,cheatER,cheatEC) in cheat: continue
# # #     if s>finalSteps:continue
# # #     if data[r][c]=="#" and (cheatER!=-1 or cheatJump>=20):
# # #         continue
# # #     if cheatSR==-1:
# # #         if (r,c) in visited:
# # #             continue        
# # #         visited.add((r,c))
# # #     else:
# # #         if (r,c) in dist and not(dist[(r,c)]>=s+adv):
# # #             continue
            
# # #     if (r,c) in dist and dist[(r,c)]<s:
# # #         continue
# # #     if ((r,c) in dist and dist[(r,c)]>=s+adv):
# # #         cheat.add((cheatSR,cheatSC,cheatER,cheatEC))
# # #         continue
# # #     for dr,dc in ((r+1,c),(r-1,c),(r,c+1),(r,c-1)):
# # #         if not(0<=dr<ROW and 0<=dc<COL):continue

# # #         if data[r][c]=="#":
# # #             if data[dr][dc]=="#":
# # #                 q.append((dr,dc,s+1,cheatSR,cheatSC,cheatER,cheatEC,cheatJump+1))
# # #             else:
# # #                 q.append((dr,dc,s+1,cheatSR,cheatSC,dr,dc,cheatJump+1))
# # #         else:
# # #             if data[dr][dc]!="#":
# # #                 q.append((dr,dc,s+1,cheatSR,cheatSC,cheatER,cheatEC,cheatJump))
# # #             elif cheatJump==-1:
# # #                 q.append((dr,dc,s+1,dr,dc,cheatER,cheatEC,cheatJump+1))        
# # # print(len(cheat))
# dist2={}
# q=deque([(endPos[0],endPos[1],0)])
# while q:
#     r,c,s=q.popleft()
#     if (r,c) in dist2 or not(0<=r<ROW and 0<=c<COL and data[r][c]!="#"):
#         continue
#     dist2[(r,c)]=s
#     if r==startPos[0] and c==startPos[1]:
#         break
#     for dr,dc in ((r+1,c),(r-1,c),(r,c+1),(r,c-1)):
#         q.append((dr,dc,s+1))
# ans=0
# for sx,sy in dist.keys():
#     for ex,ey in dist2.keys():
#         if abs(sx-ex)+abs(sy-ey)<=20 and dist[(sx,sy)]+dist2[(ex,ey)]+abs(sx-ex)+abs(sy-ey)<=finalSteps-100:
#             ans+=1
# print(ans)


# day 21

# data="""341A
# 803A
# 149A
# 683A
# 208A"""

# data="""029A
# 980A
# 179A
# 456A
# 379A"""

# data=data.split('\n')

# def numpadToKeys(s):
#     d={
#         "7":(0,0),
#         "8":(0,1),
#         "9":(0,2),
#         "4":(1,0),
#         "5":(1,1),
#         "6":(1,2),
#         "1":(2,0),
#         "2":(2,1),
#         "3":(2,2),
#         "0":(3,1),
#         "A":(3,2)
#     }
#     ans=[[]]
#     ch='A'
#     curr=d[ch]
#     for c in s:
#         # print(c)
#         temp=[]
#         f=d[c]
#         if curr[0]>f[0]:
#             temp.append("^"*(curr[0]-f[0]))
#         if curr[1]<f[1]:
#             temp.append(">"*(f[1]-curr[1]))
#         if curr[0]<f[0]:
#             temp.append("v"*(f[0]-curr[0]))
#         if curr[1]>f[1]:
#             temp.append("<"*(curr[1]-f[1]))
#         # print(ans)
#         ans2=[]
#         for a in ans:
#             ans2.append(a+temp+["A"])
#         if not(( ch in "741" and c in "0A") or ( c in "741" and ch in "0A")):
#             for a in ans:
#                 ans2.append(a+temp[::-1]+["A"])
#         ans=ans2
        
#         curr=f
#         ch=c
#     # return ans
#     return ["".join(a) for a in ans]


# memo={}

# # def arrowToKey(s):
# #     d={
# #         "^":(0,1),
# #         "A":(0,2),
# #         "v":(1,1),
# #         ">":(1,2),
# #         "<":(1,0)
# #     }
# #     # print(s)
# #     ans=[]
    
# #     def helper(st):
        
# #         if not st: return 
# #         if st in memo:return memo[st]
# #         if len(st)==1:
# #             prev='A'
# #         else:
# #             prev=st[-2]
            
# #         ch=st[-1]
# #         curr=d[st[-1]]


            
# #         f=d[prev]
# #         if curr[0]<f[0]:
# #             temp.append("v")
# #         if curr[1]<f[1]:
# #             temp.append(">"*(f[1]-curr[1]))
# #         if curr[0]>f[0]:
# #             temp.append("^")
# #         if curr[1]>f[1]:
# #             temp.append("<"*(curr[1]-f[1]))
# #         ans2=[]
# #         for a in ans:
# #             ans2.append(a+temp+["A"])
# #         if not(( ch in "<" and c in "^A") or ( c in "<" and ch in "^A")):
# #             for a in ans:
# #                 ans2.append(a+temp[::-1]+["A"])
# #         ans=ans2
    
# #         curr=f
# #         ch=c
# #         memo[st]=["".join(a) for a in ans]
# #         return memo[st]
# #     for c in s:
# #         # print(c)
# #         a=helper(c)
# #         # print(a)
# #         for i in a:
# #             ans2=[]
# #             for a1 in ans:
# #                 ans2.append(a1+[i])
# #             ans=ans2
# #     # return ans
# #     return ["".join(x) for x in ans]


# # def arrowToKey(s):
# #     d={
# #         "^":(0,1),
# #         "A":(0,2),
# #         "v":(1,1),
# #         ">":(1,2),
# #         "<":(1,0)
# #     }
# #     s=s.split("A")[:-1]
# #     # print(s)
# #     ans=[[]]
    
# #     def helper(st):
# #         st=st.strip()
# #         if not st: return []
# #         if st in memo:return memo[st]
# #         st+="A"
# #         ch="A"
# #         curr=d['A']
# #         temp=[]
# #         ans=[[]]   
# #         for c in st:
# #             temp=[]
            
# #             f=d[c]
# #             if curr[0]<f[0]:
# #                 temp.append("v")
# #             if curr[1]<f[1]:
# #                 temp.append(">"*(f[1]-curr[1]))
# #             if curr[0]>f[0]:
# #                 temp.append("^")
# #             if curr[1]>f[1]:
# #                 temp.append("<"*(curr[1]-f[1]))
# #             ans2=[]
# #             for a in ans:
# #                 ans2.append(a+temp+["A"])
# #             if not(( ch in "<" and c in "^A") or ( c in "<" and ch in "^A")):
# #                 for a in ans:
# #                     ans2.append(a+temp[::-1]+["A"])
# #             ans=ans2
        
# #             curr=f
# #             ch=c
# #         memo[st]=["".join(a) for a in ans]
# #         return memo[st]
# #     for c in s:
# #         # print(c)
# #         a=helper(c)
# #         # print(a)
# #         for i in a:
# #             ans2=[]
# #             for a1 in ans:
# #                 ans2.append(a1+[i])
# #             ans=ans2
# #     # return ans
# #     return ["".join(x) for x in ans]


# # def arrowToKey2(s):
# #     s=s.split('A')

# def arrowToKey(s):
#     if s in memo:return s
#     d={
#         "^":(0,1),
#         "A":(0,2),
#         "v":(1,1),
#         ">":(1,2),
#         "<":(1,0)
#     }
#     ch="A"
#     curr=d['A']
#     ans=[[]]
#     for c in s:
#         temp=[]
#         f=d[c]
#         if curr[0]<f[0]:
#             temp.append("v")
#         if curr[1]<f[1]:
#             temp.append(">"*(f[1]-curr[1]))
#         if curr[0]>f[0]:
#             temp.append("^")
#         if curr[1]>f[1]:
#             temp.append("<"*(curr[1]-f[1]))
#         ans2=[]
#         for a in ans:
#             ans2.append(a+temp+["A"])
#         if not(( ch in "<" and c in "^A") or ( c in "<" and ch in "^A")) and "".join(temp)!="".join(temp[::-1]):
#             for a in ans:
#                 ans2.append(a+temp[::-1]+["A"])
#         ans=[a for a in ans2]
        
#         curr=f
#         ch=c
#     memo[s] = ["".join(a) for a in ans]
#     return memo[s]

# memo2={}
# def solve(x,y,i):
#     if (x,y,i) in memo2: return memo2[(x,y,i)]
#     if i==0: return 1
#     m=float("inf")
#     d={
#         "^":(0,1),
#         "A":(0,2),
#         "v":(1,1),
#         ">":(1,2),
#         "<":(1,0)
#     }
#     curr=d[x]
#     f=d[y]
#     temp=[]
#     if curr[0]<f[0]:
#         temp.append("v")
#     if curr[1]<f[1]:
#         temp.append(">"*(f[1]-curr[1]))
#     if curr[0]>f[0]:
#         temp.append("^")
#     if curr[1]>f[1]:
#         temp.append("<"*(curr[1]-f[1]))
#     t1="".join(temp+['A'])
#     t2="".join(temp[::-1]+['A'])
#     s=0
#     c='A'
#     for f in t1:
#        s+=solve(c,f,i-1)
#        c=f
#     m=min(m,s)
    
#     if not(( x in "<" and y in "^A") or ( y in "<" and x in "^A")) and t1!=t2:
#         s=0
#         c='A'
#         for f in t2:
#             s+=solve(c,f,i-1)
#             c=f
#         m=min(m,s)
#     # print(t1,i,m)
#     memo2[(x,y,i)]=m
#     return m
    
    
# # print(solve("A","^",1))

# ans=0
# ans2=0
# for d in data:
    
#     i=numpadToKeys(d)      
#     i=list(set(i))
#     m=float("inf")
#     for inst in i:
#         c='A'
#         s=0
#         for f in inst:
#             s+=solve(c,f,25)
#             c=f
#         m=min(m,s)
#     print(m,int(d[:-1]))
#     ans2+=m*int(d[:-1])
#     for t in range(2):
#         print(t)
#         j=[]
#         for s in i:
#             j.extend(arrowToKey(s))
#         l=float("inf")
#         for i in j:
#             l=min(l,len(i))
#         j=[k for k in j if len(k)==l]
#         i=j

    
#     for s in i:
#         l=min(l,len(s))   
#     print(l,int(d[:-1])) 
#     ans+=l*int(d[:-1])
    
    
    
# print(ans)
# print(ans2)

#day 22

# data="""10720952
# 3425103
# 8692924
# 11526442
# 15183708
# 15673763
# 4561181
# 10596144
# 2940403
# 15288243
# 3127752
# 15374645
# 2717495
# 15098787
# 13418323
# 6880603
# 8622902
# 5896683
# 6450138
# 1501404
# 8945007
# 11833300
# 11251487
# 9240368
# 5879844
# 10232855
# 14832802
# 4339327
# 11240862
# 13382101
# 11527162
# 132589
# 16530563
# 2411863
# 2437957
# 8135532
# 6983095
# 7087239
# 6837907
# 10118492
# 12601885
# 426238
# 13539759
# 1426820
# 9049182
# 6014905
# 12404390
# 6304956
# 11871776
# 3763468
# 11900641
# 5051938
# 8669268
# 1020782
# 9402770
# 4479895
# 12331786
# 9917150
# 2505880
# 10991884
# 1128910
# 9784916
# 5289945
# 7204388
# 10298829
# 472708
# 3781216
# 4017089
# 7530021
# 11710127
# 9690976
# 9781809
# 14260282
# 9001636
# 1788800
# 5155562
# 9708970
# 7235152
# 5462921
# 13613870
# 4786771
# 16214097
# 14141636
# 7932220
# 11936509
# 10126287
# 9781258
# 7082333
# 240547
# 10789845
# 13603485
# 8212634
# 3478218
# 3124404
# 2924182
# 1363381
# 2821433
# 9617602
# 7949205
# 7607229
# 1860167
# 11861427
# 1440568
# 9689476
# 1356886
# 13191496
# 12820110
# 14046261
# 9732675
# 13129650
# 3210877
# 16012897
# 14527871
# 14917167
# 2203601
# 5475849
# 185393
# 6064569
# 15315007
# 10057838
# 3481333
# 4085360
# 11565922
# 13096900
# 7409158
# 8003974
# 10592579
# 3789440
# 15212873
# 538315
# 2064021
# 3633981
# 8431935
# 4896231
# 10057061
# 5531964
# 7003157
# 1907530
# 1363556
# 10086626
# 2138361
# 7026558
# 7814037
# 12580778
# 9833602
# 10878497
# 4935549
# 14267610
# 10347109
# 1588793
# 7203933
# 8066379
# 4108969
# 8177878
# 13199501
# 1092283
# 6120071
# 2712324
# 7357221
# 12673870
# 14789246
# 12111383
# 15358649
# 4882997
# 1297292
# 12222208
# 16183810
# 13798362
# 7367760
# 2337842
# 7401410
# 15891557
# 15999906
# 2171605
# 3664696
# 6009865
# 9640071
# 15591830
# 1061088
# 11190071
# 5549721
# 14271067
# 13772607
# 12387993
# 1198510
# 13557321
# 8502456
# 2744716
# 2857798
# 8579647
# 9496946
# 14889693
# 15396722
# 7892677
# 7677561
# 5451898
# 14404838
# 15294154
# 13439289
# 3678470
# 8236207
# 8699418
# 5540763
# 2782072
# 15810673
# 3423363
# 14188759
# 11317820
# 10738207
# 3034841
# 4604213
# 11166390
# 15346996
# 6560979
# 14487211
# 10037416
# 681679
# 5639063
# 8002922
# 16621679
# 5509004
# 11000394
# 5361927
# 2148587
# 939766
# 3957127
# 4093165
# 10277775
# 3558426
# 10017226
# 7921788
# 10316828
# 6789449
# 9632027
# 2582540
# 2064230
# 10029400
# 14530350
# 16705454
# 6622916
# 9130591
# 14002689
# 1085008
# 8937915
# 4472032
# 14998950
# 3736463
# 8515329
# 1086802
# 7145855
# 9532185
# 13073940
# 1489224
# 13430119
# 2134572
# 16613698
# 13355051
# 10314643
# 1222985
# 16091762
# 7031013
# 4774386
# 15178181
# 4942006
# 3385915
# 6033594
# 8748895
# 11677525
# 10916190
# 16082304
# 6647163
# 767478
# 6887931
# 11594713
# 9146656
# 9599565
# 11115366
# 10815449
# 6299710
# 8057844
# 151444
# 15215909
# 9279264
# 3866605
# 4483443
# 16279603
# 9712199
# 1245380
# 13846687
# 10625159
# 3139667
# 2062182
# 13895635
# 3693383
# 13021389
# 12932412
# 5085511
# 11013970
# 7415041
# 6166423
# 3796993
# 5689427
# 3062591
# 9712645
# 12828260
# 12207823
# 9598502
# 6400735
# 13727882
# 16269600
# 2886825
# 9584162
# 13984677
# 8021625
# 15511484
# 2894971
# 14899812
# 12260049
# 3326880
# 12525688
# 8444010
# 5182043
# 12089320
# 5033918
# 14488599
# 16768658
# 8334926
# 5403499
# 12592497
# 6997889
# 14899328
# 8359663
# 664205
# 8835805
# 3726326
# 16612111
# 12049633
# 975328
# 16536565
# 14011675
# 763622
# 2312066
# 7119006
# 16727048
# 579041
# 12575906
# 6699532
# 2831258
# 2236467
# 6502423
# 6394649
# 4869781
# 13405258
# 8963915
# 15633519
# 4702637
# 8281962
# 5284360
# 9787704
# 5439204
# 15586456
# 1469334
# 5588616
# 14680549
# 3328889
# 2145504
# 14700888
# 7118632
# 12516269
# 6189442
# 15880107
# 15763118
# 1993416
# 8695052
# 2642946
# 6976910
# 12272018
# 9003118
# 8831497
# 9317581
# 915216
# 3189434
# 2286570
# 10708367
# 1959359
# 13077954
# 11830364
# 9908241
# 10780647
# 3907575
# 14659060
# 1137080
# 4764435
# 6572793
# 10352606
# 15457290
# 970696
# 7076558
# 12859021
# 5015654
# 10559761
# 8107665
# 12693360
# 16289815
# 6481677
# 12114299
# 15039759
# 13431696
# 2865029
# 12520637
# 608387
# 7859082
# 11628451
# 315512
# 16267615
# 8780066
# 7170341
# 1148489
# 14193065
# 4801594
# 1182691
# 11621237
# 1450906
# 6713074
# 8917328
# 832921
# 13708892
# 2033483
# 10408541
# 12796925
# 16150769
# 16620269
# 141445
# 6742844
# 12507885
# 8147311
# 8595453
# 152039
# 10574988
# 9198957
# 13507244
# 8531179
# 4413212
# 4909445
# 16152933
# 897864
# 9711250
# 4987229
# 6386130
# 12327791
# 11456848
# 12899774
# 2233295
# 9388808
# 3194674
# 13650726
# 15548267
# 14484826
# 7630829
# 2294071
# 953692
# 2903758
# 3600077
# 8803580
# 906693
# 7267823
# 11553231
# 10540344
# 7261222
# 9651822
# 12974094
# 2280592
# 13236919
# 15487291
# 5161545
# 1656574
# 14076668
# 15669377
# 11066407
# 1215409
# 11748401
# 9559994
# 7000267
# 4368446
# 965135
# 12996946
# 3437804
# 6679290
# 16402125
# 13815167
# 10567564
# 3114576
# 11798917
# 11078363
# 9630735
# 12182265
# 13477363
# 14588482
# 4218939
# 5378343
# 16730939
# 4679141
# 13746737
# 16340477
# 1764527
# 866633
# 4987205
# 8708362
# 6531225
# 15638025
# 9161737
# 10254844
# 8871392
# 10867084
# 13074831
# 4423478
# 1632473
# 2937794
# 12801887
# 2965428
# 3121609
# 8990739
# 10060856
# 1102676
# 4174738
# 14246179
# 1537295
# 8235387
# 10182317
# 12115937
# 16070995
# 12027121
# 13949675
# 1898365
# 659669
# 15616478
# 16605589
# 8150127
# 5686296
# 10124770
# 1837139
# 9297284
# 16677672
# 8624018
# 1704905
# 9241879
# 8166022
# 11667400
# 2762255
# 5992251
# 1512644
# 6318533
# 4583731
# 10836315
# 3743226
# 6847626
# 5918606
# 4487734
# 14516033
# 8176984
# 2841393
# 16291706
# 4284330
# 9449239
# 13955523
# 2243188
# 12804442
# 15345935
# 2947835
# 3741750
# 10473351
# 1642287
# 1447042
# 3118456
# 12478767
# 2079821
# 5443135
# 5747779
# 15624076
# 1022086
# 6522142
# 3914433
# 12501551
# 1255766
# 7778307
# 11346240
# 13871322
# 11000590
# 7457333
# 14977630
# 3256312
# 15630767
# 12818288
# 15435179
# 16675779
# 13686707
# 15296517
# 3541954
# 14183131
# 3166377
# 4021668
# 1475775
# 3434268
# 11536980
# 7801886
# 3463297
# 4175431
# 12383639
# 12448541
# 14333083
# 12257003
# 2934595
# 2143957
# 10463270
# 13956305
# 11896019
# 3597549
# 12898998
# 486877
# 3739676
# 387152
# 8397776
# 1030432
# 14599161
# 1603891
# 990187
# 1753231
# 2732352
# 6895238
# 2544062
# 10288746
# 12737421
# 14451226
# 6942513
# 14875929
# 12572345
# 12484886
# 1655414
# 2838220
# 10292599
# 6098398
# 13390654
# 8131800
# 840921
# 14956358
# 8827573
# 15673647
# 959862
# 16044539
# 14620975
# 14451202
# 6004318
# 513038
# 2363094
# 11990009
# 7695885
# 3299119
# 16263031
# 10534375
# 13389676
# 11391883
# 11316691
# 16495951
# 8337907
# 4293458
# 6355490
# 14557303
# 16339483
# 6288562
# 471965
# 1418514
# 2852761
# 14230969
# 2201284
# 6276336
# 4779769
# 12949920
# 7459809
# 8091743
# 16706007
# 6660654
# 14160901
# 16061245
# 4299062
# 13731941
# 7383032
# 11207124
# 13088307
# 1228325
# 14575167
# 16089351
# 2290655
# 6827428
# 13104164
# 3108160
# 4914931
# 5565246
# 8283145
# 7340261
# 8743638
# 2871787
# 7147984
# 15137047
# 332899
# 10760640
# 4122413
# 420270
# 9848823
# 12120586
# 6241772
# 15309640
# 13512307
# 12064023
# 16551906
# 16769907
# 13789708
# 3021415
# 2081837
# 10844878
# 11826477
# 6452223
# 1245646
# 8329996
# 12071176
# 1328263
# 15788351
# 8491679
# 15754260
# 3243379
# 13398946
# 6660285
# 1298480
# 1099206
# 1216427
# 9055813
# 4291062
# 6707963
# 8199118
# 2451950
# 14288018
# 6053249
# 14474391
# 4078551
# 3623995
# 6891633
# 8545842
# 3010935
# 11676567
# 14672037
# 3939076
# 1026702
# 3697218
# 13580521
# 1634366
# 6153584
# 1827565
# 2777069
# 11519426
# 12466358
# 2556630
# 5275583
# 3803745
# 10663176
# 6797476
# 10909108
# 2030010
# 4140846
# 8450884
# 6044802
# 7335740
# 8037479
# 5636038
# 11052977
# 12491724
# 6657088
# 15715617
# 16498628
# 6619787
# 16666629
# 15506220
# 5994631
# 10827473
# 6773503
# 13464909
# 8668783
# 13384476
# 11910274
# 16023025
# 8316016
# 655373
# 11075570
# 2704444
# 295109
# 10181849
# 5976948
# 14270004
# 1217516
# 11241892
# 3923782
# 4064530
# 1139100
# 8182073
# 8601891
# 6513811
# 2100950
# 15037513
# 16407610
# 1758879
# 4999673
# 3870233
# 993980
# 15114249
# 15378858
# 4778710
# 2993420
# 5883590
# 4230296
# 1125463
# 16394218
# 1029028
# 5359201
# 5102571
# 1428001
# 9242205
# 11115676
# 15421739
# 7442003
# 4837550
# 11227590
# 5029716
# 16423583
# 14731535
# 16122329
# 4411037
# 8057089
# 5250506
# 14296467
# 11681362
# 14025783
# 150090
# 13067513
# 7225612
# 2947360
# 16214177
# 534328
# 9654133
# 12123997
# 787921
# 9809156
# 8544556
# 12742940
# 10055053
# 9083563
# 12795967
# 1457324
# 11401197
# 2637674
# 2655090
# 8953495
# 146939
# 667673
# 1032235
# 13190055
# 2535126
# 6748973
# 4941638
# 2661166
# 12721117
# 1954512
# 8997460
# 16203430
# 14097496
# 4489037
# 6838788
# 7790479
# 4201959
# 2436938
# 11289687
# 9888533
# 13724743
# 13022213
# 13288213
# 10921947
# 5774840
# 11552173
# 11457198
# 13045971
# 4237768
# 2057725
# 6221868
# 3554252
# 1888364
# 13249941
# 8567847
# 253666
# 3388161
# 7932431
# 8907266
# 15562912
# 4026532
# 13004694
# 16367512
# 5232426
# 13099054
# 12416948
# 2505595
# 13581891
# 2960538
# 10750016
# 14776473
# 13704841
# 13555906
# 12685245
# 15754926
# 11179185
# 1402561
# 608274
# 3430736
# 3420651
# 9000577
# 6904941
# 7423146
# 14516758
# 13828868
# 12473120
# 3627279
# 9551014
# 527408
# 4603795
# 2276985
# 11246996
# 3031344
# 4522731
# 377068
# 14211031
# 15895279
# 11025089
# 12201778
# 4288072
# 3941525
# 5135390
# 14153978
# 12500480
# 5232303
# 12469561
# 3887271
# 11377005
# 15865374
# 6924720
# 9921108
# 13019544
# 12673002
# 5503666
# 16307578
# 12568107
# 4869060
# 13999668
# 3548067
# 2502872
# 10571290
# 308615
# 1099037
# 14479625
# 1805715
# 6855599
# 15882064
# 9960559
# 13528067
# 3628665
# 4476831
# 12954750
# 6893077
# 14316007
# 16008197
# 12595820
# 13016144
# 16704398
# 2039984
# 6586268
# 1210734
# 4424296
# 6369716
# 15292939
# 1475237
# 1662787
# 14891730
# 10565457
# 4553722
# 6900021
# 16647877
# 10344618
# 7602837
# 8880271
# 16520468
# 9278012
# 6278827
# 12109943
# 6038176
# 14775200
# 7166885
# 2669548
# 12719955
# 275089
# 14095624
# 1459452
# 8774717
# 8224298
# 5766865
# 3355892
# 12493407
# 5911819
# 263685
# 5316857
# 13694172
# 2852409
# 13418411
# 1976240
# 3183357
# 11022170
# 6436489
# 5009877
# 8308901
# 3501650
# 9877667
# 10805309
# 16490532
# 9088036
# 16673266
# 11480422
# 12046405
# 9236027
# 2563954
# 9766612
# 6821486
# 6323703
# 3074651
# 359027
# 2592843
# 1535931
# 5659726
# 15674851
# 7750692
# 8287803
# 10180597
# 8507364
# 4144217
# 8661024
# 1833949
# 7350083
# 6515400
# 14561438
# 3898424
# 3677546
# 8359406
# 14363337
# 4557182
# 15772981
# 8993950
# 6862576
# 981831
# 6633488
# 1923034
# 7273587
# 2753775
# 4154158
# 13291014
# 1164521
# 2636610
# 11351162
# 14864679
# 13822592
# 5798883
# 14621230
# 15234094
# 12150500
# 9668316
# 9451588
# 12958595
# 4003066
# 939404
# 433046
# 2575342
# 14389754
# 282108
# 16685900
# 1860337
# 5748105
# 1774502
# 6686017
# 5444940
# 13117311
# 2979003
# 3469647
# 9108957
# 12171547
# 7320092
# 14416089
# 9417108
# 8624484
# 14212742
# 14861227
# 9842246
# 13057399
# 4678582
# 16418848
# 3072860
# 727150
# 8376497
# 13197994
# 14700072
# 14479229
# 2502660
# 3858226
# 9499008
# 1759431
# 1664325
# 1918257
# 11127507
# 9413187
# 9956331
# 6501747
# 5734237
# 7179487
# 10228828
# 13233443
# 6626394
# 11649756
# 9907192
# 15500592
# 15945311
# 12171809
# 3233745
# 11023982
# 319430
# 15763448
# 16000259
# 7532950
# 8105511
# 11140717
# 10263182
# 9000445
# 5391419
# 12904472
# 1373471
# 1219113
# 10429014
# 7389404
# 590411
# 368009
# 11097270
# 10255522
# 7308407
# 9888318
# 13252174
# 9706441
# 6565893
# 2709646
# 7844246
# 3703673
# 2298646
# 8907429
# 13736170
# 790930
# 2150651
# 10470995
# 3475099
# 5319789
# 12230184
# 11608864
# 15035278
# 12669212
# 15779710
# 14701648
# 15790976
# 13585198
# 1805512
# 12087479
# 5845371
# 4059783
# 9031767
# 14076891
# 2635496
# 680450
# 1018336
# 4418960
# 4980186
# 1812507
# 972577
# 1582446
# 2667708
# 11584771
# 10032673
# 11386463
# 9003104
# 13361887
# 502099
# 1254254
# 9005750
# 7950612
# 9974450
# 418069
# 11215360
# 1990107
# 4613445
# 16102850
# 14192436
# 10083664
# 9538191
# 13119447
# 2237587
# 11626120
# 15720466
# 14186270
# 2420748
# 13707567
# 16037421
# 6396659
# 14789091
# 15404118
# 7883396
# 9065560
# 3813513
# 13014300
# 1415788
# 10408920
# 5761021
# 6759648
# 13212397
# 16752050
# 1163064
# 1797813
# 5863784
# 6703798
# 8987213
# 7456172
# 7188274
# 9396569
# 6702525
# 14484860
# 1315118
# 13203427
# 12025935
# 13269007
# 9353168
# 4193816
# 7663177
# 9967646
# 5118439
# 3109287
# 5344351
# 3538714
# 3885609
# 7756922
# 11740149
# 8353324
# 11180670
# 11257460
# 10331775
# 5442331
# 2520560
# 13249614
# 9727129
# 322915
# 4317271
# 14449479
# 10602638
# 10725802
# 6907623
# 5170142
# 10396756
# 6735191
# 13331483
# 7988531
# 6470355
# 7578806
# 9402843
# 13569467
# 10566772
# 9775020
# 4709156
# 9591994
# 3033413
# 15160990
# 2308362
# 9810289
# 6432998
# 3006115
# 4373150
# 950559
# 9644940
# 8174784
# 11432413
# 14963467
# 15130838
# 2084659
# 12338912
# 1108268
# 7283474
# 10470795
# 14385957
# 2303161
# 7553202
# 2129771
# 7364368
# 5224112
# 12997667
# 5044865
# 12984512
# 13407611
# 4273469
# 12506457
# 12348048
# 15173932
# 4853879
# 16693811
# 4331237
# 10577701
# 7659732
# 12256820
# 4821852
# 3785707
# 14887714
# 9779618
# 988384
# 2155939
# 15689115
# 14969085
# 9670081
# 6947588
# 4095818
# 3438615
# 5715096
# 6666445
# 5810363
# 12225375
# 5647256
# 12710521
# 15701139
# 10564565
# 15913372
# 12130737
# 5258329
# 11240194
# 10038911
# 11239939
# 15154609
# 1360314
# 1396744
# 7861163
# 12265338
# 13631757
# 13775394
# 3778474
# 12365572
# 13069624
# 15577369
# 16754978
# 15563892
# 13379861
# 2497825
# 6785733
# 12377269
# 7715239
# 16072871
# 3068755
# 12818477
# 7379002
# 3427484
# 13830267
# 258350
# 295285
# 16401509
# 6644722
# 622003
# 11101345
# 8758257
# 8653420
# 4152944
# 11698980
# 3957538
# 11865881
# 16583552
# 4925719
# 10014651
# 8658827
# 13004323
# 5992340
# 2127849
# 11064128
# 8372467
# 3173383
# 2580641
# 8597209
# 1394125
# 3342498
# 14135867
# 5297336
# 291909
# 5758102
# 452591
# 5567245
# 1775141
# 1049219
# 9716281
# 13668719
# 11711120
# 9698309
# 5895589
# 3225045
# 12951012
# 364009
# 5004553
# 4239721
# 15764776
# 9753904
# 6470884
# 14055604
# 9062921
# 12186722
# 7283517
# 13854652
# 14700767
# 2907989
# 6699360
# 4448569
# 659184
# 15012853
# 15065227
# 9467768
# 15601012
# 14161124
# 9893337
# 7460237
# 14063417
# 14215798
# 15415722
# 6455117
# 16051396
# 14557839
# 13764899
# 14073353
# 13866712
# 3626123
# 3222156
# 4337232
# 4989690
# 5660265
# 5211346
# 9361376
# 12841546
# 6875107
# 11810012
# 6255545
# 15383136
# 16314930
# 1402383
# 15133834
# 11664209
# 12241809
# 7588845
# 8821499
# 16426757
# 12079011
# 3088034
# 16521467
# 1721898
# 8934679
# 12314885
# 14914821
# 2254807
# 6004978
# 1049029
# 3446606
# 494494
# 3343373
# 10862649
# 1339165
# 7537775
# 16151361
# 8930757
# 308476
# 2600427
# 6044138
# 9817010
# 15148827
# 5271594
# 4314171
# 1368311
# 3786553
# 3688415
# 1556201
# 3133597
# 11709548
# 2770121
# 3966879
# 14831136
# 16320149
# 6696736
# 9488512
# 5906087
# 14609596
# 16408627
# 3626217
# 5192135
# 2605694
# 16188415
# 1755502
# 4724782
# 10242708
# 4864669
# 8763614
# 14040973
# 6640832
# 412371
# 4314839
# 8195866
# 16239585
# 9356203
# 14713401
# 13186057
# 16360597
# 2006068
# 2744684
# 15576972
# 4500894
# 5193415
# 14879787
# 1375556
# 15261812
# 8076055
# 2254103
# 3510079
# 12442017
# 8515668
# 11592949
# 7909713
# 2645286
# 12767520
# 1148202
# 11666912
# 10353354
# 10057446
# 6994510
# 10328091
# 9912396
# 7287600
# 2870930
# 4534318
# 4692866
# 2975028
# 11821271
# 16106215
# 7980014
# 10477952
# 724224
# 13233450
# 907744
# 4201189
# 4503390
# 8794530
# 5863464
# 9533518
# 3457926
# 5358114
# 4443211
# 3339245
# 983581
# 14939011
# 1437598
# 13858678
# 13233330
# 4055021
# 7647487
# 10006431
# 8267200
# 12146188
# 9550534
# 3647722
# 2599306
# 1769744
# 8614474
# 10775079
# 13559139
# 1379058
# 12680622
# 9895795
# 14514815
# 1214002
# 2943196
# 5483668
# 7533134
# 10826496
# 3162963
# 13174960
# 13074622
# 3281811
# 13735186
# 4714777
# 4011941
# 15430018
# 15268138
# 8584876
# 6691305
# 12976098
# 12928895
# 1016511
# 15882178
# 12947763
# 12399859
# 6825739
# 4058029
# 1319478
# 3760307
# 9885987
# 11717766
# 11917653
# 15666807
# 7110447
# 8661045
# 9435769
# 15003509
# 13007484
# 9340750
# 7141091
# 4124229
# 4634178
# 13006828
# 11980048
# 590954
# 7866246
# 12208330
# 12407682
# 13548049
# 16721809
# 952481
# 1447949
# 10686842
# 9657996
# 10171513
# 4643111
# 14008022
# 10807598
# 5948777
# 16303545
# 4135621
# 11844656
# 16604931
# 7501586
# 2498623
# 10097710
# 4992600
# 11251126
# 2875038
# 8153643
# 14696999
# 7488024
# 9530520
# 7679372
# 1223291
# 8016796
# 2484548
# 11527585
# 3153026
# 16105429
# 1326015
# 722949
# 14909974
# 5332804
# 10209503
# 7303236
# 347875
# 3527118
# 13268809
# 16292069
# 10416804
# 13306012
# 3884400
# 15317225
# 1361009
# 13290253
# 10424684
# 3869487
# 3539337
# 14065233
# 5742651
# 9810363
# 1597016
# 9928768
# 165840
# 253450
# 3593739
# 1272848
# 13069670
# 4899775
# 4208437
# 8493044
# 8230618
# 15797476
# 12056170
# 955057
# 4168252
# 9656524
# 15556109
# 7865834
# 2161051
# 9576750
# 10209207
# 7397917
# 11837925
# 4402859
# 3957752
# 10646040
# 7076333
# 2137893"""


# # data="""123"""

# data=data.split('\n')
# data = [int(x) for x in data]

# memo={}
# def getNext(num):
#     n=num
#     if num in memo: return memo[num]
#     num=((num<<6) ^ num) % (1<<24) 
#     num=((num>>5) ^ num) % (1<<24) 
#     num=((num<<11) ^ num) % (1<<24) 
#     memo[n]=num
#     return num

# memo2={}
# def get200Next(num):
#     n=num
#     if num in memo2: return memo2[num]
#     for _ in range(200):
#         num=getNext(num)
#     memo2[n]=num
#     return num

# s=0
# generated=[]
# generatedDict={}

# def get2000Next(num,lis,i):
#     for _ in range(2000):
#         num=getNext(num)
#         lis.append((num%10-lis[-1][1],num%10))
#         if len(lis)>=5:
#             t=(lis[-4][0],lis[-3][0],lis[-2][0],lis[-1][0],i)
#             if t not in generatedDict:
#                 generatedDict[t]=num%10
#     return num

# for i,d in enumerate(data):
#     curr=[(0,d%10)]
#     s+=get2000Next(d,curr,i)
#     # print(s)
# print(s)
# # print(memo)
# vis=set()
# mx=0
# for k,v in generatedDict.items():
#     cal=0
#     t=(k[0],k[1],k[2],k[3])
#     if t in vis: continue
#     vis.add(t)
#     for i in range(len(data)):
#         dt=(k[0],k[1],k[2],k[3],i)
#         if dt in generatedDict:
#             cal+=generatedDict[dt]
#     mx=max(mx,cal)
    
# print(mx)


# # day 23

# from collections import defaultdict


# data="""ad-bk
# gv-gy
# sk-ox
# cj-xe
# bt-ke
# sp-lv
# tt-oi
# eg-oi
# hn-ii
# or-rs
# ws-zs
# lz-mu
# qp-tp
# pq-ve
# ri-io
# ex-yq
# iu-yu
# ns-ka
# aw-im
# lo-jf
# vc-yj
# kt-tx
# bt-ca
# ko-ny
# vf-tu
# qi-nc
# qt-fn
# af-po
# gx-lb
# sn-qc
# cg-lo
# vg-in
# mm-kt
# uf-kw
# ue-hs
# bd-kx
# iw-sm
# ti-sk
# lw-ks
# mu-wy
# wt-nm
# xz-yd
# wu-fw
# di-fc
# xc-zg
# vi-xt
# gv-co
# ao-wu
# np-gf
# sv-bm
# zb-yr
# yv-iy
# mp-ko
# ck-qu
# rh-hm
# my-hk
# sm-at
# pr-gz
# ui-rl
# yq-lc
# sn-di
# wa-ep
# qs-ur
# es-mh
# bq-dl
# pe-xi
# mq-jd
# ew-mb
# pv-vd
# uc-xm
# zr-fe
# qd-fb
# pv-pd
# tn-lx
# cd-ss
# jr-lr
# ek-ve
# zu-ab
# jd-ll
# yr-ye
# zc-ud
# zt-rq
# cu-ov
# za-ts
# zi-hf
# lo-ut
# la-zr
# to-ft
# yp-ul
# cj-cu
# ms-ov
# xq-xv
# gy-co
# la-kk
# oj-pl
# no-bv
# vr-ch
# mn-op
# go-pj
# cz-ye
# jv-sv
# bn-fb
# ym-gt
# ck-ub
# mf-tm
# tq-nb
# nl-is
# ui-cg
# wk-ja
# mh-fu
# ex-fi
# fv-ue
# mx-on
# ke-bl
# ed-lx
# rf-dc
# bt-ks
# da-hh
# hq-mu
# mf-pf
# ht-ef
# jp-bu
# pn-rt
# dj-rs
# xr-zq
# sk-ed
# mg-ch
# uv-sf
# rm-tu
# ts-st
# pj-gk
# ms-ej
# vv-xe
# xb-ql
# hs-sb
# dt-tx
# pm-el
# dg-zv
# wt-fn
# sj-we
# lp-ik
# vk-gi
# nt-bw
# lc-rk
# zp-pa
# rm-za
# gv-lh
# on-cg
# bo-tp
# ga-kq
# xf-by
# lk-sn
# ay-xh
# au-dh
# hz-ii
# ad-bs
# sk-zv
# po-tn
# zr-jq
# tn-bd
# ua-bo
# bd-af
# yu-co
# bh-hu
# iw-jh
# ob-mt
# dn-bk
# iu-hj
# ul-yc
# vq-sn
# wr-bb
# vc-wc
# ya-wl
# sw-xp
# nr-jf
# jc-fw
# qi-ty
# be-mp
# ii-mz
# hf-zd
# ox-ti
# ku-mh
# jt-wr
# uc-lh
# pu-kk
# sv-yu
# ga-xp
# bx-rh
# nu-fz
# sp-bn
# ei-rh
# ft-de
# mq-kp
# mr-pc
# rx-tl
# tg-wr
# su-vm
# aj-ah
# ny-dc
# ni-uo
# vq-mh
# qd-uo
# za-ad
# pu-rc
# bu-hs
# nz-zy
# ca-bl
# on-qw
# ut-rl
# rm-bn
# jm-lo
# io-ij
# vc-qo
# gm-ul
# fu-qc
# uw-pv
# lu-ao
# jb-tk
# fs-qz
# hb-hc
# zb-zv
# wu-uc
# ta-kl
# aa-on
# fi-wj
# rv-it
# qa-fu
# nk-ne
# hi-sr
# zr-rc
# hk-it
# cs-oy
# zo-tr
# qh-af
# da-pb
# hk-jz
# wg-ms
# ym-ez
# yp-yc
# ly-fw
# qt-lr
# od-ya
# wk-my
# qu-nh
# ka-xq
# tq-og
# kz-fn
# ko-be
# jt-rj
# dj-pm
# vd-zk
# uu-hl
# cp-dh
# sp-bs
# rv-ch
# fz-ah
# cn-nz
# sd-fj
# ub-pg
# vo-jd
# gb-bw
# fr-li
# jb-fc
# nb-hu
# yi-ff
# kj-li
# eb-op
# wa-hq
# fs-kc
# tv-nm
# lv-bs
# qt-uu
# wk-cy
# ri-rx
# mg-cy
# yx-zm
# gt-hr
# xk-nz
# st-rx
# xi-rq
# uq-qj
# qi-pc
# kh-kc
# bu-mq
# ew-xr
# vi-ez
# sr-lc
# zb-mc
# ke-ca
# xr-to
# zq-xp
# qa-di
# mg-wk
# aa-jm
# ol-zr
# st-zi
# nv-hn
# gy-ao
# ga-ro
# cu-kt
# eu-jr
# oh-ym
# ty-ph
# io-re
# za-lv
# jv-oj
# xu-xe
# kc-zs
# ly-wu
# kc-se
# wc-kc
# av-ri
# fj-zo
# ax-sc
# ql-vp
# vg-cn
# sr-tm
# dy-qv
# io-xa
# ll-lm
# td-sf
# ep-hq
# gm-tq
# rg-vl
# an-qe
# kl-ho
# to-xp
# qa-qc
# dk-fj
# yb-je
# gv-fw
# by-dk
# kf-nh
# ac-nk
# ve-lw
# hu-yc
# fj-lb
# zs-sm
# mm-us
# jt-zv
# so-go
# ng-ih
# wg-id
# dh-ph
# vm-bk
# tv-dv
# ub-te
# wj-px
# ed-iv
# hn-bf
# om-yv
# pi-ra
# td-qb
# nu-uq
# jv-oy
# ef-my
# bh-da
# qv-bi
# iy-no
# ct-wy
# bh-hh
# hf-ar
# ot-xo
# rc-ne
# jr-kz
# jd-lm
# vk-oj
# gh-om
# fb-pd
# pq-bl
# sj-bo
# nf-xx
# rx-ze
# mt-jv
# dv-aq
# ar-yf
# xc-bo
# ma-su
# nq-zi
# vg-as
# po-bd
# ht-zc
# ny-lb
# tm-wj
# fi-eg
# fc-qa
# po-lx
# gx-mu
# bk-um
# ao-fw
# aw-ye
# tj-nj
# mx-ut
# bu-fv
# xb-uq
# rs-cz
# la-rg
# mu-yx
# dh-nc
# vq-es
# se-iw
# cj-ny
# bh-mh
# iv-qz
# dc-mp
# zu-jp
# cm-jr
# lh-xm
# aj-tn
# ay-hc
# sm-kh
# nm-up
# cq-kf
# se-sm
# xt-oh
# ye-el
# ek-bt
# st-za
# dk-gx
# xk-ih
# rt-xk
# tj-nl
# pm-cz
# qv-pg
# vn-zp
# ye-sh
# xx-ct
# bs-nq
# bl-lw
# nu-zg
# ad-bn
# yu-hj
# oz-yk
# li-vv
# mw-sf
# so-bq
# uj-kt
# wv-qp
# sn-mh
# le-oe
# ti-xj
# lq-qh
# lp-rx
# co-ly
# uu-fn
# oy-hj
# lw-qc
# vo-lm
# sw-zq
# wo-fr
# mn-pn
# je-ke
# vr-wk
# wg-kt
# eg-sr
# ls-cd
# lv-bn
# xp-xr
# lm-zu
# jd-ab
# iw-od
# ae-qy
# rr-nf
# ns-hm
# ma-mf
# vj-ay
# gr-or
# xv-zt
# bs-st
# ah-vb
# gu-la
# od-et
# ta-ya
# nh-pg
# mw-ae
# vr-hk
# rw-vt
# ph-pc
# qw-jf
# mn-hg
# gm-da
# oy-mg
# xh-wl
# ao-gv
# ts-bs
# xx-lz
# hq-wv
# xz-mk
# mu-xx
# qm-el
# ul-tq
# jg-jz
# sn-rk
# bm-sd
# uw-jb
# sm-ws
# um-oe
# ym-ra
# hr-ql
# ji-ns
# sj-ua
# hu-tq
# xw-xc
# gr-mc
# yd-xi
# my-ch
# bi-kf
# lt-lr
# pw-og
# nk-gz
# xg-fq
# pj-wt
# ts-nq
# vm-mx
# mj-nv
# xy-xb
# lo-ui
# ma-le
# qh-ue
# ma-ic
# zs-wc
# pz-wl
# pn-hi
# qo-xw
# nh-dy
# or-ye
# xk-mn
# mx-jm
# hj-gi
# lr-kz
# es-sn
# xr-ve
# mv-hb
# ot-np
# hs-vo
# qi-gb
# sp-zi
# xp-ng
# ke-kb
# cp-ys
# hc-kl
# im-yk
# ih-xg
# ih-op
# aa-nr
# ac-mk
# vf-ts
# ji-xv
# ms-uj
# sb-ue
# tr-by
# ap-ta
# ra-gf
# fb-uw
# lg-dt
# wi-an
# us-wg
# qm-ap
# tl-ja
# px-vl
# iv-bd
# sc-qp
# rt-eb
# ty-cp
# fb-zh
# te-dy
# tv-nq
# do-av
# uj-lg
# uw-ni
# ox-xj
# ub-zk
# qs-yi
# ys-mr
# pf-ni
# rd-jl
# kk-rg
# mv-ls
# ft-sw
# ao-ly
# im-oh
# qf-kw
# kb-je
# kr-jr
# rm-vf
# it-dk
# fs-lq
# ke-pq
# qc-di
# to-oo
# gt-oz
# gu-kk
# kx-tn
# zk-pg
# ub-vd
# ws-jh
# gh-iy
# kt-ov
# os-rh
# so-up
# lu-gy
# iw-at
# qz-bd
# hb-zz
# qu-dy
# pj-up
# je-ek
# ah-zg
# id-ov
# xm-ly
# xt-gt
# my-mg
# ba-op
# gi-iu
# qu-zk
# ze-ja
# ob-hb
# wc-et
# el-or
# cs-sd
# ya-xh
# cz-fv
# wt-go
# al-pd
# cz-is
# ku-fu
# rq-jl
# ew-sw
# ql-uq
# ff-ou
# xj-dg
# ik-hb
# po-iv
# qd-ms
# jw-zo
# um-ic
# mp-xt
# ly-lh
# um-vm
# ab-ue
# kr-yb
# tj-is
# ob-bx
# hc-ix
# yd-ac
# kj-ex
# nq-tu
# pb-hh
# qt-jr
# an-ec
# jr-lt
# gk-vp
# cq-dy
# we-rp
# if-ez
# tr-dk
# cd-mv
# ls-bx
# ch-it
# mv-bx
# oo-bq
# fb-pv
# wh-hf
# oo-dl
# cq-ub
# bb-rj
# ay-ya
# lc-eg
# of-ze
# od-sm
# fj-oi
# xu-be
# rj-zv
# le-kw
# dg-tg
# if-yk
# xg-ac
# gh-am
# up-dv
# ku-sn
# zd-vn
# hn-nt
# yr-pm
# du-vv
# se-kh
# vr-vx
# xj-ml
# fr-bi
# gk-so
# gm-pd
# av-tl
# ji-ka
# ep-wv
# io-mc
# vu-pf
# kl-wn
# cq-ck
# ny-fr
# hz-py
# vt-ae
# qi-au
# sr-fi
# ue-zu
# dy-ck
# ho-ay
# vk-oy
# tt-tr
# qq-fz
# wv-wy
# cm-lr
# op-xg
# at-rr
# id-uj
# qo-mj
# uf-vm
# wj-jc
# tf-yd
# qd-ni
# tt-by
# iy-ea
# yk-vi
# ct-lz
# fv-ab
# kb-bl
# lx-bd
# hj-sd
# fn-kr
# sk-bb
# kh-at
# rh-ka
# bd-qh
# ra-if
# fi-iq
# hz-yj
# nb-gm
# qe-ob
# kf-ck
# rb-ei
# xv-ei
# cy-jz
# hf-pa
# gb-ph
# wa-oh
# mh-qa
# gl-ax
# ta-ua
# sr-kj
# md-xk
# st-bn
# xz-na
# vc-py
# dq-kr
# fw-uc
# wx-ti
# cb-ar
# ss-qe
# xy-qj
# ez-aw
# cj-wo
# us-qa
# bq-nm
# up-dl
# bu-ue
# wi-zp
# gz-tf
# pv-tc
# gu-pu
# fz-hr
# ho-pz
# sn-qa
# zg-qq
# dc-uf
# wu-gv
# ec-ik
# as-ff
# fn-gd
# um-dn
# nv-qo
# yc-pw
# wj-eg
# fs-po
# eu-kr
# da-pw
# xa-ja
# qe-mv
# zb-gr
# mq-hs
# yj-hn
# jm-qw
# jq-df
# ki-bk
# rn-co
# xu-mp
# lk-rk
# pn-xk
# jv-pl
# ae-td
# qo-hn
# hk-cy
# cp-yr
# id-ms
# bs-vf
# yx-xx
# zu-bu
# jn-zf
# uv-qb
# ar-zp
# id-kt
# rd-dk
# df-rc
# qz-ed
# sk-jt
# co-wu
# uq-zg
# iw-kh
# lq-tn
# am-tj
# gi-ur
# yv-ml
# de-zq
# ap-hc
# ik-an
# nu-xb
# jz-my
# ic-bk
# aq-wt
# zt-rh
# vg-zy
# lu-uc
# py-nv
# nl-no
# yr-dj
# aj-fs
# to-mb
# kj-pf
# yc-gm
# zv-jn
# zm-wa
# to-kq
# dc-be
# xx-wa
# nq-vf
# kk-zr
# jn-rj
# on-po
# xg-mn
# tg-zf
# cg-nr
# hm-ei
# fu-rk
# qc-mh
# mb-de
# ao-ph
# rs-sh
# pq-ca
# mn-fq
# ef-cy
# kk-jq
# we-pr
# jg-vx
# qu-da
# ew-gv
# aw-yk
# mc-rs
# yi-zw
# jg-ef
# hf-wi
# ny-wo
# lw-ca
# sc-bo
# pv-al
# vi-ym
# iv-qh
# xb-zg
# wx-tk
# ks-ke
# qs-cn
# ku-su
# ej-dt
# ap-ix
# qf-ki
# hu-gm
# to-ng
# xh-ho
# ni-jb
# ll-sb
# an-ls
# zo-oi
# zz-mv
# yd-pe
# lq-gb
# au-bw
# ou-zw
# ii-py
# hk-rv
# lp-ja
# ou-yi
# zz-ec
# pm-mc
# os-ka
# ke-ek
# jt-dg
# ck-zk
# ea-nj
# pw-tq
# ex-wj
# hf-zp
# oo-up
# sb-ab
# pq-ov
# eb-fq
# zw-eu
# kb-av
# ze-ri
# rr-wc
# ek-uo
# oi-by
# px-zr
# yi-cn
# eg-pf
# gp-es
# ec-ls
# ja-io
# ue-vo
# hu-hh
# lx-qh
# os-ht
# eb-ch
# ij-xa
# bv-yv
# pj-oo
# bi-ck
# ff-vg
# bv-om
# kl-pz
# xy-ah
# dn-ic
# uj-dt
# wr-zv
# fr-cj
# rs-xy
# ag-xp
# gi-cs
# qy-xo
# ry-ax
# ff-ur
# xz-pr
# zs-od
# bn-ts
# es-ze
# qy-qb
# yr-mc
# bi-pg
# re-do
# yx-nf
# hm-xv
# qh-kx
# qj-qq
# gd-jr
# cd-ob
# ct-hq
# hq-lz
# yf-ud
# pu-um
# ns-os
# rt-op
# ft-xa
# no-yv
# hm-xq
# kl-ya
# fc-mh
# sj-sc
# bi-ub
# wj-yq
# wt-dl
# fp-fj
# ka-ei
# ij-ri
# bv-nj
# wv-mu
# gm-yp
# dn-vm
# mt-zz
# nl-ea
# am-nl
# hc-wl
# oe-ki
# jl-nk
# zt-pl
# gc-wh
# vj-wn
# qe-fq
# qb-vt
# iq-sr
# ts-rm
# tp-ax
# mc-or
# st-ad
# fl-we
# aq-dl
# ii-sf
# gb-pc
# jp-ue
# mf-sr
# dj-zb
# xx-kp
# pb-yp
# wu-gy
# rl-fe
# dn-oe
# de-xp
# cq-ts
# zr-vl
# yx-wv
# qm-mc
# mv-dq
# mj-xw
# nb-ul
# ma-vm
# ki-um
# yb-pq
# vo-sb
# pf-fi
# gf-qy
# nt-qi
# mk-jl
# lm-ue
# kx-lx
# vr-ca
# nk-og
# xu-ny
# bb-jn
# ns-xv
# oh-ez
# ku-lk
# tg-jt
# wu-jc
# fb-tc
# wn-xh
# hu-yp
# on-jf
# rj-ox
# xf-zo
# bb-dg
# tr-gx
# op-sv
# qb-rw
# jq-rc
# ek-ca
# xq-ji
# yf-zd
# rt-xg
# pe-ac
# rl-nr
# ho-wn
# ko-fr
# wv-zm
# mb-sw
# hz-hn
# ht-rb
# wg-mb
# ic-kw
# zp-cb
# av-re
# te-cq
# kh-jh
# vu-fi
# tg-jn
# fc-qc
# tv-pj
# ja-av
# hl-eu
# fu-di
# xa-ri
# uw-pd
# qo-hz
# ap-wl
# mm-lg
# gi-pl
# vt-ot
# wt-bq
# ma-ki
# gu-vl
# ew-to
# oe-vm
# nl-ml
# tp-we
# wv-wa
# mp-vv
# nf-ep
# zl-ax
# mr-dh
# rq-na
# fc-rk
# tu-ts
# su-uf
# rc-rg
# ic-vm
# gp-sn
# id-mm
# ho-hc
# ng-mb
# ac-tf
# wg-ej
# kj-eg
# kh-ws
# kw-ki
# gh-tj
# zk-bi
# zy-cn
# rl-qw
# el-mc
# zz-ob
# tt-zo
# wx-zh
# ga-mb
# mt-hb
# yc-og
# yj-ii
# dt-ms
# ox-wy
# fe-mx
# hk-wk
# ap-vj
# vn-cb
# tv-aq
# wh-ar
# mn-gr
# jq-rg
# re-lp
# mt-ec
# gh-bv
# od-kc
# pz-ap
# ac-xz
# ll-mq
# ei-ns
# ov-uj
# vx-ef
# bh-yp
# kj-vu
# up-bq
# ho-vj
# gy-uc
# xw-nv
# co-fw
# gi-yu
# pj-bq
# tk-al
# nz-ur
# yf-zn
# mq-ab
# ni-tc
# sd-yu
# by-lb
# ut-fe
# qc-vq
# rl-lo
# wh-wi
# pb-ko
# xb-qq
# ac-jl
# zq-ga
# zk-cq
# nv-xc
# uc-co
# mx-rl
# wu-lh
# li-ko
# td-uv
# lq-af
# zc-ji
# qz-qh
# bt-py
# ya-vj
# ud-zp
# mx-nr
# mb-zq
# ml-gh
# lu-gc
# vu-tm
# rf-xu
# vn-ar
# vi-if
# ng-sw
# dq-kz
# mz-xc
# yb-ks
# qf-ma
# nv-yj
# tk-tc
# nt-ph
# zm-kp
# la-df
# cn-in
# av-io
# nq-st
# lt-iu
# ox-tg
# du-ca
# sj-ra
# jc-rn
# la-vl
# mu-nf
# vt-uv
# zs-et
# ac-pr
# ph-bw
# qf-ic
# av-xa
# gl-ry
# rb-ns
# tr-jw
# qc-es
# nk-mk
# qe-ik
# ih-fq
# nj-is
# ht-ji
# sw-de
# mm-dt
# yi-hu
# go-tv
# ij-so
# hc-wn
# vb-nu
# jl-yd
# nc-ty
# ot-ae
# mt-cd
# dv-go
# df-rg
# ys-lz
# xw-mz
# qe-mt
# zg-vb
# fb-rf
# hn-py
# bm-cs
# ez-im
# vv-xu
# da-ul
# tt-xf
# ay-pz
# ix-pz
# sh-el
# iu-sv
# eg-mf
# qt-cm
# cn-ag
# ka-rb
# uf-bk
# ra-im
# de-to
# wc-od
# pz-wn
# vb-fz
# tf-na
# om-ea
# jr-hl
# re-ja
# aw-gt
# gv-rn
# ya-wn
# my-vx
# yv-am
# vt-mw
# qz-lx
# rk-di
# rp-ua
# fs-bd
# zb-or
# df-px
# rp-ry
# nq-ad
# se-ws
# lm-sb
# uv-xo
# xi-nk
# ri-do
# cs-sv
# ch-hk
# dt-id
# vc-hz
# xo-vt
# mw-ot
# bf-hz
# vo-ll
# xm-wu
# rq-pr
# jp-jd
# on-ut
# zn-vn
# ta-vj
# fs-kx
# ao-co
# qm-sh
# na-gz
# nt-ys
# or-cz
# dv-pj
# iv-fs
# zf-jt
# zd-cb
# rl-jm
# bw-qi
# pr-yd
# zf-wr
# jv-yu
# ec-le
# zu-mq
# kt-lg
# qf-le
# ik-ls
# ou-qs
# uj-us
# ve-du
# ql-qq
# ti-bb
# ad-vf
# jm-fe
# cm-gd
# xw-py
# um-kw
# yq-eg
# sc-rp
# mf-lc
# bd-ed
# rp-sj
# fp-tt
# te-ic
# sd-pl
# jv-bm
# it-my
# nl-yv
# jn-ti
# cb-zn
# tu-za
# lx-iv
# rm-sn
# su-kw
# oe-qf
# fz-uq
# zc-rh
# fs-tn
# gp-wo
# cb-pa
# vv-dc
# xq-os
# xq-rh
# ny-xe
# py-kx
# pg-cq
# xf-tr
# ri-tl
# pc-bw
# uf-ki
# yc-bh
# rt-md
# wo-vv
# ox-dg
# sj-ax
# iy-ws
# vc-mj
# kf-dy
# mv-an
# vn-gc
# av-ze
# qv-ck
# pi-vi
# nm-so
# kp-wa
# jn-sk
# ag-zk
# lc-ex
# xw-hn
# ah-qq
# rp-tp
# qu-te
# lh-ao
# xh-kl
# zh-pd
# ep-ct
# xy-uq
# aw-ra
# qm-dj
# oh-ra
# mj-hz
# ep-mu
# jp-lm
# nu-qq
# xv-ff
# gf-qb
# os-zt
# jg-vr
# hg-ih
# ap-ya
# rg-zr
# mb-xr
# rv-mg
# au-ty
# so-aq
# eb-hi
# mm-ej
# rm-je
# bv-am
# nv-hz
# tp-ry
# yc-hh
# zn-pa
# pe-gz
# rh-rb
# nf-ct
# rv-ef
# oj-sv
# du-bt
# md-xg
# fq-hi
# jw-qt
# ca-yb
# ii-xw
# pg-qu
# zv-tg
# mk-gz
# xf-rd
# zn-wi
# gi-jv
# nb-pb
# rj-dg
# nc-gb
# tq-xq
# vd-dy
# tn-af
# is-om
# ej-us
# xa-do
# ft-zq
# lz-nf
# wo-ko
# qd-jb
# vd-qu
# pa-ud
# ej-kt
# vk-hj
# bt-je
# ga-to
# et-jh
# yq-mf
# oz-yj
# da-yc
# wn-ap
# rb-zc
# ou-in
# xt-ez
# zn-hf
# nq-sp
# ro-zn
# pi-im
# bw-cp
# cq-nh
# zg-fz
# px-la
# mg-vr
# sh-ry
# dy-hj
# le-vm
# lt-uu
# jv-hj
# ss-mt
# dq-lt
# mv-mt
# ii-qo
# nt-gb
# qw-lo
# jd-sb
# lw-kb
# zl-fl
# rb-xv
# jg-cy
# pq-ks
# hi-lr
# ri-re
# ts-lv
# ss-mv
# it-wk
# qs-zw
# uw-wx
# bt-ve
# yp-tq
# ap-xh
# zb-cz
# kr-lr
# jb-uo
# np-td
# jl-xi
# iw-ws
# hr-qj
# gp-ku
# mh-lk
# st-rm
# ri-lp
# lm-hs
# ua-zl
# oy-pl
# lq-bd
# fv-mq
# du-ke
# oy-iu
# ad-sp
# bn-zi
# zh-qd
# om-iy
# ft-xr
# by-gx
# ze-re
# os-rb
# rd-tr
# vn-yf
# fz-xy
# oj-mz
# ix-ay
# cp-pc
# oi-jw
# wt-oo
# cp-au
# zs-at
# vq-fc
# pa-vn
# ax-qp
# za-sp
# na-xi
# yi-ag
# mw-xo
# rb-uc
# hb-ec
# rw-vj
# ao-uc
# hi-rt
# fj-xf
# ml-is
# uu-zq
# zv-xj
# jd-hs
# zk-dy
# aq-nm
# yf-gc
# xe-mp
# nc-au
# np-vt
# lz-wv
# at-cm
# fe-cg
# kj-iq
# co-jc
# vt-td
# yq-fi
# yx-kp
# ou-as
# qw-nr
# zy-yi
# qw-fe
# oe-bk
# ex-pf
# fn-lt
# cs-pl
# je-du
# dq-gd
# ht-xq
# vj-ix
# dh-pc
# bl-je
# ov-lg
# qh-ed
# ye-dj
# ik-zz
# zd-wh
# qa-rk
# am-lx
# pa-gc
# td-zl
# io-ze
# ua-gl
# cm-dq
# mk-pe
# jb-pd
# wt-tv
# gu-px
# zf-xj
# of-tl
# wu-wk
# of-re
# wx-jb
# zb-qm
# qw-mx
# pd-ni
# zl-gl
# ej-uj
# yb-kb
# qs-ff
# dg-zf
# mz-nv
# mc-dj
# sw-mv
# yq-aa
# cp-qi
# gx-xf
# bm-vu
# aj-qz
# op-xk
# eb-pn
# hb-bx
# yq-sr
# pm-or
# nq-za
# ks-du
# aa-jf
# kz-hl
# ml-am
# av-rx
# hb-cd
# mp-wo
# jp-nc
# os-hm
# vu-iq
# bx-mt
# ep-uq
# bd-aj
# vl-ol
# wj-iq
# zl-ry
# fl-gl
# vi-im
# qd-uw
# ns-xq
# yb-up
# lu-ly
# dl-so
# on-nr
# dn-ki
# sv-vk
# pb-og
# og-hu
# li-ny
# xk-xg
# pf-wj
# qw-ut
# vp-nu
# ar-ud
# hr-xb
# pe-jl
# gu-ol
# gx-oi
# gz-xz
# ed-po
# sb-fv
# ft-ew
# kz-lt
# go-ki
# wx-pv
# wj-lc
# xw-bf
# ea-is
# nj-rp
# mv-ob
# dn-uf
# qi-dh
# oy-bm
# rv-wk
# jt-jn
# hj-pl
# lv-st
# ei-ht
# aq-bq
# sh-dj
# gh-ea
# rn-lu
# is-am
# mx-cg
# py-mz
# cb-hf
# xr-ng
# nc-cp
# xi-gz
# cm-uu
# cy-rv
# ik-mv
# wj-vu
# sh-zb
# zf-rj
# xz-tf
# ku-qc
# vp-xb
# fn-jr
# it-vx
# yv-gh
# fj-tr
# sk-rj
# qo-bf
# uo-fb
# xr-ro
# tu-bn
# di-es
# xz-rq
# xa-rx
# ml-ea
# lc-tm
# xm-gv
# rh-ns
# sf-gf
# hc-ta
# wn-ta
# dt-ov
# hk-ef
# xp-ro
# jq-pu
# jm-ut
# hk-vx
# qj-ah
# tc-uo
# dt-kt
# tj-iy
# ns-zc
# oo-so
# es-rk
# yx-wy
# hi-xg
# wt-so
# lp-xa
# kq-ef
# go-up
# sh-cz
# ec-ob
# wl-ta
# aq-oo
# kp-nf
# ku-fc
# fp-zo
# ko-vv
# jb-tc
# mg-it
# gk-up
# dv-so
# nq-bn
# ct-wv
# ae-sf
# hj-cs
# ue-jd
# uf-um
# rf-fr
# aj-iv
# qa-gp
# nc-bw
# di-gp
# sc-ry
# vl-tx
# bw-dh
# rq-yd
# kw-vm
# fb-tk
# go-aq
# ro-ft
# nb-qw
# ef-jz
# dv-wt
# yi-ur
# jc-gy
# md-hi
# sv-oy
# gk-go
# hu-pb
# hh-gm
# zw-vg
# be-cj
# ic-su
# et-ws
# kl-yk
# zb-el
# dy-bi
# ja-rx
# ay-wl
# ms-kt
# ke-yb
# ry-sj
# nk-xz
# io-tl
# we-sc
# kf-zk
# ny-rf
# yb-bl
# ij-of
# jp-mq
# yx-lz
# xx-wy
# bl-bt
# hm-zt
# po-qz
# xh-pz
# tv-bq
# ml-tj
# rf-mp
# gk-wt
# vk-pw
# mm-uj
# bs-rm
# cp-gb
# kj-yq
# yu-cs
# sh-pm
# td-xo
# ku-qa
# ba-eb
# vb-hr
# im-gt
# gk-nm
# ht-ka
# ex-tm
# vq-qa
# rn-gy
# vb-vp
# fl-xj
# tx-ej
# gp-fc
# ef-ch
# nk-tf
# yj-bf
# mm-cu
# zv-ox
# gc-ud
# iy-is
# da-yp
# tv-so
# mb-ft
# vk-cs
# qy-td
# mz-vc
# ct-ed
# aj-kx
# iv-lq
# ck-nh
# cy-my
# fv-ll
# fn-dq
# xp-kq
# gy-as
# nm-dv
# tn-qh
# fi-mf
# ik-bx
# ab-vo
# ne-px
# ne-zr
# vb-ho
# dh-ty
# rq-ac
# za-bs
# gd-eu
# dk-oi
# fl-ry
# ox-jn
# iq-eg
# vg-nz
# ml-no
# lc-pf
# ja-do
# ne-rg
# bu-ll
# jw-by
# pq-kb
# vt-gf
# au-ys
# pw-ul
# lb-dk
# cu-us
# us-kt
# lw-ek
# di-mh
# vf-de
# tv-up
# ty-mr
# hr-zg
# ew-ro
# og-da
# in-qs
# wc-sm
# nm-vn
# qs-ag
# vd-te
# wn-wl
# yv-is
# zq-kq
# hz-mz
# cu-cg
# mf-ex
# ae-rw
# rs-qm
# mt-an
# cj-vv
# rr-zs
# rd-tt
# qc-rk
# pj-nm
# fl-ax
# gv-ly
# aj-lq
# xq-rb
# ih-mn
# ve-ca
# xc-mj
# jc-xm
# ae-gf
# vc-ii
# bh-tq
# pa-wi
# rj-wr
# ga-sw
# ni-tk
# vx-td
# tu-lv
# et-sb
# zu-vo
# bu-ab
# ks-ve
# ez-ga
# dq-jr
# hs-jp
# zg-ql
# kk-ol
# ob-ss
# be-ut
# zb-rs
# lp-av
# dy-ub
# vp-xy
# gf-rw
# vv-fr
# fj-rd
# vp-fz
# pe-xz
# mw-uv
# fp-oi
# ed-aj
# rr-kh
# tk-uw
# bf-vc
# wh-zp
# jm-cg
# al-fb
# gy-xm
# ma-dn
# ly-tf
# pi-cp
# rg-pu
# ym-im
# cj-rf
# pn-op
# lw-ke
# ov-wg
# xv-rh
# gt-yk
# zi-rm
# nc-ys
# gk-aq
# bh-ul
# sk-zf
# ka-zc
# ze-xa
# ys-ph
# na-jl
# ya-hc
# fp-lb
# mx-ui
# pr-jl
# yx-qo
# ou-zy
# xp-ft
# wc-se
# xi-xz
# lt-gd
# wg-uj
# ls-ob
# pq-ek
# jg-wk
# wg-lg
# yd-dc
# vo-bu
# lb-oi
# hr-uq
# af-ed
# ng-ft
# gd-lr
# pg-sr
# cm-kz
# mw-ea
# dn-le
# xx-wv
# zw-cn
# ii-nv
# rg-gu
# je-ve
# bh-og
# vu-mf
# oz-ym
# zv-bb
# vq-gp
# vo-fv
# fj-jw
# qv-jm
# oh-oz
# ls-qe
# bi-te
# fc-fu
# ye-zb
# gb-mr
# ki-su
# fu-gp
# pu-df
# xb-qj
# mq-sb
# rx-re
# pm-gr
# dc-xe
# zk-nh
# aw-ym
# lh-ob
# gf-td
# se-zs
# eu-cm
# mz-yj
# cb-gc
# os-gd
# pw-hu
# lo-on
# mu-wa
# cq-qv
# ij-do
# nt-au
# vq-rk
# gu-jq
# vu-eg
# np-ae
# vr-my
# gl-tp
# wo-xu
# rb-ji
# dv-zz
# kl-ay
# gu-rc
# cn-ff
# le-um
# mk-pr
# mu-zm
# ea-bv
# tx-lg
# xy-qq
# of-xa
# ls-ss
# pe-nk
# bw-mr
# pd-uo
# cy-it
# by-zo
# ag-ff
# kq-ft
# zy-ff
# et-at
# jw-lb
# gz-ac
# vn-hf
# zz-bx
# ut-wh
# vp-uq
# zh-al
# zp-ke
# rv-vx
# nz-as
# ro-to
# cb-wh
# zi-ad
# ms-mm
# sb-bu
# xf-oi
# lv-vf
# lv-rm
# vk-iu
# jw-dk
# af-iv
# kl-vj
# sf-rw
# qd-tk
# oj-gi
# rl-jf
# qe-ec
# it-vr
# gm-og
# sp-kz
# kf-te
# le-zp
# pv-jb
# qq-vb
# ti-zv
# bo-rp
# im-xt
# fb-wx
# yp-lh
# qe-hb
# vb-qj
# uj-cu
# yf-zp
# qu-qv
# hr-xy
# zl-sc
# zl-tp
# go-nm
# rf-be
# ml-om
# vj-hc
# hu-da
# ud-wh
# xc-yj
# sf-qb
# aq-dt
# ot-uv
# ct-zm
# vx-jz
# hi-ba
# og-ul
# xa-re
# od-at
# pi-ym
# cn-pe
# dj-bd
# mj-ii
# gu-hq
# kq-de
# cq-qu
# hf-yf
# pb-gm
# nb-bh
# gf-xo
# wo-li
# ca-kb
# rp-gl
# bb-zf
# gh-is
# sc-tp
# ui-jm
# su-le
# ox-zf
# gy-fw
# xu-ko
# qy-uv
# tt-gx
# zt-xq
# pa-yf
# di-vq
# ov-us
# bh-pb
# jf-jm
# ke-ve
# bm-vk
# at-kc
# xo-ae
# vo-im
# ni-wx
# gl-we
# kk-px
# ni-al
# ql-ry
# oz-aw
# hg-xg
# mp-fr
# hg-ei
# wr-rw
# io-of
# wc-ws
# ze-ij
# qf-vm
# ht-zt
# qq-hr
# ej-lg
# mx-jf
# by-ou
# my-rv
# qd-pv
# ks-kb
# rr-iw
# lg-ms
# al-tc
# yp-jq
# mf-iq
# ui-bl
# md-la
# ro-ng
# rr-et
# fi-lc
# rs-pm
# mb-kq
# ob-ik
# dg-ti
# ue-ll
# zu-sb
# ew-ga
# kf-pg
# hj-bm
# pv-uo
# bn-bs
# fc-sn
# kq-xr
# df-vl
# jw-rd
# ym-sm
# ix-xh
# bn-za
# cy-ch
# pw-hh
# zh-jb
# ne-pu
# sj-qp
# qd-wx
# rc-la
# jh-kc
# go-bq
# ol-la
# pc-au
# os-ei
# sk-wr
# ns-tv
# bi-nh
# ay-wn
# sh-gr
# rp-zl
# mh-gp
# fj-by
# ms-tx
# re-ij
# rq-pe
# zf-wn
# jz-cb
# kr-lt
# au-ph
# jp-ab
# oy-gi
# qo-xc
# do-lp
# iq-lc
# zw-zy
# cz-el
# dh-nt
# mr-au
# ar-pa
# eg-ex
# in-yi
# bf-bb
# lt-qt
# tv-gk
# kf-lk
# ol-rg
# vr-ef
# dt-wg
# iq-bu
# on-fe
# if-im
# nj-iy
# ah-uq
# tt-ns
# xy-nu
# oo-tv
# go-oo
# pi-oh
# da-nb
# lo-fe
# dn-su
# ui-fe
# ph-cp
# ys-ty
# lk-fc
# ze-lp
# kx-af
# pg-te
# ek-bl
# qt-eu
# wg-tx
# nz-qs
# mj-wl
# ad-tu
# qi-ys
# xj-tg
# pm-ye
# pc-nc
# uf-ic
# kw-dn
# hs-fv
# dl-go
# na-mk
# bt-lw
# zs-uv
# pl-iu
# kr-gy
# ic-oe
# pa-wh
# kp-wy
# ae-tn
# nm-dl
# vg-ag
# ei-ji
# yi-as
# rg-iu
# uo-al
# ap-ay
# et-sm
# on-rl
# qu-kk
# ua-fl
# ij-tl
# xg-ba
# dk-tt
# sm-kc
# uq-vb
# kw-ma
# hl-fn
# qf-bk
# ov-ej
# ly-uc
# rb-hm
# dv-oo
# gt-ra
# fq-rt
# gi-bm
# bx-ss
# xv-os
# ul-pb
# zm-nf
# mw-np
# kw-bk
# iw-wc
# tx-us
# we-iv
# ng-kq
# at-se
# kj-mf
# xk-eb
# bv-nu
# lq-ed
# qw-ui
# gc-ar
# pd-tk
# jv-iu
# cg-rl
# cn-ou
# kr-hl
# kf-vd
# uu-dq
# ox-wr
# it-jg
# eb-hg
# gz-rq
# sf-qy
# nq-rl
# pi-ez
# in-ur
# fl-bo
# ot-gf
# cj-xu
# bi-vd
# tg-hs
# sw-kq
# cj-mp
# lk-vq
# lx-aj
# yb-lw
# pd-qd
# ko-cj
# py-bf
# tc-pd
# ne-kk
# zi-lv
# ag-ur
# vo-mq
# nf-wv
# na-pe
# fv-jp
# qz-kx
# rd-fp
# yf-wi
# gd-kz
# li-xu
# zc-zt
# yr-el
# nb-yc
# co-lh
# xj-sk
# fw-rn
# uq-qq
# fz-ql
# xo-qb
# ni-gz
# gt-if
# dj-gr
# te-ck
# po-kx
# gi-sd
# xh-hc
# xh-ta
# ht-hm
# xg-eb
# uu-kz
# zf-zv
# cu-lg
# om-lm
# cs-oj
# vx-cy
# sd-vk
# xt-yk
# zn-zd
# ki-le
# cp-mr
# ro-sw
# xu-rc
# ty-gb
# wa-ct
# ub-kf
# rt-pa
# ax-jp
# in-zy
# lb-xf
# aw-xt
# pc-no
# ss-an
# kz-kr
# iq-pf
# sf-vt
# hk-mg
# ta-ho
# zs-jh
# tf-pe
# pi-xt
# qz-lq
# yr-rs
# ag-as
# nt-mr
# qv-te
# jz-vr
# jh-wc
# jn-dg
# vn-ud
# qf-um
# td-mw
# mn-rt
# ui-dl
# aa-mx
# to-zq
# ar-wi
# tu-bs
# gb-dh
# do-io
# hn-mz
# wo-rf
# lo-mx
# li-rf
# ss-ec
# qj-zg
# dt-us
# vp-qq
# lx-af
# zm-lz
# am-om
# pj-jg
# ba-hg
# bn-vf
# ys-bw
# lm-fv
# hf-gc
# qm-ye
# yc-ba
# cm-kr
# sd-oj
# ba-ih
# vt-el
# qf-su
# ng-zq
# pw-bh
# tc-qd
# tf-pr
# qt-dq
# aw-if
# jf-of
# af-pz
# ba-md
# wy-zm
# vu-yq
# gk-bq
# iy-bv
# eu-fn
# zl-qp
# tt-fj
# yx-wa
# uf-ma
# qm-gr
# tj-ea
# bs-ms
# ct-mu
# ep-wy
# gl-sj
# ef-it
# oh-gt
# qy-vt
# lg-us
# if-oh
# bx-cd
# jt-ty
# kk-vl
# fr-be
# yq-iq
# bb-lv
# hg-fq
# tp-dn
# zi-ts
# sj-tp
# cu-wg
# ye-mc
# np-qb
# nj-yv
# dh-ys
# ku-rk
# qf-uf
# qo-mz
# kh-zs
# mr-qi
# xk-hi
# ay-ta
# qc-gp
# qe-cd
# tx-id
# mt-ls
# oy-yu
# zd-gc
# yu-oj
# ff-nz
# hl-tl
# cu-ej
# pz-ya
# lp-io
# ct-yx
# ii-xc
# ix-wn
# gl-jh
# rb-zt
# ol-pu
# wu-lu
# qv-zk
# oe-ve
# sm-jh
# ep-kp
# ll-jp
# hq-nf
# ot-rw
# sd-iu
# gk-oo
# qo-py
# st-tu
# gb-ys
# ed-kx
# gh-nl
# bb-tg
# xt-if
# hb-ss
# yp-og
# xm-rn
# mt-ik
# ql-qj
# we-bo
# iw-zs
# rk-zg
# oz-ra
# hc-pz
# ik-ss
# df-zr
# eu-lt
# ol-px
# we-zl
# yv-kl
# ua-tp
# xk-ba
# hs-ab
# np-xo
# xp-ew
# id-ej
# ul-hu
# sj-zl
# cq-vd
# dl-gk
# gc-zn
# lu-jc
# vv-rf
# bm-pl
# we-ua
# fn-lr
# ix-ho
# wr-ti
# np-rw
# cs-jv
# sn-fu
# im-oz
# xt-ym
# je-ca
# gb-au
# id-us
# if-tj
# nq-lv
# vf-st
# hl-dq
# px-rg
# pu-zr
# ft-ga
# ra-vi
# zl-bo
# du-lw
# na-yd
# yf-do
# vd-nh
# kq-cs
# vx-mg
# wi-vn
# li-cj
# ei-zc
# qb-xb
# dj-or
# qp-ua
# ls-hb
# lt-cm
# et-iw
# ku-di
# ly-jc
# by-rd
# jn-xt
# cb-yf
# zd-kt
# se-bw
# xj-wr
# ki-ic
# yj-mj
# gr-cz
# vd-ck
# mm-ov
# wg-mm
# ek-ks
# ry-ua
# le-bk
# vg-yi
# hl-cm
# fl-rp
# ul-ll
# mb-ro
# mr-ph
# mg-jz
# in-ag
# bw-ty
# xx-hq
# ua-sc
# ij-rx
# hm-lp
# mn-ba
# nt-ji
# uc-jc
# dq-eu
# kf-xf
# pv-ni
# oy-oj
# ye-gr
# tu-ss
# ra-yk
# rc-kk
# ti-zf
# qy-mw
# jh-se
# ch-jz
# kc-et
# zm-nl
# dc-li
# ks-ls
# eb-ih
# xe-rf
# am-ea
# hg-rt
# pn-ih
# jr-uu
# ys-pc
# ou-nz
# bv-tj
# rq-tf
# vp-zg
# zh-uw
# jg-rv
# eg-tm
# fs-ed
# fp-uw
# om-no
# tx-uj
# zd-ud
# lu-gv
# by-fp
# qp-gl
# cy-vr
# tj-no
# xo-rw
# nz-ag
# ta-ix
# ik-cd
# ec-lg
# rr-od
# op-tt
# ez-gt
# tu-zi
# gt-pi
# rk-mh
# bm-iu
# wa-wy
# vi-oh
# du-yb
# nt-nc
# gx-fj
# bv-is
# zh-tk
# dg-xy
# bs-zi
# rr-jh
# zh-pv
# qb-ot
# ss-zz
# qz-vi
# sf-xo
# sv-pl
# yc-tq
# pz-ta
# ix-jd
# iw-pm
# df-ne
# qj-nu
# yr-sh
# jw-xf
# el-rs
# pb-yc
# qh-aj
# fz-sb
# qv-kf
# as-zy
# ic-id
# wx-al
# za-vf
# oj-pr
# gh-no
# rd-oi
# ur-cn
# hq-zm
# dh-qq
# ov-tx
# bo-ry
# uv-np
# dk-zo
# el-dj
# tn-iv
# rp-qp
# re-xm
# ti-jt
# ue-mq
# mm-tx
# xj-jn
# ad-ts
# cz-dj
# lp-ij
# ym-if
# ro-kq
# ut-aa
# pn-xg
# vc-nv
# od-rj
# wv-kp
# bo-ax
# vv-be
# fi-kj
# ud-hf
# xm-fw
# yp-nb
# xh-mr
# cg-ut
# kb-ve
# xe-wo
# ku-es
# zd-zp
# st-sp
# dg-sk
# kz-eu
# kb-bt
# po-aj
# uw-al
# lq-kx
# wi-ud
# ql-ah
# ef-mg
# in-fi
# ts-sp
# of-ri
# bl-ks
# ax-ua
# zy-ur
# tf-xi
# sp-rm
# lp-tl
# tg-ti
# xm-co
# zy-ag
# xw-yj
# ol-rc
# as-qs
# jl-tf
# gu-zr
# hj-sv
# lk-gp
# ex-hh
# vg-ou
# rs-gr
# vj-wl
# rf-ko
# ll-zu
# lc-kj
# hr-nu
# qu-bi
# iv-kx
# fq-op
# xh-vj
# ol-jq
# zn-wh
# iq-ex
# kw-ri
# pn-fw
# qz-af
# bt-yb
# iw-kc
# ri-ja
# aw-pi
# mk-xi
# sr-ex
# og-hh
# rm-ad
# vx-wk
# fr-xu
# xe-li
# ut-jf
# tl-xa
# yu-pl
# ni-zh
# xv-zc
# if-oz
# qp-bo
# jc-gv
# vf-zi
# pg-ck
# gv-uc
# mc-cz
# nk-na
# tl-re
# om-tj
# dc-cj
# zt-ji
# an-ob
# qm-yr
# be-wo
# cu-id
# vp-qj
# lk-qc
# pm-zb
# fc-es
# mj-bf
# qz-tn
# tm-pf
# in-ff
# ls-zz
# bq-dv
# jz-wk
# jp-vo
# xw-zu
# uo-wx
# nj-gh
# ag-ou
# nc-mr
# pr-xi
# nr-ut
# nj-am
# zz-an
# jr-my
# vb-xy
# cz-qm
# pq-du
# rn-zo
# sj-fl
# wa-nf
# jw-tt
# oz-vi
# gx-fp
# rr-sm
# uf-oe
# jv-vk
# av-ij
# ml-bv
# wl-kl
# ku-vq
# dl-dv
# uu-eu
# fl-tp
# zd-ar
# mg-jg
# ui-jf
# hl-lr
# ad-lv
# qs-xe
# zu-jd
# ws-rr
# bq-fu
# tg-sk
# de-ng
# do-of
# zc-hm
# ht-xv
# jh-od
# hq-yx
# mf-wj
# vl-ne
# in-nz
# yd-nk
# xe-ko
# ns-ht
# ot-sf
# hz-xc
# nf-wy
# qy-rw
# fu-vq
# gm-bh
# qy-ab
# ho-ya
# qi-np
# ht-rh
# of-ja
# px-jq
# kc-rr
# zo-gx
# ro-zq
# of-rx
# nh-ej
# ax-rp
# pw-pb
# df-ol
# tq-hh
# rj-ti
# zm-xx
# gf-uv
# gm-pw
# xk-fq
# jf-fe
# bk-su
# gx-jw
# aj-af
# pn-ba
# di-lk
# jd-bu
# hs-ll
# nk-rq
# ij-ja
# np-qy
# ko-dc
# od-kh
# hl-gd
# xe-fr
# mw-qb
# gt-vi
# lk-qa
# hq-wy
# my-jg
# rv-mk
# tk-pv
# pe-pr
# cg-qw
# nb-pw
# mj-py
# ck-tn
# tl-do
# gd-qt
# hh-ul
# bo-gl
# jl-gz
# yr-gr
# zc-os
# sd-oy
# rj-tg
# it-jz
# wo-za
# hg-md
# rx-io
# we-qp
# ar-zn
# ve-bl
# ma-bk
# xc-bf
# ah-vp
# bv-nl
# nm-oo
# kp-hq
# ji-rh
# eb-md
# zw-nz
# tq-da
# lo-tk
# qu-ub
# ix-ya
# sd-sv
# kh-et
# gd-kr
# ka-zt
# an-hb
# rt-ih
# nj-no
# lm-mq
# hz-yr
# ao-xm
# be-xe
# tm-fi
# pg-dy
# yx-ep
# at-wc
# jm-nr
# ud-zn
# gl-sc
# jq-ne
# ab-ll
# rl-aa
# te-nh
# qa-es
# je-pq
# sh-mc
# vd-qv
# wx-tc
# mw-rw
# tm-kj
# gi-sv
# iq-tm
# fe-nr
# ab-lm
# pa-zd
# fq-pn
# tr-fp
# xw-vc
# vb-ql
# aa-ui
# lq-lx
# fz-qj
# ix-wa
# fe-aa
# cd-hk
# zd-wi
# vc-xc
# on-jm
# ph-qi
# ox-jt
# vf-sp
# dq-lr
# ub-nh
# mn-md
# to-sw
# wx-pd
# ay-gc
# ki-vm
# dv-gk
# ii-bf
# rd-zo
# rn-ly
# oh-aw
# xb-vb
# ew-zq
# lr-eu
# na-di
# wr-dg
# qm-or
# es-fu
# qt-kr
# os-ji
# ml-iy
# ec-cd
# ao-rn
# as-in
# ks-ca
# lk-fu
# zw-in
# ew-ka
# lk-es
# pj-so
# jt-bb
# sd-jv
# at-jh
# is-no
# zz-cd
# ka-xv
# zt-ei
# zn-zp
# lu-xm
# yk-pi
# se-et
# md-fq
# cb-ud
# za-zi
# id-lg
# be-ny
# eb-mn
# qf-tc
# qe-bx
# oz-pi
# an-bx
# tl-ze
# fw-lu
# if-pi
# ez-ra
# sw-xr
# kk-df
# no-ea
# hi-mn
# ea-yv
# up-aq
# fp-xf
# ep-lz
# jg-hk
# oz-ez
# mk-rq
# yd-mk
# yp-hh
# hi-hg
# xb-ah
# oj-bm
# an-cd
# lr-uu
# tm-yq
# ml-nj
# md-op
# cy-zy
# ne-la
# aa-lo
# ah-nu
# pz-vj
# fz-xb
# gr-el
# ub-qv
# uc-rn
# af-fs
# aa-qw
# vg-ur
# yj-qo
# xz-jl
# fb-jb
# mb-xp
# dn-qf
# hl-qt
# xu-dc
# ch-jg
# tr-lb
# yv-tj
# nr-ui
# hr-ah
# vp-hr
# px-pu
# li-be
# nb-hh
# hj-oj
# al-jb
# xj-rj
# hi-ih
# nz-yi
# al-qd
# av-of
# pf-sr
# jn-wr
# kl-ap
# aq-pj
# ho-ap
# ui-on
# pj-dl
# oz-xt
# xj-jt
# lc-vu
# fq-ba
# du-ek
# lh-rn
# rc-px
# rd-gx
# tr-ol
# uo-uw
# yq-pf
# gh-nv
# ro-de
# ho-wl
# bi-cq
# pq-lw
# qp-ry
# qt-kz
# no-am
# pm-qm
# ka-hm
# xq-ei
# ek-kb
# ba-rt
# gf-mw
# ny-mp
# zu-fv
# og-nb
# ma-oe
# ny-vv
# fv-jd
# nt-ty
# fl-sc
# lh-fw
# mj-hn
# lu-co
# uv-ae
# hl-lt
# bt-pq
# or-sh
# ur-as
# po-lq
# mp-li
# pg-vd
# hn-vc
# ac-xi
# zw-as
# nc-ph
# ct-kp
# cg-jf
# nt-pc
# se-qj
# op-hg
# ql-nu
# kp-lz
# or-xx
# rc-vl
# nh-qv
# ne-ol
# ez-yk
# gu-df
# uo-zh
# ox-bb
# rs-ye
# mz-bf
# lh-lu
# qs-vg
# je-ks
# lb-zo
# du-kb
# ae-qb
# sp-tu
# we-ax
# qh-po
# yr-or
# jc-ao
# yu-bm
# zw-ff
# wu-rn
# ws-at
# zw-ne
# fn-cm
# ur-ou
# bu-lm
# fs-qh
# xy-ql
# fr-dc
# tr-oi
# nl-iy
# la-jq
# om-nl
# aa-cg
# mm-kh
# jw-fp
# ws-kc
# pc-ty
# yb-ek
# ot-qy
# dl-zh
# ga-ng
# fs-lx
# wh-vn
# oh-yk
# wi-gc
# ym-yk
# fl-qp
# su-oe
# kh-wc
# ep-xx
# hn-xc
# ng-ew
# tx-cu
# ew-de
# hg-xk
# zz-qe
# iy-am
# up-wt
# ur-zw
# wh-yf
# xz-tm
# as-cn
# rw-uv
# hg-pn
# pn-md
# du-bl
# uu-ar
# aw-vi
# lz-ot
# de-ga
# zh-tc
# bf-nv
# wl-ix
# gz-yd
# xf-dk
# wi-cb
# uj-of
# gp-df
# ex-vu
# nr-lo
# ly-gy
# vg-xo
# nj-nl
# vr-rv
# pu-la
# mj-mz
# vx-ch
# rr-se
# hm-ji
# rv-jz
# nr-vq
# zc-xq
# sf-np
# um-su
# yj-py
# ot-td
# de-xr
# ch-wk
# pr-na
# mk-tf
# je-lw
# rx-do
# dk-fp
# gd-uu
# cu-dt
# xr-ga
# cs-iu
# hs-zu
# um-ma
# lh-jc
# jq-vl
# uw-tc
# om-nj
# lb-rd
# te-zk
# hz-xw
# bx-ec
# zm-ep
# pb-tq
# vk-yu
# uo-tk
# ms-us
# zy-qs
# au-sc
# wy-lz
# ub-xi
# pl-vk
# do-ze
# wj-kj
# od-ws
# ih-md
# pu-vl
# vu-sr
# le-uf
# al-gu
# na-ac
# oe-kw
# pw-lb
# mu-kp"""

# # data="""kh-tc
# # qp-kh
# # de-cg
# # ka-co
# # yn-aq
# # qp-ub
# # cg-tb
# # vc-aq
# # tb-ka
# # wh-tc
# # yn-cg
# # kh-ub
# # ta-co
# # de-co
# # tc-td
# # tb-wq
# # wh-td
# # ta-ka
# # td-qp
# # aq-cg
# # wq-ub
# # ub-vc
# # de-ta
# # wq-aq
# # wq-vc
# # wh-yn
# # ka-de
# # kh-ta
# # co-tc
# # wh-qp
# # tb-vc
# # td-yn"""

# data=data.split('\n')
# dataSet=set(data)
# data=[x.split('-') for x in data]
# adjList={}

# for i in data:
#     if i[0] not in adjList:
#         adjList[i[0]]=set()
#     adjList[i[0]].add(i[1])
#     if i[1] not in adjList:
#         adjList[i[1]]=set()
#     adjList[i[1]].add(i[0])
# # print(adjList['cg'])
# ans=set()    
# for i,lis in adjList.items():
#     if i[0]!='t':
#         continue
#     l=list(lis)
#     for j in range(len(l)):
#         for k in range(j+1,len(l)):
#             if l[k]+'-'+l[j] in dataSet or l[j]+'-'+l[k] in dataSet:
#                 ans.add(",".join(sorted([l[k],l[j],i])))
# # print(sorted(list(ans)))  
# print(len(ans))

# #part 2
# adjList=defaultdict(set)
# adminLen=0
# computers=set()
# for s in ans:
#     s=s.split(',')
    
#     adjList[s[0]].add(s[1])
#     adjList[s[0]].add(s[2])
#     adjList[s[1]].add(s[0])
#     adjList[s[1]].add(s[2])
#     adjList[s[2]].add(s[0])
#     adjList[s[2]].add(s[1])
    
# computers=list(computers)
# # while True:
# #     d={}
# #     for i in range(len(computers)):
# #         for j in range(i+1,len(computers)):
# #             if computers[i]+'-'+computers[j] in dataSet or computers[j]+'-'+computers[i] in dataSet:
# #                 if computers[i] not in d:
# #                     d[computers[i]]=set()
# #                 d[computers[i]].add(computers[j])
# #                 if computers[j] not in d:
# #                     d[computers[j]]=set()
# #                 d[computers[j]].add(computers[i])
# #     mi=float("inf")
# #     mx=float("-inf")
# #     purge=""
# #     for i,lis in d.items():
# #         if len(lis)<mi:
# #             mi=len(lis)
# #             purge=i
# #         mx=max(mx,len(lis))
# #     if mi==mx:
# #         print(d)
# #         break
# #     computers.remove(purge)
    
# # ans=list(computers)
# # print(mi)
# # ans=",".join(sorted(ans))
# # print(ans)

# memo=set()
# def search(n,curr):
#     key=tuple(sorted(curr))
#     if key in memo:
#         return 
#     memo.add(key)
#     for nei in adjList[n]:
#         if nei in curr:continue
#         if not (curr<=adjList[nei]):continue
#         search(nei,curr | {nei})


# for c in adjList.keys():
#     search(c,{c})
# print(memo)
# print(",".join(max(memo, key=len)))

# day 24

# from collections import defaultdict
# from copy import deepcopy


# data="""x00: 1
# x01: 0
# x02: 1
# x03: 1
# x04: 0
# x05: 0
# x06: 1
# x07: 1
# x08: 0
# x09: 1
# x10: 1
# x11: 1
# x12: 1
# x13: 1
# x14: 1
# x15: 1
# x16: 0
# x17: 1
# x18: 1
# x19: 1
# x20: 0
# x21: 0
# x22: 1
# x23: 0
# x24: 1
# x25: 1
# x26: 0
# x27: 1
# x28: 1
# x29: 1
# x30: 1
# x31: 1
# x32: 0
# x33: 0
# x34: 0
# x35: 1
# x36: 0
# x37: 1
# x38: 0
# x39: 0
# x40: 0
# x41: 0
# x42: 1
# x43: 1
# x44: 1
# y00: 1
# y01: 0
# y02: 0
# y03: 1
# y04: 1
# y05: 0
# y06: 0
# y07: 0
# y08: 0
# y09: 0
# y10: 0
# y11: 1
# y12: 0
# y13: 0
# y14: 1
# y15: 0
# y16: 0
# y17: 0
# y18: 0
# y19: 1
# y20: 0
# y21: 1
# y22: 1
# y23: 0
# y24: 0
# y25: 0
# y26: 0
# y27: 0
# y28: 0
# y29: 1
# y30: 1
# y31: 0
# y32: 0
# y33: 1
# y34: 1
# y35: 0
# y36: 0
# y37: 0
# y38: 0
# y39: 0
# y40: 1
# y41: 1
# y42: 1
# y43: 0
# y44: 1

# x41 XOR y41 -> twk
# qpf XOR gqf -> z17
# y22 XOR x22 -> qhv
# pmc XOR gsj -> z09
# fqf AND rfm -> gvs
# bsv OR rjn -> sgf
# y44 AND x44 -> jth
# y07 AND x07 -> tcs
# ssf OR khd -> qqr
# y11 XOR x11 -> dpd
# qqr XOR bps -> z28
# y39 AND x39 -> mgj
# y32 XOR x32 -> wjn
# wpq OR kpd -> ttj
# pmw XOR nkv -> z26
# kts AND mbb -> cfr
# smm XOR pnh -> z20
# y27 AND x27 -> khd
# x16 XOR y16 -> mdk
# y05 AND x05 -> mqf
# y12 AND x12 -> bcg
# dpb AND hvf -> dbg
# hpg AND krq -> brp
# x15 AND y15 -> wrn
# bhd OR gjg -> vcn
# mjf AND mrr -> hnp
# ddq AND csn -> ssn
# krq XOR hpg -> z12
# vdm XOR qhv -> z22
# x04 AND y04 -> qbn
# y03 XOR x03 -> gsr
# y05 XOR x05 -> rdw
# y06 XOR x06 -> frf
# pmw AND nkv -> vdp
# qtc XOR hgh -> z14
# cfr OR pww -> fsn
# dqp XOR brk -> z11
# vdm AND qhv -> sbj
# ddq XOR csn -> z02
# x23 AND y23 -> gjg
# cqr AND nhb -> fdf
# x38 AND y38 -> z38
# qtc AND hgh -> kdb
# nwf OR jth -> z45
# y29 XOR x29 -> nhb
# y37 AND x37 -> nhv
# wjn XOR cbw -> z32
# cnm OR kdb -> nhw
# x07 XOR y07 -> kwn
# y28 XOR x28 -> bps
# y01 AND x01 -> kkp
# y33 AND x33 -> rsb
# y40 AND x40 -> jcd
# stm OR vdp -> trb
# dhg AND kwn -> pvc
# twk XOR smp -> z41
# cbw AND wjn -> sjw
# cwp OR wjj -> dqp
# vcn AND grp -> dhd
# x30 AND y30 -> pww
# nvf OR jvk -> z06
# jpc OR cjd -> mjh
# x32 AND y32 -> vtc
# dpd OR cgn -> krq
# ttj AND fkh -> hsv
# ntc XOR twj -> z37
# dqp AND brk -> cgn
# x25 XOR y25 -> wcb
# twk AND smp -> prv
# htq XOR hfd -> z13
# vkf AND trb -> ssf
# kwn XOR dhg -> z07
# wrn OR brq -> vpw
# y18 XOR x18 -> rdr
# sgf AND ckp -> vft
# x00 AND y00 -> fhd
# scp OR fnj -> vdm
# vpw AND mdk -> vpt
# y41 AND x41 -> mvd
# y34 AND x34 -> fkp
# y21 AND x21 -> fnj
# x25 AND y25 -> qqq
# y08 XOR x08 -> cbg
# pmt OR rsb -> qsj
# pkq OR nqb -> cbw
# qqq OR wng -> pmw
# y21 XOR x21 -> cqh
# jgm AND tng -> jbk
# y20 AND x20 -> wnv
# bff OR sbj -> fmm
# ktj AND qsj -> pws
# rdw AND jmc -> jpw
# tgw AND dbp -> vms
# y06 AND x06 -> nvf
# x26 AND y26 -> stm
# jrm XOR mjk -> z44
# y26 XOR x26 -> nkv
# y43 XOR x43 -> mrr
# hfd AND htq -> jwg
# y33 XOR x33 -> vrp
# mtp OR fgw -> gsj
# y09 AND x09 -> cpf
# brp OR bcg -> htq
# y12 XOR x12 -> hpg
# y40 XOR x40 -> rfm
# y38 XOR x38 -> dfg
# sgf XOR ckp -> z04
# x17 XOR y17 -> gqf
# y42 XOR x42 -> gmb
# jvs XOR fsn -> z31
# qsj XOR ktj -> z34
# mmj AND cqh -> scp
# qwk AND cbg -> fgw
# dhd OR csr -> vks
# y03 AND x03 -> rjn
# mjf XOR mrr -> z43
# y36 AND x36 -> gkv
# gqf AND qpf -> jpc
# wcb AND vks -> wng
# x29 AND y29 -> tgg
# cmb AND fmm -> z23
# wcb XOR vks -> z25
# rdr AND mjh -> kpd
# x34 XOR y34 -> ktj
# y02 XOR x02 -> ddq
# rfw OR vms -> tng
# x31 AND y31 -> pkq
# sqt XOR gmb -> z42
# frf XOR mmp -> dhg
# y10 XOR x10 -> cfw
# x14 XOR y14 -> hgh
# pws OR fkp -> dbp
# x22 AND y22 -> bff
# grp XOR vcn -> z24
# y36 XOR x36 -> jgm
# y13 XOR x13 -> hfd
# y35 XOR x35 -> tgw
# x14 AND y14 -> cnm
# fmm XOR cmb -> bhd
# prv OR mvd -> sqt
# x39 XOR y39 -> dpb
# nhv OR pjh -> nfb
# y20 XOR x20 -> pnh
# gtf OR cpf -> dds
# jjg OR kkp -> csn
# y16 AND x16 -> hnb
# vkf XOR trb -> z27
# x23 XOR y23 -> cmb
# x09 XOR y09 -> pmc
# pfm XOR nhw -> z15
# y28 AND x28 -> hkm
# tng XOR jgm -> z36
# fhd AND hbw -> jjg
# vtc OR sjw -> mtd
# rtr OR jwh -> mjf
# y24 XOR x24 -> grp
# gkv OR jbk -> ntc
# pvc OR tcs -> qwk
# mtd AND vrp -> pmt
# hnb OR vpt -> qpf
# y11 AND x11 -> brk
# ssn OR jns -> hct
# x19 AND y19 -> mss
# x01 XOR y01 -> hbw
# y00 XOR x00 -> z00
# fqf XOR rfm -> z40
# hkm OR cqq -> cqr
# x13 AND y13 -> fjs
# x17 AND y17 -> cjd
# x24 AND y24 -> csr
# x37 XOR y37 -> twj
# hvf XOR dpb -> z39
# smm AND pnh -> cbq
# mtd XOR vrp -> z33
# x10 AND y10 -> cwp
# qwk XOR cbg -> z08
# cfw XOR dds -> z10
# bps AND qqr -> cqq
# mbb XOR kts -> z30
# cdj OR nbf -> hvf
# y31 XOR x31 -> jvs
# gsj AND pmc -> gtf
# x18 AND y18 -> wpq
# cfw AND dds -> wjj
# mjh XOR rdr -> z18
# hct AND gsr -> bsv
# vft OR qbn -> jmc
# jrm AND mjk -> nwf
# x35 AND y35 -> rfw
# nfb XOR dfg -> nbf
# jvs AND fsn -> nqb
# x08 AND y08 -> mtp
# y30 XOR x30 -> mbb
# y19 XOR x19 -> fkh
# mmj XOR cqh -> z21
# jcd OR gvs -> smp
# sqt AND gmb -> rtr
# hbw XOR fhd -> z01
# y44 XOR x44 -> jrm
# x43 AND y43 -> sjk
# rdw XOR jmc -> z05
# y04 XOR x04 -> ckp
# x42 AND y42 -> jwh
# y15 XOR x15 -> pfm
# mmp AND frf -> jvk
# hsv OR mss -> smm
# x02 AND y02 -> jns
# cqr XOR nhb -> z29
# fjs OR jwg -> qtc
# fkh XOR ttj -> z19
# nhw AND pfm -> brq
# wnv OR cbq -> mmj
# dbp XOR tgw -> z35
# mgj OR dbg -> fqf
# hct XOR gsr -> z03
# tgg OR fdf -> kts
# x27 XOR y27 -> vkf
# hnp OR sjk -> mjk
# vpw XOR mdk -> z16
# mqf OR jpw -> mmp
# twj AND ntc -> pjh
# nfb AND dfg -> cdj"""

# state,logic=data.split('\n\n')
# state = state.split('\n')
# state = {x.split(':')[0].strip():x.split(':')[1].strip()=='1' for x in state}
# state2 = deepcopy(state)
# logic = logic.split('\n')
# logic = [x.split('->') for x in logic]
# logic = {x[1].strip():tuple(x[0].strip().split(' ')) for x in logic}

# # print(logic)
# # s2=set()
# # for z,ev in logic.items():
# #     s2.add(ev[0])
# #     s2.add(ev[2])
# #     s2.add(z)
# # # # dhg,z06
# # logic['z06'],logic['dhg']=logic['dhg'],logic['z06']
# # # # brk,dpd
# # logic['dpd'],logic['brk']=logic['brk'],logic['dpd']
# # # #z23,bhd
# # logic['bhd'],logic['z23']=logic['z23'],logic['bhd']

# result=set()
# maxz=45

# def gateVal(gate):
#     if gate in state:return state[gate]
#     ev=logic[gate]
#     ans=False
#     if ev[1]=='AND':ans = gateVal(ev[0]) and gateVal(ev[2])
#     elif ev[1]=='OR':ans = gateVal(ev[0]) or gateVal(ev[2])
#     elif ev[1]=='XOR':ans = gateVal(ev[0])^gateVal(ev[2])
#     state[gate]=ans
#     return ans
# def progress():
#     c=0   
#     for z in range(maxz+1):
#         zn=0
#         xn=0
#         yn=0
#         if (z>9 and gateVal('z'+str(z))) or (z<=9 and gateVal('z0'+str(z))):
            
#             zn =1
#         if z!= maxz and ((z>9 and gateVal('x'+str(z))) or (z<=9 and gateVal('x0'+str(z)))):
            
#             xn =1
#         if z!= maxz and ((z>9 and gateVal('y'+str(z))) or (z<=9 and gateVal('y0'+str(z)))):        
#             yn =1
#         a=xn^yn^c
#         c=(xn and yn) or (xn and c) or (yn and c)
#         check=zn==a
#         # print('z:{z} x:{xn} y:{yn} c:{c} z:{zn} a:{a} check:{check}'.format(z=z,xn=xn,yn=yn,zn=zn,c=c,a=a,check=check))
#         if not check:
#             return z
#         # return 45

# keys=list(logic.keys())
# for _ in range(4):
#     baseline=progress()
#     for i in range(len(keys)):
#         flag=False
#         for j in range(i+1,len(keys)):
#             if keys[i] in result or keys[j] in result or keys[j] in logic[keys[i]] or keys[i] in logic[keys[j]]:
#                 continue
#             state=deepcopy(state2)
#             logic[keys[i]],logic[keys[j]]=logic[keys[j]],logic[keys[i]]
#             # ans=0
#             # s=set()

#             # ax=0
#             # ay=0
#             # for z in range(maxz,-1,-1):
#             #     ans<<=1
#             #     ax<<=1
#             #     ay<<=1
                
#             #     if (z>9 and gateVal('z'+str(z))) or (z<=9 and gateVal('z0'+str(z))):
                    
#             #         ans|=1
#             #     if z!= maxz and ((z>9 and gateVal('x'+str(z))) or (z<=9 and gateVal('x0'+str(z)))):
                    
#             #         ax|=1
#             #     if z!= maxz and ((z>9 and gateVal('y'+str(z))) or (z<=9 and gateVal('y0'+str(z)))):
                    
#             #         ay|=1
#             # if ans==ax+ay:
#             #     print(keys[i],keys[j])
#             #     break
#             # print(state)
#             # print(ans,ax,ay,ax+ay,ans==ax+ay)
#             print(baseline,keys[i],keys[j])
#             try:
#                 if progress()>baseline:
#                     print(keys[i],keys[j])
#                     result.add(keys[i])
#                     result.add(keys[j])
#                     flag=True
#                     break
#             except:
#                 pass
            
#             logic[keys[i]],logic[keys[j]]=logic[keys[j]],logic[keys[i]]
#         if flag:
#             break

# print(",".join(sorted(result)))

# # for z in range(maxz,-1,-1):
# #     zn=0
# #     xn=0
# #     yn=0
# #     if (z>9 and gateVal('z'+str(z))) or (z<=9 and gateVal('z0'+str(z))):
        
# #         zn =1
# #     if z!= maxz and ((z>9 and gateVal('x'+str(z))) or (z<=9 and gateVal('x0'+str(z)))):
        
# #         xn =1
# #     if z!= maxz and ((z>9 and gateVal('y'+str(z))) or (z<=9 and gateVal('y0'+str(z)))):
        
# #         yn =1
# #     print(z,zn,xn,yn)



# def printdep(x,depth=0):
#     if x in logic:
#         print(' |'*depth,x,logic[x])
#         printdep(logic[x][0],depth+1)
#         printdep(logic[x][2],depth+1)
        
# # printdep('z06')
# # printdep('z07')
# # printdep('z08')
# # printdep('z02')
# # printdep('z11')
# # printdep('z12')
# # printdep('z13')
# # printdep('z14')

# # printdep('z23')
# # printdep('z24')
# # printdep('z25')
# # printdep('z26')
    
    
# # printdep('z26')
# # printdep('z08')
# # printdep('z04')

# # for i in range(maxz+1):
# #     if i<10:
# #         printdep('z0'+str(i))
# #     else:
# #         printdep('z'+str(i))

# # print(s-s2)
# # d=defaultdict(list)
# # for z,ev in logic.items():
# #     d[ev].append(z)
# #     t=tuple(ev[::-1])
# #     d[t].append(z)
# # # print(d)  
# # for k,v in d.items():
# #     if len(v)>1:
# #         print(k,v)

# #Life is overoptimized for day 24 part2 got the correct answer with just 3 swaps, not sure which swap Ineed to do to make it 4 tried few things didn't work leaving at that.
# Tried again with stupid brute force code was going in infinite recurrsion still didn't give correct answer
# #day 25

# data=""".....
# .....
# ..#..
# .###.
# ####.
# #####
# #####

# .....
# .#...
# .#...
# .##..
# .###.
# ####.
# #####

# #####
# #####
# #.###
# #..##
# #..##
# ...#.
# .....

# #####
# #.#.#
# #.#.#
# .....
# .....
# .....
# .....

# .....
# ...#.
# #..#.
# #..##
# #..##
# ##.##
# #####

# #####
# #####
# #.###
# #.###
# #.#.#
# #...#
# .....

# #####
# .####
# .##.#
# .##.#
# .#...
# .#...
# .....

# #####
# ##.##
# .#.#.
# .#.#.
# .#.#.
# .#.#.
# .....

# .....
# .#.#.
# .###.
# .####
# .####
# #####
# #####

# .....
# ..#..
# ..#..
# #.#.#
# ###.#
# #####
# #####

# #####
# .#.##
# .#.#.
# .#.#.
# ...#.
# ...#.
# .....

# #####
# #####
# ##.##
# ##.#.
# .#...
# .....
# .....

# .....
# ....#
# ....#
# #...#
# #.#.#
# #.#.#
# #####

# #####
# #####
# .####
# ..###
# ..##.
# ..#..
# .....

# .....
# ...#.
# #..#.
# ##.##
# ##.##
# #####
# #####

# .....
# ..#..
# ..#.#
# ..#.#
# #.###
# #####
# #####

# .....
# ....#
# ....#
# #.#.#
# ###.#
# ###.#
# #####

# #####
# ##.##
# .#.##
# ...##
# ...#.
# ...#.
# .....

# .....
# ...#.
# #.##.
# #.##.
# #.##.
# #.##.
# #####

# #####
# ###.#
# .##.#
# .##.#
# .#..#
# ....#
# .....

# #####
# #####
# .####
# ..###
# ..#.#
# ....#
# .....

# .....
# .....
# #..#.
# #..##
# ##.##
# ##.##
# #####

# .....
# ..#..
# ..#..
# ..#.#
# .##.#
# .##.#
# #####

# .....
# ....#
# #..##
# #..##
# #.###
# #.###
# #####

# .....
# ...#.
# .#.#.
# .#.#.
# .####
# #####
# #####

# #####
# #.###
# #.#.#
# #.#.#
# ..#..
# .....
# .....

# .....
# .#...
# .#..#
# .#..#
# ###.#
# ###.#
# #####

# .....
# ...#.
# ...#.
# ...#.
# #..#.
# #.###
# #####

# .....
# .....
# .....
# .#.#.
# .#.#.
# .#.#.
# #####

# #####
# ##.##
# .#.##
# .#.##
# .#..#
# ....#
# .....

# .....
# .#...
# .#..#
# ##..#
# ###.#
# #####
# #####

# .....
# .....
# ...#.
# #..#.
# #..##
# ##.##
# #####

# .....
# #.#..
# #.#..
# #.##.
# #.##.
# ####.
# #####

# #####
# #.#.#
# ..#.#
# ..#.#
# ..#.#
# ..#.#
# .....

# .....
# .....
# .....
# #....
# #.#.#
# ###.#
# #####

# .....
# ...#.
# ...##
# ...##
# ...##
# #.###
# #####

# .....
# .....
# .....
# .#..#
# .#..#
# ##.##
# #####

# .....
# .....
# ..#..
# ..#..
# .##..
# .##.#
# #####

# #####
# ###.#
# ###.#
# ##..#
# #...#
# .....
# .....

# #####
# ###.#
# ###.#
# ###.#
# ##...
# .#...
# .....

# .....
# #....
# #..#.
# ##.##
# #####
# #####
# #####

# #####
# #####
# ###.#
# ###.#
# #.#.#
# #.#.#
# .....

# .....
# .....
# .#...
# .##..
# .##..
# .##.#
# #####

# .....
# #.#..
# #.#..
# #.#..
# #.#..
# ####.
# #####

# #####
# #####
# .####
# .##.#
# .##..
# ..#..
# .....

# .....
# .....
# #...#
# #.#.#
# #.#.#
# #.###
# #####

# .....
# .....
# ...#.
# .#.#.
# .#.#.
# .#.#.
# #####

# .....
# .....
# ..#..
# #.#..
# #.#..
# ###.#
# #####

# #####
# ###.#
# ###.#
# ###.#
# .##..
# .#...
# .....

# .....
# #.#..
# #.#.#
# #.#.#
# ###.#
# #####
# #####

# .....
# .....
# .....
# ...#.
# .#.#.
# .###.
# #####

# #####
# .#.##
# .#.##
# .#.#.
# .#.#.
# .#.#.
# .....

# .....
# ..#.#
# #.#.#
# #.#.#
# #.#.#
# #.#.#
# #####

# .....
# .....
# ...#.
# .#.#.
# .###.
# .####
# #####

# .....
# ..#..
# #.##.
# #.##.
# #####
# #####
# #####

# .....
# .....
# #.#..
# #.#..
# #.#.#
# ###.#
# #####

# #####
# #####
# #####
# ##.##
# #..##
# ...#.
# .....

# #####
# ##.##
# #...#
# #...#
# ....#
# .....
# .....

# .....
# #..#.
# #..#.
# ##.##
# ##.##
# #####
# #####

# .....
# .....
# #....
# #....
# #..#.
# ##.#.
# #####

# #####
# #####
# .##.#
# .##.#
# .##..
# .#...
# .....

# .....
# #....
# #.#..
# #.#.#
# #.#.#
# #####
# #####

# .....
# #....
# #.#.#
# #.#.#
# #.###
# #.###
# #####

# .....
# ..#..
# .##.#
# .##.#
# ###.#
# ###.#
# #####

# .....
# .#.#.
# .#.#.
# ##.#.
# ##.#.
# ####.
# #####

# #####
# ###.#
# #.#.#
# #.#.#
# #...#
# .....
# .....

# .....
# .....
# #....
# #.#..
# #.#..
# ####.
# #####

# .....
# #....
# #...#
# ##..#
# ##.##
# ##.##
# #####

# #####
# #.###
# #.###
# ..#.#
# .....
# .....
# .....

# .....
# ..#..
# #.#..
# #.##.
# ####.
# #####
# #####

# #####
# ##.##
# ##..#
# .#...
# .#...
# .#...
# .....

# #####
# .##.#
# .##.#
# .#...
# .#...
# .....
# .....

# .....
# .....
# ....#
# ..#.#
# .##.#
# .##.#
# #####

# #####
# ####.
# #.##.
# ..##.
# ..##.
# ...#.
# .....

# .....
# ...#.
# ...#.
# #..#.
# #.##.
# #####
# #####

# #####
# #.###
# #.#.#
# #.#.#
# ....#
# .....
# .....

# .....
# .#...
# ##...
# ##...
# ##..#
# ###.#
# #####

# #####
# #####
# .#.##
# .#.##
# .#.##
# ....#
# .....

# #####
# .####
# .##.#
# .#..#
# .#...
# .....
# .....

# #####
# #####
# #.###
# #..#.
# #..#.
# #..#.
# .....

# .....
# .....
# .....
# #.#.#
# ###.#
# #####
# #####

# .....
# ..#..
# ..##.
# #.##.
# #.##.
# #.##.
# #####

# #####
# #####
# #.###
# #..##
# #..#.
# #..#.
# .....

# .....
# #..#.
# #..#.
# #..##
# ##.##
# #####
# #####

# .....
# .#..#
# .#..#
# .#..#
# ##.##
# #####
# #####

# .....
# ....#
# ...##
# #..##
# #.###
# #.###
# #####

# .....
# ....#
# .#..#
# ##..#
# ##..#
# ###.#
# #####

# .....
# .....
# #....
# #..#.
# ##.#.
# #####
# #####

# #####
# ####.
# ####.
# #.##.
# ...#.
# ...#.
# .....

# #####
# #####
# .##.#
# ..#..
# ..#..
# ..#..
# .....

# .....
# #....
# #..#.
# #..##
# #..##
# #.###
# #####

# #####
# ####.
# ##.#.
# .#.#.
# ...#.
# ...#.
# .....

# .....
# ...#.
# .#.#.
# ##.#.
# ##.#.
# #####
# #####

# #####
# #####
# #.##.
# #.##.
# #.#..
# .....
# .....

# .....
# .#.#.
# .#.#.
# .#.#.
# .#.#.
# #####
# #####

# .....
# #....
# #....
# #..#.
# #..##
# ##.##
# #####

# .....
# .....
# ...#.
# .#.#.
# .#.#.
# .#.##
# #####

# .....
# .....
# ...#.
# ...#.
# ..##.
# .####
# #####

# .....
# #..#.
# ##.#.
# ##.#.
# ##.#.
# #####
# #####

# .....
# ..#..
# #.#..
# #.#..
# ###.#
# ###.#
# #####

# #####
# #.###
# #.###
# #.###
# #.###
# ...#.
# .....

# .....
# .#...
# ##.#.
# ##.#.
# ##.#.
# ####.
# #####

# #####
# #.##.
# #.##.
# #.##.
# ...#.
# .....
# .....

# .....
# .#...
# .#...
# .#...
# .#..#
# ###.#
# #####

# .....
# ..#..
# ..#..
# ..#.#
# ..###
# .####
# #####

# .....
# ...#.
# ..##.
# .###.
# .###.
# #####
# #####

# #####
# #####
# ###.#
# #.#.#
# #...#
# .....
# .....

# .....
# ....#
# ..#.#
# .##.#
# .##.#
# #####
# #####

# .....
# .....
# .#...
# ##.#.
# ##.##
# ##.##
# #####

# .....
# ....#
# ....#
# ....#
# .#..#
# .#.##
# #####

# .....
# #...#
# #...#
# #...#
# #..##
# #.###
# #####

# .....
# .....
# #....
# #....
# ##..#
# ##.##
# #####

# #####
# #####
# .#.##
# .#.##
# .#..#
# .#..#
# .....

# .....
# ....#
# .#..#
# ###.#
# ###.#
# ###.#
# #####

# #####
# #.#.#
# #...#
# #...#
# #...#
# #...#
# .....

# .....
# .....
# .....
# ..#.#
# .##.#
# ###.#
# #####

# .....
# ....#
# .#..#
# .#..#
# ##..#
# ###.#
# #####

# .....
# ..#..
# ..#..
# .##..
# ###..
# ####.
# #####

# #####
# #.#.#
# #.#.#
# #.#.#
# #.#..
# .....
# .....

# .....
# #..#.
# ##.#.
# #####
# #####
# #####
# #####

# #####
# ###.#
# ###.#
# .#..#
# .....
# .....
# .....

# #####
# ##.##
# ##..#
# .#..#
# .#..#
# .#...
# .....

# #####
# ##.##
# ##.#.
# .#.#.
# .#.#.
# .#...
# .....

# .....
# .....
# .#...
# .#...
# .#.#.
# .#.#.
# #####

# .....
# .....
# .....
# #..#.
# ##.#.
# ##.##
# #####

# .....
# #.#.#
# ###.#
# #####
# #####
# #####
# #####

# #####
# #.###
# #.###
# #.###
# #.##.
# ...#.
# .....

# .....
# #....
# #..#.
# #.##.
# #.###
# #####
# #####

# .....
# .....
# ..#..
# ..#..
# .##.#
# .##.#
# #####

# #####
# #####
# .####
# ..#.#
# ..#.#
# .....
# .....

# .....
# .....
# ..#..
# ..#..
# ..#.#
# .##.#
# #####

# #####
# ##.##
# .#.##
# ...#.
# .....
# .....
# .....

# .....
# ..#..
# ..##.
# #.##.
# #.##.
# #####
# #####

# #####
# #.###
# #.###
# #.#.#
# #...#
# .....
# .....

# .....
# #....
# #..#.
# #..#.
# #..##
# #.###
# #####

# #####
# ###.#
# ###..
# ##...
# #....
# #....
# .....

# #####
# #.###
# #.###
# #.##.
# #.#..
# ..#..
# .....

# #####
# ##.##
# ##.#.
# ##.#.
# #..#.
# .....
# .....

# .....
# ..#..
# #.#..
# #.##.
# #.##.
# #####
# #####

# .....
# .#..#
# .##.#
# .##.#
# .##.#
# .##.#
# #####

# #####
# ##.##
# ##.##
# .#.##
# ...#.
# .....
# .....

# #####
# #####
# ###.#
# ##..#
# .#..#
# ....#
# .....

# #####
# #####
# .##.#
# .##..
# .##..
# .#...
# .....

# #####
# #.###
# #.###
# #.#.#
# #...#
# #....
# .....

# .....
# ....#
# ...##
# #.###
# #.###
# #####
# #####

# .....
# .....
# .#...
# .#.#.
# .###.
# #####
# #####

# #####
# .##.#
# .#..#
# ....#
# ....#
# .....
# .....

# #####
# #####
# .####
# .#.#.
# .#.#.
# .....
# .....

# .....
# .#...
# .##..
# .##..
# ###.#
# #####
# #####

# #####
# #####
# ##.##
# .#.##
# .#.#.
# .#.#.
# .....

# .....
# .....
# ....#
# .#.##
# .#.##
# #####
# #####

# .....
# #.#..
# #.#..
# #.#..
# #.#.#
# #####
# #####

# #####
# #####
# #####
# #.#.#
# #.#..
# .....
# .....

# #####
# ###.#
# ###.#
# .##.#
# .#..#
# .#...
# .....

# #####
# #####
# ####.
# ####.
# #.##.
# ..#..
# .....

# #####
# #####
# #.##.
# #.#..
# #.#..
# #....
# .....

# #####
# #####
# .###.
# ..##.
# ..##.
# ..#..
# .....

# #####
# ###.#
# ###.#
# .##.#
# .##..
# .#...
# .....

# #####
# ####.
# #.##.
# #.##.
# ..#..
# .....
# .....

# .....
# .#...
# .#.#.
# .#.#.
# .#.##
# #####
# #####

# .....
# ..#..
# .##..
# .##..
# .##.#
# ###.#
# #####

# .....
# .....
# ....#
# ..#.#
# #.#.#
# #.###
# #####

# #####
# ##.##
# ##..#
# ##..#
# .#..#
# .#...
# .....

# .....
# ...#.
# ..##.
# .####
# #####
# #####
# #####

# .....
# .....
# .....
# #.#.#
# ###.#
# ###.#
# #####

# #####
# .###.
# .###.
# .##..
# .##..
# .#...
# .....

# .....
# ...#.
# .#.#.
# .#.#.
# .#.#.
# .#.##
# #####

# #####
# .####
# .####
# ..#.#
# ..#.#
# ..#..
# .....

# #####
# #.###
# #..#.
# #..#.
# #..#.
# #..#.
# .....

# #####
# ##.##
# ##.##
# #..##
# ....#
# ....#
# .....

# .....
# ..#..
# ..##.
# #.###
# #.###
# #####
# #####

# .....
# .#...
# .#...
# .#.#.
# .#.#.
# .####
# #####

# .....
# #....
# #....
# #.#.#
# #.#.#
# #.#.#
# #####

# .....
# .....
# ...#.
# #..#.
# ##.#.
# ##.#.
# #####

# .....
# .#..#
# .#..#
# .#..#
# .##.#
# #####
# #####

# #####
# .##.#
# .##.#
# ..#..
# ..#..
# .....
# .....

# #####
# #####
# #####
# ###.#
# #.#..
# .....
# .....

# #####
# #.##.
# #.#..
# ..#..
# ..#..
# ..#..
# .....

# #####
# #####
# .##.#
# .##.#
# .##.#
# ..#.#
# .....

# .....
# ...#.
# ..##.
# #.##.
# #####
# #####
# #####

# .....
# .....
# #.#..
# #.##.
# #.##.
# #.##.
# #####

# #####
# #.###
# ..#.#
# ..#.#
# ..#..
# ..#..
# .....

# #####
# #####
# ##.##
# .#..#
# .....
# .....
# .....

# .....
# ....#
# .#..#
# .##.#
# ###.#
# #####
# #####

# #####
# .#.##
# .#.#.
# .#.#.
# .#...
# .....
# .....

# .....
# .....
# ..#..
# #.#..
# #.#..
# #.#.#
# #####

# #####
# #####
# #####
# .#.##
# ...#.
# .....
# .....

# #####
# #.###
# #.##.
# #..#.
# #..#.
# #....
# .....

# #####
# ###.#
# ###..
# ##...
# .#...
# .#...
# .....

# #####
# ##.##
# #...#
# #...#
# #...#
# #...#
# .....

# #####
# ##.##
# ##.#.
# ##.#.
# .#.#.
# .....
# .....

# .....
# ..#..
# #.#.#
# #.#.#
# #.###
# #####
# #####

# .....
# #....
# #.#..
# ###..
# ###.#
# #####
# #####

# #####
# ####.
# ###..
# .#...
# .....
# .....
# .....

# #####
# #####
# #.###
# #.###
# #.###
# #.#.#
# .....

# .....
# ..#..
# #.##.
# #.##.
# #.###
# #####
# #####

# #####
# #.###
# ..###
# ..##.
# ..##.
# ...#.
# .....

# #####
# .###.
# .#.#.
# .#...
# .#...
# .....
# .....

# .....
# .#...
# .##.#
# .##.#
# .##.#
# ###.#
# #####

# #####
# ####.
# ###..
# .##..
# .#...
# .#...
# .....

# #####
# #####
# ##.#.
# ##.#.
# .#.#.
# .#...
# .....

# #####
# ####.
# ####.
# .###.
# ..##.
# ..#..
# .....

# .....
# #....
# #....
# ##..#
# ###.#
# ###.#
# #####

# .....
# ..#..
# ..#..
# .##..
# .##..
# .###.
# #####

# .....
# #.#.#
# #.#.#
# #.#.#
# #.###
# #####
# #####

# #####
# #.###
# #.###
# ..##.
# ...#.
# .....
# .....

# .....
# .....
# #...#
# ##..#
# ##.##
# ##.##
# #####

# #####
# ##.##
# .#.##
# .#.#.
# .#...
# .....
# .....

# #####
# #####
# ##.#.
# ##.#.
# #....
# #....
# .....

# .....
# ..#..
# ..#..
# ..#..
# ..#..
# .###.
# #####

# #####
# #####
# .##.#
# .##..
# .##..
# ..#..
# .....

# #####
# #####
# .####
# .###.
# .#.#.
# .#.#.
# .....

# #####
# ####.
# .##..
# ..#..
# ..#..
# ..#..
# .....

# #####
# .####
# .#.##
# .#..#
# ....#
# .....
# .....

# .....
# .#...
# .#...
# .##..
# .###.
# .###.
# #####

# #####
# #####
# ##.##
# #...#
# ....#
# ....#
# .....

# #####
# ###.#
# #.#.#
# #.#.#
# #.#..
# #.#..
# .....

# #####
# #.##.
# #..#.
# #..#.
# #..#.
# #....
# .....

# #####
# ###.#
# .##.#
# .##..
# .#...
# .#...
# .....

# .....
# .....
# #.#..
# #.#..
# #.#.#
# #.###
# #####

# #####
# ####.
# ####.
# ##.#.
# #..#.
# ...#.
# .....

# #####
# #####
# .####
# .##.#
# ..#.#
# ..#.#
# .....

# .....
# .....
# #...#
# #.#.#
# #.#.#
# #####
# #####

# #####
# #.###
# #.###
# #..##
# #...#
# .....
# .....

# #####
# #.###
# #.###
# #.###
# ...#.
# .....
# .....

# #####
# ##.#.
# ##.#.
# ##...
# .#...
# .#...
# .....

# #####
# #####
# .###.
# .#.#.
# .#...
# .#...
# .....

# .....
# ...#.
# #..##
# #..##
# #..##
# ##.##
# #####

# #####
# #####
# #####
# #.#.#
# ..#..
# .....
# .....

# .....
# .....
# ....#
# ..#.#
# ..#.#
# #.###
# #####

# .....
# .....
# .....
# ...#.
# .#.##
# ##.##
# #####

# #####
# .####
# .##.#
# ..#..
# ..#..
# .....
# .....

# .....
# .....
# .....
# .....
# ....#
# #.#.#
# #####

# .....
# #....
# ##...
# ##...
# ##.#.
# ##.#.
# #####

# .....
# ..#.#
# ..#.#
# .##.#
# .##.#
# .##.#
# #####

# .....
# .....
# #....
# ##.#.
# ##.#.
# ##.#.
# #####

# #####
# #####
# #####
# ##.##
# #..#.
# ...#.
# .....

# #####
# #####
# ##.##
# ##.#.
# ##.#.
# #..#.
# .....

# .....
# ..#..
# #.#.#
# #.#.#
# #.#.#
# #.###
# #####

# #####
# .####
# .####
# .#.##
# .#.##
# .#.#.
# .....

# #####
# #.###
# #..##
# #...#
# #...#
# ....#
# .....

# #####
# .####
# .#.#.
# .#.#.
# .#.#.
# .....
# .....

# #####
# ##.##
# ##.##
# #..##
# #...#
# #...#
# .....

# .....
# .....
# #.#.#
# #.#.#
# ###.#
# #####
# #####

# .....
# #..#.
# #..#.
# #.###
# #####
# #####
# #####

# #####
# #.###
# #.###
# #..##
# #..##
# #...#
# .....

# #####
# #####
# ##.##
# ##.#.
# ##...
# #....
# .....

# .....
# #....
# #....
# #..#.
# ##.#.
# ##.#.
# #####

# .....
# ....#
# .#..#
# .#..#
# .#.##
# #####
# #####

# #####
# ###.#
# ##...
# #....
# .....
# .....
# .....

# #####
# ##.##
# .#..#
# .#...
# .....
# .....
# .....

# #####
# ##.##
# #..#.
# #..#.
# .....
# .....
# .....

# .....
# .....
# ..#.#
# #.#.#
# #.###
# #####
# #####

# .....
# .....
# .....
# ....#
# .#..#
# ##.##
# #####

# #####
# #####
# #.#.#
# ..#.#
# ....#
# .....
# .....

# #####
# ####.
# #.##.
# #..#.
# #..#.
# .....
# .....

# .....
# ...#.
# ...#.
# #..##
# #..##
# #.###
# #####

# #####
# ####.
# .###.
# .###.
# .#.#.
# .#.#.
# .....

# #####
# #.###
# ..###
# ..###
# ..#.#
# .....
# .....

# #####
# #####
# ####.
# ####.
# .#.#.
# .#.#.
# .....

# #####
# .#.#.
# .....
# .....
# .....
# .....
# .....

# .....
# #.#..
# #.#..
# #.##.
# ####.
# #####
# #####

# .....
# .....
# #..#.
# #..#.
# #.##.
# #####
# #####

# #####
# ##.##
# .#..#
# .#..#
# .#..#
# .#..#
# .....

# #####
# ###.#
# #.#.#
# #.#.#
# #....
# .....
# .....

# .....
# .#...
# .#...
# ##.#.
# ####.
# #####
# #####

# #####
# #####
# #####
# #####
# #.#.#
# #....
# .....

# .....
# .....
# .....
# ...#.
# ...#.
# .#.##
# #####

# #####
# ##.##
# ##.##
# ##.##
# #..##
# #..#.
# .....

# .....
# .#...
# ##...
# ###.#
# ###.#
# ###.#
# #####

# .....
# ....#
# ...##
# ...##
# .#.##
# .#.##
# #####

# .....
# #....
# #..#.
# #..#.
# #.###
# #####
# #####

# #####
# #.##.
# #.##.
# #.##.
# ..#..
# ..#..
# .....

# .....
# .#...
# .#...
# .#...
# .#...
# .#.#.
# #####

# .....
# #..#.
# #.##.
# #.##.
# ####.
# #####
# #####

# .....
# .#...
# ##.#.
# ##.##
# ##.##
# ##.##
# #####

# #####
# ##.##
# #..#.
# #..#.
# #....
# .....
# .....

# .....
# .#...
# .#..#
# .#.##
# #####
# #####
# #####

# #####
# ###.#
# ###..
# ###..
# ##...
# .#...
# .....

# #####
# .##.#
# .##.#
# .##.#
# ..#.#
# ..#.#
# .....

# #####
# .####
# .#.##
# .#.#.
# .....
# .....
# .....

# #####
# ##.#.
# #..#.
# #..#.
# ...#.
# ...#.
# .....

# #####
# #####
# .#.##
# .#.#.
# .#.#.
# .#...
# .....

# #####
# .##.#
# ..#..
# .....
# .....
# .....
# .....

# #####
# .####
# .###.
# .###.
# ..#..
# ..#..
# .....

# #####
# ###.#
# ##..#
# #...#
# #...#
# #....
# .....

# #####
# #####
# ##.##
# .#.#.
# ...#.
# ...#.
# .....

# .....
# #....
# #..#.
# #..##
# #.###
# #.###
# #####

# .....
# #....
# #.#.#
# #.#.#
# #####
# #####
# #####

# #####
# ###.#
# ###.#
# .##.#
# ..#.#
# ..#.#
# .....

# .....
# .....
# ..#..
# ..##.
# ..##.
# .###.
# #####

# .....
# ..#.#
# .##.#
# .##.#
# ###.#
# #####
# #####

# .....
# ...#.
# ...#.
# ..##.
# #.###
# #####
# #####

# #####
# ###.#
# #.#.#
# #.#.#
# ..#..
# .....
# .....

# .....
# ..#..
# .##..
# .###.
# .###.
# .###.
# #####

# .....
# .....
# #.#.#
# #.#.#
# #.#.#
# #.###
# #####

# #####
# ####.
# ####.
# ####.
# #.##.
# ..#..
# .....

# #####
# #####
# ###.#
# .##.#
# .##.#
# ..#..
# .....

# #####
# ###.#
# .#..#
# .#..#
# .#..#
# .#...
# .....

# #####
# ##.##
# ##..#
# ##...
# .#...
# .....
# .....

# #####
# ##.#.
# #..#.
# #....
# .....
# .....
# .....

# #####
# #####
# .#.##
# .#.##
# ...#.
# ...#.
# .....

# #####
# #.###
# #.##.
# #.##.
# #..#.
# #....
# .....

# #####
# #.###
# #.###
# #..##
# ...#.
# .....
# .....

# .....
# .....
# ..#.#
# #.#.#
# #.#.#
# #.###
# #####

# .....
# ...#.
# .#.#.
# .#.#.
# #####
# #####
# #####

# #####
# #####
# .#.##
# ...##
# ...#.
# .....
# .....

# .....
# #....
# #..#.
# ##.##
# ##.##
# ##.##
# #####

# #####
# ##.##
# .#.##
# ....#
# ....#
# .....
# .....

# .....
# #..#.
# #.##.
# #####
# #####
# #####
# #####

# .....
# #.#..
# #.##.
# #.##.
# #.##.
# ####.
# #####

# #####
# ##.##
# .#..#
# .#..#
# .#...
# .#...
# .....

# .....
# .....
# .....
# ...#.
# .#.#.
# .####
# #####

# #####
# ###.#
# ###.#
# ###..
# .##..
# ..#..
# .....

# .....
# ..#..
# #.#..
# #.#.#
# #####
# #####
# #####

# .....
# ..#.#
# .##.#
# .##.#
# .####
# #####
# #####

# #####
# .####
# .##.#
# .##.#
# ..#..
# ..#..
# .....

# #####
# ####.
# .#.#.
# .#.#.
# .#.#.
# .#...
# .....

# #####
# #####
# .####
# .##.#
# ..#..
# ..#..
# .....

# #####
# #####
# ###.#
# ###.#
# #.#.#
# #.#..
# .....

# #####
# #####
# #####
# .####
# .#.#.
# ...#.
# .....

# #####
# ####.
# ###..
# .#...
# .#...
# .#...
# .....

# #####
# #####
# .##.#
# .##.#
# .#...
# .....
# .....

# #####
# #####
# ####.
# ####.
# .#.#.
# .#...
# .....

# #####
# ###.#
# ###.#
# .#..#
# .#..#
# .....
# .....

# .....
# #....
# #....
# #.#..
# #.#..
# #.#.#
# #####

# #####
# .###.
# .###.
# .##..
# ..#..
# ..#..
# .....

# #####
# ##.##
# ##.##
# ##.##
# #..#.
# .....
# .....

# .....
# ..#.#
# .####
# .####
# #####
# #####
# #####

# .....
# .....
# ....#
# #...#
# ##..#
# ##.##
# #####

# #####
# ##.##
# .#.##
# .#.##
# .#.#.
# .....
# .....

# #####
# #####
# .###.
# .#.#.
# ...#.
# .....
# .....

# .....
# ....#
# ....#
# ..#.#
# .##.#
# #####
# #####

# .....
# .....
# #....
# ##.#.
# ##.##
# ##.##
# #####

# .....
# #..#.
# #..#.
# ##.#.
# #####
# #####
# #####

# .....
# #.#..
# #.##.
# #.##.
# #.###
# #####
# #####

# .....
# .#...
# .#..#
# .##.#
# .####
# #####
# #####

# .....
# .#...
# .#...
# .##..
# ###.#
# #####
# #####

# .....
# ..#..
# .##..
# .##..
# ###..
# ###.#
# #####

# #####
# #####
# ####.
# ##.#.
# ##...
# .#...
# .....

# .....
# #....
# #..#.
# #..#.
# #.##.
# #.###
# #####

# .....
# .....
# .....
# ..#..
# .##.#
# ###.#
# #####

# .....
# #...#
# #..##
# ##.##
# ##.##
# ##.##
# #####

# .....
# #....
# ##..#
# ##..#
# ##.##
# ##.##
# #####

# .....
# ...#.
# ...#.
# .#.##
# #####
# #####
# #####

# .....
# .#...
# .##..
# .###.
# ####.
# ####.
# #####

# .....
# .....
# ...#.
# ..##.
# #.##.
# #####
# #####

# .....
# .....
# ....#
# ....#
# #.#.#
# #.###
# #####

# .....
# .....
# ...#.
# ...#.
# .#.#.
# ####.
# #####

# #####
# #####
# #.##.
# #..#.
# #....
# .....
# .....

# .....
# .#.#.
# .#.#.
# .#.#.
# ####.
# #####
# #####

# #####
# #####
# .####
# ..##.
# ...#.
# ...#.
# .....

# #####
# ####.
# ##.#.
# #..#.
# #..#.
# #....
# .....

# .....
# .....
# .....
# #.#..
# #.#..
# ####.
# #####

# #####
# #.###
# #.##.
# #.##.
# ..##.
# ...#.
# .....

# #####
# #####
# ###.#
# #.#.#
# #...#
# ....#
# .....

# #####
# ##.##
# ##.##
# #..##
# ...##
# ...#.
# .....

# .....
# #....
# #.#..
# #.#.#
# #.#.#
# #.#.#
# #####

# .....
# .#.#.
# ##.#.
# #####
# #####
# #####
# #####

# .....
# #...#
# #.#.#
# #.#.#
# #.###
# #####
# #####

# #####
# #####
# #####
# #####
# #####
# .#.#.
# .....

# .....
# ...#.
# ...#.
# ..##.
# .###.
# .####
# #####

# .....
# #..#.
# #..##
# ##.##
# ##.##
# #####
# #####

# .....
# .....
# ....#
# ..#.#
# .####
# .####
# #####

# #####
# #####
# ##.##
# .#.##
# .#.#.
# ...#.
# .....

# .....
# ..#..
# ..##.
# ..##.
# #.##.
# #####
# #####

# .....
# .....
# ..#..
# .##.#
# .##.#
# .####
# #####

# #####
# ##.##
# ##.##
# #..##
# #..#.
# ...#.
# .....

# #####
# #####
# .##.#
# ..#.#
# ..#.#
# ..#.#
# .....

# .....
# .#.#.
# .###.
# .###.
# .###.
# .####
# #####

# #####
# .####
# ..###
# ..###
# ..###
# ..#.#
# .....

# #####
# ####.
# #.##.
# #.##.
# ..##.
# ...#.
# .....

# #####
# ###.#
# ###.#
# ###.#
# #.#.#
# ....#
# .....

# .....
# ..#..
# #.#..
# #.#..
# #.#..
# ####.
# #####

# .....
# ...#.
# ...#.
# ...#.
# #..##
# ##.##
# #####

# #####
# #.###
# #.###
# #.##.
# #.##.
# #..#.
# .....

# .....
# .#...
# .#...
# .#.#.
# .###.
# .####
# #####

# #####
# ###.#
# .#..#
# .....
# .....
# .....
# .....

# .....
# ..#..
# ..#..
# ..##.
# ..##.
# #.###
# #####

# .....
# ...#.
# #..#.
# #..#.
# #..#.
# ##.#.
# #####

# .....
# ..#..
# .###.
# ####.
# ####.
# #####
# #####

# .....
# .....
# .#...
# .#...
# .##..
# ###.#
# #####

# #####
# .#.##
# .#.##
# .#..#
# .#..#
# .....
# .....

# #####
# ###.#
# ###.#
# ###.#
# .#..#
# .#..#
# .....

# .....
# ...#.
# .#.##
# .####
# #####
# #####
# #####

# #####
# #####
# #####
# #.#.#
# #.#.#
# #...#
# .....

# .....
# ....#
# #...#
# #..##
# ##.##
# ##.##
# #####

# #####
# ###.#
# ###.#
# .##..
# .##..
# ..#..
# .....

# .....
# .....
# .#...
# .##.#
# .##.#
# ###.#
# #####

# #####
# #####
# .####
# .####
# .##.#
# ..#..
# .....

# #####
# ####.
# #.##.
# ...#.
# ...#.
# .....
# .....

# #####
# #####
# #####
# #####
# ####.
# .#.#.
# .....

# .....
# ..#..
# ..##.
# #.##.
# #.###
# #.###
# #####

# #####
# #####
# .##.#
# .#..#
# .#...
# .....
# .....

# #####
# .#.##
# .#..#
# .#..#
# ....#
# ....#
# .....

# #####
# .####
# .#.##
# .#.##
# .#.##
# ....#
# .....

# #####
# #####
# ##.##
# #..##
# #..#.
# #..#.
# .....

# #####
# ####.
# ###..
# ###..
# #.#..
# ..#..
# .....

# .....
# .....
# .....
# #....
# #.#..
# ###.#
# #####

# #####
# #####
# #####
# #####
# #.#.#
# #.#..
# .....

# #####
# #.###
# #.#.#
# #.#..
# ..#..
# .....
# .....

# .....
# .#..#
# .#.##
# ##.##
# ##.##
# #####
# #####

# #####
# .####
# ..##.
# ..#..
# ..#..
# ..#..
# .....

# #####
# #####
# ##.##
# #..#.
# #....
# .....
# .....

# .....
# ..#..
# ..#.#
# ..#.#
# .##.#
# ###.#
# #####

# .....
# ...#.
# #..#.
# #..##
# #.###
# #####
# #####

# .....
# .....
# ...#.
# ...#.
# ..###
# #.###
# #####

# .....
# .....
# .....
# .#.#.
# .####
# #####
# #####

# .....
# #..#.
# #..#.
# #..#.
# #.##.
# ####.
# #####

# .....
# ..#..
# ..#..
# #.##.
# #####
# #####
# #####

# .....
# .#...
# .#...
# .#...
# .#..#
# .##.#
# #####

# .....
# ...#.
# ...#.
# ..###
# #.###
# #.###
# #####

# #####
# ###.#
# ###.#
# #.#..
# #....
# .....
# .....

# #####
# #.###
# #.###
# #.#.#
# #...#
# #...#
# .....

# #####
# #.#.#
# #...#
# #...#
# #....
# .....
# .....

# .....
# .....
# .....
# #.#..
# #.##.
# #.##.
# #####

# .....
# .....
# ..#.#
# .##.#
# .####
# #####
# #####

# #####
# #####
# ##.##
# #..#.
# #....
# #....
# .....

# .....
# ...#.
# ..##.
# ..##.
# ..##.
# .###.
# #####

# #####
# #####
# ###.#
# #.#.#
# #.#.#
# #.#.#
# .....

# .....
# #....
# #....
# ##.#.
# ##.##
# ##.##
# #####

# #####
# #####
# ##.#.
# #....
# #....
# .....
# .....

# #####
# .##.#
# .##..
# .##..
# .##..
# ..#..
# .....

# #####
# #.###
# ...##
# ...#.
# ...#.
# ...#.
# .....

# .....
# .#...
# .#...
# .#..#
# .#.##
# .#.##
# #####

# .....
# .....
# .....
# .....
# .#.#.
# ##.##
# #####

# .....
# .....
# .#..#
# .#.##
# .####
# .####
# #####

# #####
# .####
# .#.##
# .#.#.
# .#...
# .#...
# .....

# #####
# ##.##
# ##.##
# ##.#.
# ##.#.
# #..#.
# .....

# .....
# ...#.
# ...##
# ..###
# ..###
# .####
# #####

# .....
# .....
# ..#..
# ..#.#
# #.#.#
# #####
# #####

# #####
# #####
# #####
# #####
# ###.#
# #.#..
# .....

# .....
# .....
# .....
# .....
# .....
# #.#.#
# #####

# #####
# #####
# .####
# .#.##
# .#.##
# ....#
# .....

# #####
# .#.##
# .#..#
# .#..#
# .#...
# .#...
# .....

# #####
# #####
# ####.
# #.#..
# #.#..
# #....
# .....

# #####
# ##.##
# .#.##
# .#..#
# .#..#
# ....#
# .....

# #####
# ##.#.
# ##.#.
# ##.#.
# #..#.
# #..#.
# .....

# #####
# ##.##
# #..#.
# #..#.
# #..#.
# #..#.
# .....

# #####
# #####
# #.###
# #.##.
# #.##.
# ..#..
# .....

# .....
# ..#.#
# ..#.#
# #.###
# #.###
# #.###
# #####

# #####
# #####
# #####
# ###.#
# ##..#
# #....
# .....

# .....
# .#...
# ##...
# ##.#.
# ##.#.
# #####
# #####

# #####
# #####
# #.#.#
# ..#.#
# ..#..
# ..#..
# .....

# .....
# ...#.
# ...#.
# #..#.
# #.##.
# #.##.
# #####

# #####
# #.#.#
# #.#..
# #....
# .....
# .....
# .....

# #####
# #.#.#
# #.#.#
# ..#.#
# ..#.#
# .....
# .....

# #####
# #.#.#
# #.#.#
# #.#.#
# ....#
# .....
# .....

# #####
# ##.##
# ##..#
# ##..#
# ##..#
# .#...
# .....

# .....
# ....#
# ....#
# .#..#
# ###.#
# #####
# #####

# #####
# #.###
# ..#.#
# ..#.#
# ..#.#
# ..#.#
# .....

# #####
# #.#.#
# #.#.#
# ..#.#
# ....#
# ....#
# .....

# #####
# #.###
# ..##.
# ..#..
# ..#..
# ..#..
# .....

# .....
# .....
# .#..#
# .##.#
# .##.#
# .####
# #####

# #####
# .####
# .##.#
# .##..
# ..#..
# .....
# .....

# #####
# #####
# ####.
# .#.#.
# .#...
# .....
# .....

# #####
# #####
# #####
# .####
# ..#.#
# ..#..
# .....

# #####
# ##.##
# ##.##
# ##..#
# ##..#
# #...#
# .....

# #####
# .####
# .####
# .###.
# .#.#.
# .#.#.
# .....

# .....
# .#.#.
# .#.#.
# .#.#.
# .###.
# #####
# #####

# #####
# .####
# .####
# .#.##
# .#.##
# ...#.
# .....

# .....
# .#...
# .#..#
# .#..#
# .##.#
# #####
# #####

# .....
# #..#.
# #..#.
# #..#.
# ##.##
# ##.##
# #####

# .....
# ..#.#
# ..###
# ..###
# .####
# #####
# #####

# #####
# #####
# #####
# .#.##
# .#..#
# .#...
# .....

# #####
# #####
# ###.#
# ##..#
# .#...
# .....
# .....

# #####
# #####
# #####
# ##.#.
# #..#.
# #..#.
# .....

# #####
# ###.#
# .##.#
# ..#..
# ..#..
# ..#..
# .....

# .....
# .....
# #....
# ##...
# ##.#.
# #####
# #####

# #####
# #####
# .##.#
# .##..
# .#...
# .#...
# .....

# #####
# ###.#
# ###.#
# ##..#
# ##..#
# #...#
# .....

# #####
# #####
# #####
# .####
# .#.##
# ...#.
# .....

# .....
# ..#..
# ..#..
# ..#..
# .##.#
# ###.#
# #####

# .....
# .....
# ..#..
# .##.#
# .####
# .####
# #####

# .....
# ..#..
# .##..
# .##.#
# .##.#
# .##.#
# #####

# .....
# .#...
# .#.#.
# .#.##
# .#.##
# #####
# #####

# #####
# #####
# ####.
# ###..
# .#...
# .#...
# .....

# .....
# ...#.
# ...#.
# .#.#.
# .###.
# ####.
# #####

# #####
# .##.#
# .##.#
# ..#..
# .....
# .....
# .....

# .....
# .....
# #....
# #....
# #.#.#
# #.#.#
# #####

# .....
# .....
# .....
# #.#..
# #.#.#
# #.###
# #####

# .....
# ...#.
# .#.#.
# .#.#.
# .#.##
# #####
# #####

# .....
# .....
# ...#.
# #.##.
# #.##.
# #####
# #####

# .....
# .....
# .#...
# .#...
# .#..#
# ###.#
# #####

# .....
# .....
# .#..#
# .#.##
# .#.##
# #####
# #####

# .....
# #..#.
# #..#.
# #..#.
# ##.#.
# ##.##
# #####

# #####
# ##.##
# ##.##
# ##.##
# #..##
# #...#
# .....

# #####
# ##.#.
# ##...
# #....
# #....
# .....
# .....

# .....
# .#...
# ##..#
# ##.##
# ##.##
# #####
# #####

# #####
# ##.#.
# ##.#.
# #..#.
# ...#.
# .....
# .....

# #####
# .####
# ..#.#
# ..#.#
# ..#.#
# .....
# .....

# .....
# .#.#.
# .#.#.
# ##.#.
# ##.#.
# ##.#.
# #####

# #####
# #####
# #####
# .#.#.
# .#.#.
# .#...
# .....

# .....
# .....
# ....#
# ...##
# #.###
# #####
# #####

# .....
# .....
# .....
# .#.#.
# .#.##
# #####
# #####

# .....
# #....
# #....
# #.#..
# #.#..
# ###.#
# #####

# .....
# .#...
# .#.#.
# ##.#.
# ####.
# #####
# #####

# .....
# ..#..
# .##..
# .##.#
# #####
# #####
# #####

# #####
# .##.#
# ..#.#
# ..#.#
# .....
# .....
# .....

# #####
# #####
# #.##.
# #.#..
# .....
# .....
# ....."""

# data=data.split("\n\n")
# data=[[list(y) for y in x.split("\n")] for x in data]
# # print(data)
# locks=[]
# keys=[]

# for lk in data:
#     combo=[0]*len(lk[0])
#     for i in range(len(lk)):
#         for j in range(len(lk[0])):
#             if lk[i][j] == "#":
#                 combo[j]+=1
                
#     if lk[0][0] == "#":
#         locks.append(combo)
#     else:
#         keys.append(combo)

# ans=0
# for l in locks:
#     for k in keys:
#         flag=True
#         for j in range(len(k)):
#             if  l[j]+k[j]>7:
#                 flag=False
#                 break
#         if flag:
#             ans+=1
# print(ans)   

